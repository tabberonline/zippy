[{"/home/vikraant/GitHub/zippy/src/index.js":"1","/home/vikraant/GitHub/zippy/src/App.js":"2","/home/vikraant/GitHub/zippy/src/app/store.js":"3","/home/vikraant/GitHub/zippy/src/screens/Error404.js":"4","/home/vikraant/GitHub/zippy/src/screens/PolicyScreen/PolicyScreen.js":"5","/home/vikraant/GitHub/zippy/src/screens/ContactScreen/ContactScreen.js":"6","/home/vikraant/GitHub/zippy/src/screens/PortfolioScreen/PortfolioScreen.js":"7","/home/vikraant/GitHub/zippy/src/screens/AboutScreen/AboutScreen.js":"8","/home/vikraant/GitHub/zippy/src/screens/DisplayScreen/DisplayScreen.js":"9","/home/vikraant/GitHub/zippy/src/screens/TermsScreen/TermsScreen.js":"10","/home/vikraant/GitHub/zippy/src/features/user/userSlice.js":"11","/home/vikraant/GitHub/zippy/src/screens/HomeScreen/HomeScreen.js":"12","/home/vikraant/GitHub/zippy/src/AdminServices/baseUrl.js":"13","/home/vikraant/GitHub/zippy/src/components/Header/Header1.js":"14","/home/vikraant/GitHub/zippy/src/components/CodingCard/CodingCard.js":"15","/home/vikraant/GitHub/zippy/src/components/ContestCard/ContestCard.js":"16","/home/vikraant/GitHub/zippy/src/components/Footer/Footer.js":"17","/home/vikraant/GitHub/zippy/src/components/Loader/Loader.js":"18","/home/vikraant/GitHub/zippy/src/AdminServices/AdminService.js":"19","/home/vikraant/GitHub/zippy/src/utility/localStorageControl.js":"20","/home/vikraant/GitHub/zippy/src/components/ProjectCard/ProjectCard.js":"21","/home/vikraant/GitHub/zippy/src/components/modals/ShareModal.js":"22","/home/vikraant/GitHub/zippy/src/components/CodingCard/CodingCardDisplay.js":"23","/home/vikraant/GitHub/zippy/src/components/Header/Header.js":"24","/home/vikraant/GitHub/zippy/src/components/ProjectCard/ProjectCardDisplay.js":"25","/home/vikraant/GitHub/zippy/src/components/modals/CodingProfileModal.js":"26","/home/vikraant/GitHub/zippy/src/components/modals/ContestProfileModal.js":"27","/home/vikraant/GitHub/zippy/src/components/modals/ProjectModal.js":"28","/home/vikraant/GitHub/zippy/src/components/modals/AttachResume.js":"29","/home/vikraant/GitHub/zippy/src/components/modals/SentHistory.js":"30","/home/vikraant/GitHub/zippy/src/components/modals/SendViaEmail.js":"31","/home/vikraant/GitHub/zippy/src/components/modals/LinkedInProfile.js":"32","/home/vikraant/GitHub/zippy/src/components/UpdateModals/UpdatePortfolioModal.js":"33","/home/vikraant/GitHub/zippy/src/components/Cookie/CookiePopup.js":"34","/home/vikraant/GitHub/zippy/src/components/ContestCard/ContestCardDisplay.js":"35","/home/vikraant/GitHub/zippy/src/components/modals/PortfolioModal.js":"36","/home/vikraant/GitHub/zippy/src/components/FAQCard/FAQCard.js":"37","/home/vikraant/GitHub/zippy/src/components/FeatureCard/FeatureCard.js":"38","/home/vikraant/GitHub/zippy/src/components/AchievementCard/AchievementCard.js":"39","/home/vikraant/GitHub/zippy/src/AdminServices/dataService.js":"40","/home/vikraant/GitHub/zippy/src/components/GoogleBtn.js":"41","/home/vikraant/GitHub/zippy/src/components/UpdateModals/UpdateProject.js":"42","/home/vikraant/GitHub/zippy/src/components/UpdateModals/UpdateContestProfile.js":"43","/home/vikraant/GitHub/zippy/src/components/UpdateModals/UpdateCodingProfile.js":"44","/home/vikraant/GitHub/zippy/src/components/MailPreview/MailPreview.js":"45","/home/vikraant/GitHub/zippy/src/components/modals/AddCourseModal.js":"46"},{"size":493,"mtime":1628789410930,"results":"47","hashOfConfig":"48"},{"size":1558,"mtime":1635866257342,"results":"49","hashOfConfig":"48"},{"size":684,"mtime":1628789410746,"results":"50","hashOfConfig":"48"},{"size":638,"mtime":1625291301747,"results":"51","hashOfConfig":"48"},{"size":8912,"mtime":1625291301747,"results":"52","hashOfConfig":"48"},{"size":4405,"mtime":1628789410930,"results":"53","hashOfConfig":"48"},{"size":9637,"mtime":1636179634083,"results":"54","hashOfConfig":"48"},{"size":4092,"mtime":1633128066587,"results":"55","hashOfConfig":"48"},{"size":10925,"mtime":1635869839873,"results":"56","hashOfConfig":"48"},{"size":8915,"mtime":1625291301747,"results":"57","hashOfConfig":"48"},{"size":3414,"mtime":1633127925290,"results":"58","hashOfConfig":"48"},{"size":8014,"mtime":1633128485658,"results":"59","hashOfConfig":"48"},{"size":160,"mtime":1625291301739,"results":"60","hashOfConfig":"48"},{"size":2755,"mtime":1628789410774,"results":"61","hashOfConfig":"48"},{"size":10468,"mtime":1628789410754,"results":"62","hashOfConfig":"48"},{"size":10153,"mtime":1628789410758,"results":"63","hashOfConfig":"48"},{"size":759,"mtime":1625291301743,"results":"64","hashOfConfig":"48"},{"size":385,"mtime":1625291301743,"results":"65","hashOfConfig":"48"},{"size":2426,"mtime":1635866257342,"results":"66","hashOfConfig":"48"},{"size":4721,"mtime":1635866257342,"results":"67","hashOfConfig":"48"},{"size":8960,"mtime":1635867945150,"results":"68","hashOfConfig":"48"},{"size":2562,"mtime":1628789410910,"results":"69","hashOfConfig":"48"},{"size":1196,"mtime":1625291301743,"results":"70","hashOfConfig":"48"},{"size":2250,"mtime":1628789410774,"results":"71","hashOfConfig":"48"},{"size":2150,"mtime":1633558220310,"results":"72","hashOfConfig":"48"},{"size":6057,"mtime":1635871706599,"results":"73","hashOfConfig":"48"},{"size":5661,"mtime":1635871844205,"results":"74","hashOfConfig":"48"},{"size":4728,"mtime":1635866257342,"results":"75","hashOfConfig":"48"},{"size":4947,"mtime":1635866257342,"results":"76","hashOfConfig":"48"},{"size":4211,"mtime":1635866257342,"results":"77","hashOfConfig":"48"},{"size":4626,"mtime":1635866257342,"results":"78","hashOfConfig":"48"},{"size":4419,"mtime":1635866257342,"results":"79","hashOfConfig":"48"},{"size":8962,"mtime":1635866257342,"results":"80","hashOfConfig":"48"},{"size":786,"mtime":1635866257342,"results":"81","hashOfConfig":"48"},{"size":1323,"mtime":1625291301743,"results":"82","hashOfConfig":"48"},{"size":8569,"mtime":1635866257342,"results":"83","hashOfConfig":"48"},{"size":1298,"mtime":1625291301743,"results":"84","hashOfConfig":"48"},{"size":572,"mtime":1625291301743,"results":"85","hashOfConfig":"48"},{"size":660,"mtime":1625291301743,"results":"86","hashOfConfig":"48"},{"size":2269,"mtime":1628789410722,"results":"87","hashOfConfig":"48"},{"size":2591,"mtime":1633774256422,"results":"88","hashOfConfig":"48"},{"size":4394,"mtime":1635866257342,"results":"89","hashOfConfig":"48"},{"size":5585,"mtime":1635866257342,"results":"90","hashOfConfig":"48"},{"size":5421,"mtime":1635866257342,"results":"91","hashOfConfig":"48"},{"size":2848,"mtime":1628789410786,"results":"92","hashOfConfig":"48"},{"size":3223,"mtime":1636179900963,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"lrrdau",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/vikraant/GitHub/zippy/src/index.js",[],["192","193"],"/home/vikraant/GitHub/zippy/src/App.js",[],"/home/vikraant/GitHub/zippy/src/app/store.js",[],"/home/vikraant/GitHub/zippy/src/screens/Error404.js",[],"/home/vikraant/GitHub/zippy/src/screens/PolicyScreen/PolicyScreen.js",[],"/home/vikraant/GitHub/zippy/src/screens/ContactScreen/ContactScreen.js",[],"/home/vikraant/GitHub/zippy/src/screens/PortfolioScreen/PortfolioScreen.js",["194","195"],"/home/vikraant/GitHub/zippy/src/screens/AboutScreen/AboutScreen.js",[],"/home/vikraant/GitHub/zippy/src/screens/DisplayScreen/DisplayScreen.js",["196","197"],"import React, {useEffect, useState} from 'react';\nimport { useSelector } from \"react-redux\";\nimport '../../styles/HelperStyles.css';\nimport './DisplayScreen.css';\nimport Footer from '../../components/Footer/Footer';\nimport { ErrorToast, ReversePortalMap } from '../../utility/localStorageControl';\nimport CodingCardDisplay from '../../components/CodingCard/CodingCardDisplay';\nimport ContestCardDisplay from '../../components/ContestCard/ContestCardDisplay';\nimport ProjectCardDisplay from '../../components/ProjectCard/ProjectCardDisplay';\nimport CookiePopup from '../../components/Cookie/CookiePopup';\nimport {isMobile} from 'react-device-detect';\nimport Axios from 'axios';\nimport {API_ENDPOINT} from '../../AdminServices/baseUrl';\nimport Header1 from '../../components/Header/Header1';\nimport Loader from '../../components/Loader/Loader';\nimport { BsFillEyeFill } from 'react-icons/bs';\nimport { AiOutlineLinkedin } from 'react-icons/ai';\nimport { useHistory } from 'react-router-dom';\nimport { userToken } from '../../features/user/userSlice';\nimport AdminService from '../../AdminServices/AdminService';\nconst API_KEY = 'AJYGpQcugTouk4olbrEfWz';\nconst processAPI = 'https://cdn.filestackcontent.com';\n\nfunction DisplayScreen() {\n  const accessToken = useSelector(userToken);\n  const [userData, setData] = useState([]);\n  const [loader, setloader] = useState(false);\n  const [RankWidgets, setRank] = useState([]);\n  const [ContestWidgets, setContests] = useState([]);\n  const [ProjectWidgets, setProjects] = useState([]);\n  const [showCookiePopup, setShowCookiePopup] = useState(false);\n  const [cookieStatus, setCookieStatus] = useState(null);\n\n  useEffect(() => {\n    const getIDFromURL = () => {\n      setloader(true);\n      return window.location.href.split('?')[1].split('=')[1];\n    };\n    const user_id = getIDFromURL();\n\n    Axios.get(`${API_ENDPOINT}/user/guest/resume?id=${user_id}`)\n      .then(resp => resp.data)\n        .then(data => {\n          setData([data]);\n          setloader(false);\n          adjustData(data);\n        })\n      .catch(error => {\n        ErrorToast(\"Some Error Occured.\")\n        setloader(false);\n      })\n  }, [])\n\n  const showPopupHandler = () => {\n    setShowCookiePopup(true);\n  };\n  const hidePopupHandler = () => {\n    setShowCookiePopup(false);\n  };\n\n  const generateUUID = () => {\n    return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n      (c ^ ((crypto.getRandomValues(new Uint8Array(1))[0] & 15) >> (c / 4))).toString(16)\n    );\n  };\n\n  const setCookie1 = (cname,cvalue,exdays) => {\n    const d = new Date();\n    d.setTime(d.getTime() + (exdays*24*60*60*1000));\n    let expires = \"expires=\" + d.toGMTString();\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n  };\n\n  const setCookie2 = (cname,cvalue) => {\n    const d = new Date();\n    d.setTime(d.getTime() + (60*60*1000));\n    let expires = \"expires=\" + d.toGMTString();\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n  };\n  \n  const getCookie = (cname) => {\n    let name = cname + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(';');\n\n    for(let i = 0; i <ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  };\n\n  const checkCookie = (cname) => {\n    const check = getCookie(cname);\n    if(check) {\n      return true;\n    }\n    return false;\n  };\n  \n  const cookieAcceptStatus = (checkCookie1) => {\n    AdminService.GetCookie()\n      .then(responce => {\n        if(responce.data){\n          setCookieStatus(true);\n        } else {\n          setCookieStatus(false);\n          if(!cookieStatus) {\n            if(!checkCookie1){\n              showPopupHandler();\n            }\n          }\n        }\n      })\n      .catch(() => {\n        ErrorToast('Something Went Wrong!');\n      })\n  };\n  \n  const acceptCookieHandler = () => {\n    let uuid = null;\n    let isLoggedin;\n\n    accessToken === null ? isLoggedin = false : isLoggedin = true;\n    const checkCookie1 = checkCookie('cookieAccepted');\n\n    if(!checkCookie1){\n      setCookie1('cookieAccepted', true, 365);\n      uuid = generateUUID();\n      setCookie2('uuid', uuid);\n    }\n    if(isLoggedin) {\n      AdminService.SetCookie()\n        .then((res) => {\n          console.log(res.data);\n        })\n        .catch(() => {\n          ErrorToast('Something went wrong');\n        })\n    }\n    setShowCookiePopup(false);\n  };\n  \n\n  useEffect(() => {\n    let isLoggedin;\n    accessToken === null ? isLoggedin = false : isLoggedin = true;\n    const checkCookie1 = checkCookie('cookieAccepted');\n\n    if(isLoggedin) {\n      cookieAcceptStatus(checkCookie1);\n\n      if(checkCookie1) {\n        AdminService.SetCookie()\n        .then((res) => {\n          console.log(res.data);\n        })\n        .catch(() => {\n          ErrorToast('Something went wrong');\n        })\n      }\n      \n      if(cookieStatus && !checkCookie1) {\n        setCookie1('cookieAccepted', true, 365);\n        const checkCookie2 = checkCookie('uuid');\n        if(!checkCookie2) {\n          let uuid = generateUUID();\n          setCookie2('uuid', uuid);\n        }\n      }\n    } else {\n      if(!checkCookie1) {\n        showPopupHandler();\n      }\n    }\n    // if cookie2 has expired then generate new uuid\n    if(checkCookie1) {\n      const checkCookie2 = checkCookie('uuid');\n      if(!checkCookie2) {\n        let uuid = generateUUID();\n        setCookie2('uuid', uuid);\n      }\n    }\n  }, [accessToken, cookieStatus]);\n\n  const adjustData = (data) => {\n    var abc = data && data.rank_widgets && data.rank_widgets.filter(profile => profile.invisible === false);\n    setRank(abc);\n    abc = data && data.contest_widgets && data.contest_widgets.filter(profile => profile.invisible === false);\n    setContests(abc);\n    abc = data && data.personal_projects && data.personal_projects.filter(profile => profile.invisible === false);\n    setProjects(abc)\n  }\n\n  return (\n    <div className=\"#display-screen\">\n    {loader ? <Loader /> : null}\n      <Header1 open={() => setloader(true)} close={() => setloader(false)} />\n      <div className=\"mw1100\">\n        <div className=\"p-40 flexColumn display-section\">\n          {userData.map(user => (\n            <div className=\"flexColumn\" key={user.user_id}>\n              <p className=\"title\">{user.portfolio.title}</p>\n              <hr style={{color : '#717070', width: '80%', margin: 'auto', marginTop: 10}} />\n              <div className=\"flexColumn info-sec\">\n                <p className=\"name mb-20 pl-20\">Hello! I am <strong>{user.name}</strong>, a student of  <strong>{user.portfolio.college.split(',')[0]}</strong>.</p>\n                <p className=\"desc\">{user.portfolio.description}</p>\n              </div>\n              <div className=\"socialsRow\">\n                {user.portfolio.cloud_resume_link !== 'https://' ? (\n                  <div className=\"flexColumn mv-20\">\n                    <p className=\"card-heading mb-20\">Resume</p>\n                    <div className=\"grow1 attach-resume flexRow flexAlignCenter flexEvenly\">\n                      <p className=\"resume-head\">View Attached PDF</p>\n                      <BsFillEyeFill onClick={() => window.open(user.portfolio.cloud_resume_link)} className=\"grow2 attach-resume__icon\" />\n                    </div>\n                  </div>\n                ) : null} \n                {user.portfolio.social_profiles[0] && user.portfolio.social_profiles[0].link !== '' ? (\n                  <div className=\"flexColumn mv-20\">\n                    <p className=\"card-heading mb-20\">LinkedIn Profile</p>\n                    <div className=\"grow1 attach-resume flexRow flexAlignCenter flexEvenly\">\n                      <p className=\"resume-head\">View LinkedIn Profile</p>\n                      <AiOutlineLinkedin onClick={() => window.open(user.portfolio.social_profiles[0].link)} className=\"grow2 attach-resume__icon\" />\n                    </div>\n                  </div>\n                ) : null}  \n              </div>                            \n              {\n                RankWidgets.length > 0 ? (\n                  <div className=\"coding-profile mv-20\">\n                    <p className=\"card-heading mb-20\">Coding Profile</p>\n                    <div className=\"flexRow flexWrap\">\n                      { \n                        RankWidgets.map(profile => (\n                            <CodingCardDisplay url={profile.link} name={ReversePortalMap.get(profile.website_id.toString()).name} id={profile.website_username} rank={profile.rank} logo={ReversePortalMap.get(profile.website_id.toString()).logo} />\n                        ))\n                      }\n                    </div>\n                  </div>\n                ) : null\n              }\n              {\n                ContestWidgets.length > 0 ? (\n                  <div className=\"coding-profile mv-20\">\n                    <p className=\"card-heading mb-20\">Coding Contests</p>\n                    <div className=\"flexRow flexWrap\">\n                      { \n                        ContestWidgets.map(profile => (\n                            <ContestCardDisplay card_id={profile.id} name={ReversePortalMap.get(profile.website_id.toString()).name} id={profile.website_username} rank={profile.rank} logo={ReversePortalMap.get(profile.website_id.toString()).logo} contest={profile.contest_name} />\n                        ))\n                      }\n                    </div>\n                  </div>\n                ) : null\n              }\n              {\n                ProjectWidgets.length > 0 ? (\n                  <div className=\"coding-profile mv-20\">\n                    <p className=\"card-heading mb-20\">Projects</p>\n                    <div className=\"flexRow flexWrap\">\n                      { \n                        ProjectWidgets.map(project => (\n                            <ProjectCardDisplay name={project.title} img={`${processAPI}/${API_KEY}/urlscreenshot=agent:${isMobile ? 'mobile' : 'desktop'}/${project.link}`} url={project.link} id={project.id} hide={project.invisible} techstack={project.tech_stack} desc={project.description} />\n                        ))\n                      }\n                    </div>\n                  </div>\n                ) : null\n              }\n            </div>\n          ))}\n          <div className=\"flexRow end-section flexCenter ph-20 flexAlignCenter mv-40\">\n            <hr style={{width: '35%', color: 'rgba(154,154,154,1)'}} />\n            <p className=\"end-text\">Thats all folks</p>\n            <hr style={{width: '35%', color: 'rgba(154,154,154,1)'}} />\n          </div>\n        </div>\n      </div>\n      <Footer />\n      <CookiePopup show={showCookiePopup} hidePopup={hidePopupHandler} acceptCookie={acceptCookieHandler}/>\n    </div>\n  );\n}\n\nexport default DisplayScreen;\n","/home/vikraant/GitHub/zippy/src/screens/TermsScreen/TermsScreen.js",[],"/home/vikraant/GitHub/zippy/src/features/user/userSlice.js",[],"/home/vikraant/GitHub/zippy/src/screens/HomeScreen/HomeScreen.js",["198"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useState, useEffect} from 'react';\nimport '../../styles/HelperStyles.css';\nimport './HomeScreen.css';\nimport Header from '../../components/Header/Header';\nimport whytabber from '../../assets/images/drawkit-content-man-colour.png'\nimport {BiCheckCircle} from 'react-icons/bi';\nimport FeatureCard from '../../components/FeatureCard/FeatureCard';\nimport AchievementCard from '../../components/AchievementCard/AchievementCard';\nimport FAQCard from '../../components/FAQCard/FAQCard';\nimport Footer from '../../components/Footer/Footer';\nimport PortfolioModal from '../../components/modals/PortfolioModal';\nimport { Animated } from 'react-animated-css';\nimport Axios from 'axios';\nimport users from '../../assets/images/users.png';\nimport links from '../../assets/images/links.png';\nimport review from '../../assets/images/Review.png';\nimport onpoint from '../../assets/images/OnPoint.png';\nimport modify from '../../assets/images/Modifiable.png';\nimport nolimit from '../../assets/images/NoLimit.png';\nimport projects from '../../assets/images/Projects.png';\nimport achievements from '../../assets/images/Achievements.png';\nimport {API_ENDPOINT} from '../../AdminServices/baseUrl';\nimport Loader from '../../components/Loader/Loader';\nimport { ErrorToast } from '../../utility/localStorageControl';\nimport {ToastContainer} from 'react-toastify';\n\nfunction HomeScreen() {\n  const [QnA, setQnA] = useState([]);\n  const [Achievements, setAments] = useState([]);\n  const [Features, setFeatures] = useState([]);\n  const [loader, setloader] = useState(false);\n\n  const getData = async () =>{\n    setloader(true);\n    Axios.get(`${API_ENDPOINT}/fe/get?page_type=Home&key=QnA`)\n      .then(resp => {\n        setQnA(resp.data.value);\n      })\n    .catch(err => ErrorToast(\"Some Error Occured.\"));\n    Axios.get(`${API_ENDPOINT}/fe/get?page_type=Home&key=Achievements`)\n      .then(resp => {\n        setAments(resp.data.value)\n      })\n      .catch(err => ErrorToast(\"Some Error Occured.\"));\n    Axios.get(`${API_ENDPOINT}/fe/get?page_type=Home&key=Features`)\n      .then(resp => {\n        setFeatures(resp.data.value);\n        setloader(false);\n      })\n      .catch(err => {ErrorToast(\"Some Error Occured.\")\n        setloader(false);\n      })\n  }\n\n  useEffect(() => {\n    setloader(true);\n    getData();\n    QnA && setloader(false);\n  }, [])\n  \n  return (\n    <div className=\"#home-screen\">\n      {loader ? <Loader /> : null}\n      <Header open={() => setloader(true)} close={() => setloader(false)} />\n      <Animated animationIn=\"slideInUp\" isVisible={true}>\n        <div id=\"intro-section\">\n          <div className=\"mw1100 mobile-column flexRow flexAround flexAlignCenter\">\n            <div className=\"embed-responsive embed-responsive-16by9\">\n              <iframe title=\"Tabber Advertisement Video\" frameBorder=\"0\" className=\"embed-responsive-item\" src=\"https://www.youtube.com/embed/_2S0x-YV3XQ?rel=0\" allowFullScreen />\n            </div>\n            <div className=\"mw600 mobile-center flexColumn\">\n                <h1 className=\"intro-text\">\n                    Improve your chances of getting hired, just Tab it for \n                    <span style={{color: 'rgba(0,229,216,1)'}}> FREE</span>\n                </h1>\n                <PortfolioModal open={() => setloader(true)} close={() => setloader(false)} home={true} />\n            </div>\n          </div>\n        </div>\n      </Animated>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={3000}\n        hideProgressBar={true}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <Animated animationIn=\"slideInUp\" isVisible={true}>\n      <div id=\"why-tabber\">\n        <div className=\"mw1100 flexRow mobile-column flexAround flexAlignCenter\">\n          <div className=\"mw600 flexColumn mv-40\">\n              <h1 className=\"whytabber-heading\">Why <span style={{color: '#077A73'}}>tabber?</span></h1>\n              <p className=\"whytabber-text\">Are you tired of sending <strong>each and every link</strong> to recruiters taking the hassle of mentioning each and every <strong>rank</strong>? Say no more! because Tabber is here to make this a possibility.</p>\n              <p className=\"whytabber-features mt-50 mb-20\">The features which are covered in this</p>\n              <ul className=\"whyTabberlist\">\n                <div className=\"flexRow flexAlignCenter\">\n                  <BiCheckCircle style={{color: '#077A73', marginRight: 10, marginTop: 5, fontSize: 21}} />\n                  <li className=\"ml-19 whytabber-point flexAlignCenter\">Add all your portfolio profiles.</li>\n                </div>\n                <div className=\"flexRow flexAlignCenter\">\n                  <BiCheckCircle style={{color: '#077A73', marginRight: 10, marginTop: 5, fontSize: 21}} />\n                  <li className=\"ml-19 whytabber-point flexAlignCenter\">Edit your resume live on the go.</li>\n                </div>\n                <div className=\"flexRow flexAlignCenter\">\n                  <BiCheckCircle style={{color: '#077A73', marginRight: 10, marginTop: 5, fontSize: 23}} />\n                  <li className=\"ml-19 whytabber-point flexAlignCenter\">Send and keep track of emails to recruiters within Tabby.</li>\n                </div>\n                <div className=\"flexRow \">\n                  <BiCheckCircle style={{color: '#077A73', marginRight: 10, marginTop: 1, fontSize: 30}} />\n                  <li className=\"ml-19 whytabber-point flexAlignCenter\">Tabby avoids spamming, thus increasing the chances of you getting noticed!</li>\n                </div>\n                <div className=\"flexRow flexAlignCenter\">\n                  <BiCheckCircle style={{color: '#077A73', marginRight: 10, marginTop: 5, fontSize: 20}} />\n                  <li className=\"ml-19 whytabber-point flexAlignCenter\">Get a single shareable link.</li>\n                </div>\n              </ul>\n          </div>\n          <img className=\"intro-img\" src={whytabber} alt=\"why-tabber\" />\n        </div>\n      </div>\n      </Animated>\n      <Animated animationIn=\"slideInUp\" isVisible={true}>\n      <div id=\"tabberfeatures\">\n        <div className=\"mw1100 pl-40 flexColumn\">\n          <h1 className=\"tabberfeatures-heading\">What we got you</h1>\n          <div className=\"flexRow flexBetween\" style={{flexWrap: 'wrap'}}>\n              {Features.map(feature => (\n                  <FeatureCard key={feature.sr} name={feature.name} desc={feature.desc} \n                    img={feature.sr === 1 ? review :\n                      feature.sr === 2 ? onpoint : \n                      feature.sr === 3 ? modify : \n                      feature.sr === 4 ? nolimit :\n                      feature.sr === 5 ? projects : achievements} \n                  />\n              ))}\n          </div>\n        </div>\n      </div>\n      </Animated>\n      <Animated animationIn=\"slideInUp\" isVisible={true}>\n      <div id=\"achievements\">\n        <div className=\"mw1100 pl-40 flexColumn\">\n          <h1 className=\"achievements-heading\">Achievements we have made, so far</h1>\n          <div className=\"flexRow flexCenter\" style={{flexWrap: 'wrap'}}>\n              {Achievements.map(achievement => (\n                  <AchievementCard key={achievement.sr} name={achievement.name} desc={achievement.desc} image={achievement.sr === 1 ? users : links} />\n              ))}\n          </div>\n        </div>\n      </div>\n      </Animated>\n      <Animated animationIn=\"slideInUp\" isVisible={true}>\n      <div id=\"faq\">\n        <div className=\"mw1100 ph-40 flexColumn\">\n          <h1 className=\"tabberfeatures-heading\">Frequently Asked Questions</h1>\n          {QnA.map(ques => (\n              <FAQCard key={ques.sr} ques={ques.ques} ans={ques.ans} />\n          ))}\n        </div>\n       </div>\n      </Animated>\n      <Animated animationIn=\"slideInUp\" isVisible={true}>\n        <Footer />\n      </Animated>\n    </div>\n  );\n}\n\nexport default HomeScreen;\n","/home/vikraant/GitHub/zippy/src/AdminServices/baseUrl.js",[],"/home/vikraant/GitHub/zippy/src/components/Header/Header1.js",[],"/home/vikraant/GitHub/zippy/src/components/CodingCard/CodingCard.js",[],"/home/vikraant/GitHub/zippy/src/components/ContestCard/ContestCard.js",[],"/home/vikraant/GitHub/zippy/src/components/Footer/Footer.js",[],"/home/vikraant/GitHub/zippy/src/components/Loader/Loader.js",[],"/home/vikraant/GitHub/zippy/src/AdminServices/AdminService.js",[],"/home/vikraant/GitHub/zippy/src/utility/localStorageControl.js",[],"/home/vikraant/GitHub/zippy/src/components/ProjectCard/ProjectCard.js",[],"/home/vikraant/GitHub/zippy/src/components/modals/ShareModal.js",[],"/home/vikraant/GitHub/zippy/src/components/CodingCard/CodingCardDisplay.js",[],"/home/vikraant/GitHub/zippy/src/components/Header/Header.js",[],"/home/vikraant/GitHub/zippy/src/components/ProjectCard/ProjectCardDisplay.js",[],"/home/vikraant/GitHub/zippy/src/components/modals/CodingProfileModal.js",[],"/home/vikraant/GitHub/zippy/src/components/modals/ContestProfileModal.js",[],"/home/vikraant/GitHub/zippy/src/components/modals/ProjectModal.js",[],"/home/vikraant/GitHub/zippy/src/components/modals/AttachResume.js",["199"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport \"../../styles/HelperStyles.css\";\nimport { Modal, Form } from \"react-bootstrap\";\nimport {\n  AiOutlinePlusCircle,\n  AiOutlineCloseCircle,\n  AiOutlineLink,\n} from \"react-icons/ai\";\nimport { BsFillEyeFill } from \"react-icons/bs\";\nimport AdminService from \"../../AdminServices/AdminService\";\nimport { ErrorToast, SuccessToast } from \"../../utility/localStorageControl\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setPortfolio, userPortfolio } from \"../../features/user/userSlice\";\n\nexport default function AttachResumeModal({ open, close }) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const portfolio = useSelector(userPortfolio);\n  const [modalShow, setModalShow] = React.useState(false);\n  var url = portfolio.cloud_resume_link;\n\n  const ResumeAttach = async () => {\n    open();\n    if (url !== \"\") {\n      if (url !== portfolio.cloud_resume_link) {\n        setModalShow(false);\n        AdminService.AttachResume(url)\n          .then((resp) => {\n            AdminService.getUserData()\n              .then((resp) => {\n                setModalShow(false);\n                dispatch(setPortfolio(resp.data));\n                if (url.length > 0) {\n                  SuccessToast(\"Resume Added!\");\n                  close();\n                } else {\n                  SuccessToast(\"Resume Removed!\");\n                  close();\n                }\n              })\n              .catch((err) => {\n                ErrorToast(\"Some Error Occured.\");\n                close();\n              });\n          })\n          .catch((err) => {\n            ErrorToast(\"Some Error Occured.\");\n            close();\n          });\n      } else {\n        ErrorToast(\"Same Link.\");\n        close();\n      }\n    } else {\n      ErrorToast(\"Empty field\");\n    }\n    close();\n  };\n\n  function MyVerticallyCenteredModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <div className=\"flexColumn\">\n          <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\n            <div style={{ width: 20 }}></div>\n            <h2 className=\"modal-head\">Attach your Resume</h2>\n            <button onClick={props.onHide}>\n              <AiOutlineCloseCircle style={{ fontSize: 40, color: \"black\" }} />\n            </button>\n          </div>\n          <Form>\n            <Form.Group controlId=\"formBasicEmail\" className=\"flexColumn mb-20\">\n              <Form.Label style={{ fontStyle: \"Poppins\" }}>\n                Enter your Resume link in the form of PDF below\n              </Form.Label>\n              <textarea\n                style={{\n                  fontStyle: \"Poppins\",\n                  borderRadius: 32,\n                  margin: \"10px 0\",\n                }}\n                rows={5}\n                type=\"text\"\n                class=\"form-control\"\n                defaultValue={url ? url : \"\"}\n                placeholder=\"Example https://www.gdrive.com/profile/abc,.pdf\"\n                onChange={(event) => (url = event.target.value.trim())}\n              />\n            </Form.Group>\n          </Form>\n\n          <span className=\"modal-list\">\n            • Enter a proper Gdrive/Dropbox or any cloud link.\n          </span>\n          <span className=\"modal-list\">\n            • Upload the file in cloud in pdf format (Recommended).\n          </span>\n          <span className=\"modal-list\">\n            • Give Public Access to your shared link (Recommended).\n          </span>\n\n          <div className=\"share\" style={{ justifyContent: \"center\" }}>\n            <a\n              className=\"flexAlignCenter modal-button\"\n              onClick={() => ResumeAttach()}\n            >\n              Add to profile\n            </a>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"grow1 attach-resume flexRow flexAlignCenter flexEvenly\">\n        <p className=\"resume-head\">\n          {url && url !== \"https://\"\n            ? \"View attached PDF\"\n            : \"Attach your Resume\"}\n        </p>\n        {url && url !== \"https://\" && (\n          <div style={{ display: \"flex\", gap: 20 }}>\n            <AiOutlineLink\n              onClick={() => setModalShow(true)}\n              className=\"grow2 attach-resume__icon\"\n            />\n            <BsFillEyeFill\n              onClick={() => window.open(url)}\n              className=\"grow2 attach-resume__icon\"\n            />\n          </div>\n        )}\n        {(!url || url === \"https://\") && (\n          <AiOutlinePlusCircle\n            onClick={() => setModalShow(true)}\n            className=\"grow2 attach-resume__icon\"\n          />\n        )}\n      </div>\n\n      <MyVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n}\n","/home/vikraant/GitHub/zippy/src/components/modals/SentHistory.js",[],"/home/vikraant/GitHub/zippy/src/components/modals/SendViaEmail.js",["200"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport \"../../styles/HelperStyles.css\";\nimport { Modal, Form } from \"react-bootstrap\";\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\nimport MailPreview from \"../MailPreview/MailPreview\";\nimport { ErrorToast, SuccessToast } from \"../../utility/localStorageControl\";\nimport AdminService from \"../../AdminServices/AdminService\";\nimport { setHistory } from \"../../features/user/userSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { lte } from \"lodash\";\n\nexport default function SendViaEmail({ open, close }) {\n  const [modalShow, setModalShow] = React.useState(false);\n  const dispatch = useDispatch();\n  let mails = \"\";\n  let resume = \"\";\n  const resumeData = new FormData();\n\n  const OptionalHeader = {\n    \"Content-Type\":\n      \"multipart/form-data; boundary=<calculated when request is sent>\",\n  };\n\n  const handleInput = (event) => {\n    resume = event.target.files[0];\n  };\n\n  const SendMail = async () => {\n    if (mails !== \"\" && mails.includes(\"@\")) {\n      setModalShow(false);\n      open();\n      resumeData.append(\"file\", resume);\n      AdminService.sendMailwithAttachment(mails, resumeData, OptionalHeader)\n        .then((resp) => {\n          if (resp.data.status === \"success\") {\n            SuccessToast(resp.data.message);\n            AdminService.getUserData().then((resp) =>\n              dispatch(setHistory(resp.data))\n            );\n            close();\n          } else {\n            ErrorToast(resp.data.message);\n            close();\n          }\n        })\n        .catch((err) => {\n          ErrorToast(\"Some Error occured.\");\n          close();\n        });\n    } else {\n      ErrorToast(\"Missing email !\");\n    }\n  };\n  function MyVerticallyCenteredModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <div className=\"flexColumn\">\n          <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\n            <div style={{ width: 20 }}></div>\n            <h2 className=\"modal-head\">Send via Email</h2>\n            <button onClick={props.onHide}>\n              <AiOutlineCloseCircle style={{ fontSize: 40, color: \"black\" }} />\n            </button>\n          </div>\n          <Form>\n            <Form.Group controlId=\"formBasic1\" className=\"mb-20\">\n              <Form.Label>\n                Enter the mail ID you would like to send the mail to\n                <span style={{ color: \"red\" }}>*</span>{\" \"}\n              </Form.Label>\n              <Form.Control\n                type=\"email\"\n                defaultValue={mails}\n                onChange={(event) => (mails = event.target.value.trim())}\n                placeholder=\"example: anything@gmail.com\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasic12\" className=\"mb-20\">\n              <Form.Label>Upload Resume (Optional)</Form.Label>\n              <Form.Control\n                type=\"file\"\n                defaultValue={resume}\n                onChange={(event) => handleInput(event)}\n                placeholder=\"Click on Upload to attach resume\"\n              />\n            </Form.Group>\n          </Form>\n\n          <div className=\"flexRow flexBetween\">\n            <div className=\"flexColumn\">\n              <span className=\"modal-list\">\n                • File size should not more than 10 MB.\n              </span>\n              <span className=\"modal-list\">\n                • File should be in PDF format.\n              </span>\n            </div>\n          </div>\n\n          <div className=\"share\" style={{ justifyContent: \"center\" }}>\n            <a onClick={SendMail} className=\"flexAlignCenter modal-button\">\n              Send Mail\n            </a>\n          </div>\n\n          <div className=\"flexRow flexCenter end-section ph-20 flexAlignCenter mv-40\">\n            <hr style={{ width: \"35%\", color: \"rgba(154,154,154,1)\" }} />\n            <p className=\"end-text\" style={{ fontSize: 16 }}>\n              Mail Preview\n            </p>\n            <hr style={{ width: \"35%\", color: \"rgba(154,154,154,1)\" }} />\n          </div>\n\n          <MailPreview />\n        </div>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"share\">\n        <a\n          className=\"flexRow flexAlignCenter email-button\"\n          style={{ cursor: \"pointer\" }}\n          onClick={() => setModalShow(true)}\n        >\n          Send Email\n        </a>\n      </div>\n\n      <MyVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n}\n","/home/vikraant/GitHub/zippy/src/components/modals/LinkedInProfile.js",[],"/home/vikraant/GitHub/zippy/src/components/UpdateModals/UpdatePortfolioModal.js",[],"/home/vikraant/GitHub/zippy/src/components/Cookie/CookiePopup.js",[],"/home/vikraant/GitHub/zippy/src/components/ContestCard/ContestCardDisplay.js",[],"/home/vikraant/GitHub/zippy/src/components/modals/PortfolioModal.js",["201","202","203"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\nimport \"../../styles/HelperStyles.css\";\nimport { Form, Modal } from \"react-bootstrap\";\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\nimport {\n  ErrorToast,\n  SuccessToast,\n  WarningToast,\n  graduationYears,\n} from \"../../utility/localStorageControl\";\nimport AdminService from \"../../AdminServices/AdminService\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setPortfolio,\n  userImage,\n  userLogin,\n  userPortfolio,\n  userToken,\n} from \"../../features/user/userSlice\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { API_ENDPOINT } from \"../../AdminServices/baseUrl\";\n\nexport default function PortfolioModal({ home, open, close }) {\n  const token = useSelector(userToken);\n  const dispatch = useDispatch();\n  const image = useSelector(userImage);\n  const isLogin = useSelector(userLogin);\n  const portfolio = useSelector(userPortfolio);\n  const history = useHistory();\n  const [modalShow, setModalShow] = useState(false);\n  const [apicall, setcall] = useState(\"\");\n  const [collegeList, setList] = useState([]);\n  const [educationLevels, setEducationLevels] = useState([]);\n\n  let title = \"\";\n  let desc = \"\";\n  let college = -1;\n  let other = \"\";\n  let gradYear = 2010;\n  let educationLevel = \"postgraduate\";\n\n  const createPortfolio = async () => {\n    if (token === \"\") {\n      ErrorToast(\"Access Token not Retrieved!\");\n    } else {\n      if (title && desc && gradYear && educationLevel && (college !== -1 || other !== \"\")) {\n        const portfolioData = {\n          title: title,\n          picture_url: image,\n          description: desc,\n          college: other.length >= 1 ? -1 : college,\n          college_others: other,\n          graduation_year: gradYear,\n          education_level: educationLevel,\n        };\n        AdminService.createPortfolio(portfolioData)\n          .then((resp) => {\n            SuccessToast(\"Details Entered!\");\n            AdminService.getUserData()\n              .then((resp) => {\n                dispatch(setPortfolio(resp.data));\n                setModalShow(false);\n                history.push(\"/portfolio\");\n                close();\n              })\n              .catch((err) => {\n                ErrorToast(\"Some Error Occured.\");\n                close();\n              });\n          })\n          .catch((err) => {\n            ErrorToast(\"Error, One User, One Portfolio!\");\n            close();\n          });\n      } else {\n        ErrorToast(\"Error, Fields cannot be empty!\");\n        close();\n      }\n    }\n  };\n\n  const Add = () => {\n    open();\n    createPortfolio();\n  };\n\n  const getUnivList = () => {\n    axios.get(`${API_ENDPOINT}/university/university_list`).then((res) => {\n      const data = Object.values(res.data);\n      setList(data);\n    });\n  };\n\n  const getEducationLevels = () => {\n    axios\n      .get(`${API_ENDPOINT}/fe/get?page_type=portfolio&key=education_level`)\n      .then((res) => {\n        const data2 = Object.keys(res.data.value);\n        setEducationLevels(data2);\n      })\n      .catch((err) => {\n        console.log(\"Something went wrong!\", err);\n      });\n  };\n\n  useEffect(() => {\n    !home && !portfolio && setModalShow(true);\n    getUnivList();\n    getEducationLevels();\n  }, []);\n\n  function MyVerticallyCenteredModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        animation={false}\n      >\n        <div className=\"flexColumn\">\n          <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\n            <div style={{ width: 20 }}></div>\n            <h2 className=\"modal-head\">Add Portfolio Details</h2>\n            <button onClick={props.onHide}>\n              <AiOutlineCloseCircle style={{ fontSize: 40, color: \"black\" }} />\n            </button>\n          </div>\n          <Form>\n            <Form.Group controlId=\"formBasic1\" className=\"mb-20\">\n              <Form.Label>\n                Your Portfolio Title<span style={{ color: \"red\" }}>*</span>{\" \"}\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                defaultValue={title}\n                onChange={(e) => (title = e.target.value)}\n                placeholder=\"Eg. Web Developer, Analyst, Mechanic\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicEmail\" className=\"flexColumn mb-20\">\n              <Form.Label>\n                Your College Name<span style={{ color: \"red\" }}>*</span>\n              </Form.Label>\n              <select\n                defaultValue={college}\n                onChange={(e) => (college = e.target.value)}\n              >\n                <option value=\"Select Your College/University\">\n                  Select Your College/University\n                </option>\n                {collegeList.map((college, index) => (\n                  <option value={index}>{college}</option>\n                ))}\n              </select>\n            </Form.Group>\n            <Form.Group controlId=\"formBasic5\" className=\"mb-20\">\n              <Form.Label>\n                If not in above list:<span style={{ color: \"red\" }}></span>{\" \"}\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                defaultValue={other}\n                onChange={(e) => (other = e.target.value.trim())}\n                placeholder=\"Eg. Thapar University, Patiala\"\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasic7\" className=\"flexColumn mb-20\">\n              <Form.Label>\n                Education Level<span style={{ color: \"red\" }}>*</span>\n              </Form.Label>\n              <select\n                defaultValue={educationLevel}\n                onChange={(e) => (educationLevel = e.target.value)}\n              >\n                <option value=\"Eg. Undergraduate\" disabled>\n                  Eg. Undergraduate\n                </option>\n                {educationLevels.map((eduLevel) => (\n                  <option value={eduLevel}>\n                    {eduLevel.charAt(0).toUpperCase() + eduLevel.slice(1)}\n                  </option>\n                ))}\n              </select>\n            </Form.Group>\n            <Form.Group controlId=\"formBasic6\" className=\"flexColumn mb-20\">\n              <Form.Label>\n                Graduation Year<span style={{ color: \"red\" }}>*</span>\n              </Form.Label>\n              <select\n                defaultValue={gradYear}\n                onChange={(e) => (gradYear = e.target.value)}\n              >\n                <option value=\"year\" disabled>\n                  Year\n                </option>\n                {graduationYears.map((year) => (\n                  <option value={year.gradYear}>{year.gradYear}</option>\n                ))}\n              </select>\n            </Form.Group>\n            <Form.Group controlId=\"formBasic2\">\n              <Form.Label>\n                Your Description<span style={{ color: \"red\" }}>*</span>\n              </Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                defaultValue={desc}\n                onChange={(e) => (desc = e.target.value)}\n                placeholder=\"Enter your short bio/description here\"\n              />\n            </Form.Group>\n          </Form>\n\n          <div className=\"share\" style={{ justifyContent: \"center\" }}>\n            <a onClick={() => {Add(); setModalShow(false);}} className=\"flexAlignCenter modal-button\">\n              Create Portfolio\n            </a>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      {home ? (\n        <a\n          style={{ cursor: \"pointer\" }}\n          onClick={() => {\n            if (isLogin) {\n              if (portfolio) {\n                history.push(\"/portfolio\");\n              } else {\n                setModalShow(true);\n              }\n            } else {\n              WarningToast(\"You need to Login first!\");\n            }\n          }}\n          className=\"flexAlignCenter intro-button\"\n        >\n          Get Started\n        </a>\n      ) : (\n        <button\n          onClick={() => {\n            portfolio ? history.push(\"/portfolio\") : setModalShow(true);\n          }}\n          className=\"edit-your-portfolio grow1\"\n        >\n          {portfolio ? \"Move to your Portfolio\" : \"Edit your Portfolio\"}\n        </button>\n      )}\n      <MyVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n}\n","/home/vikraant/GitHub/zippy/src/components/FAQCard/FAQCard.js",[],"/home/vikraant/GitHub/zippy/src/components/FeatureCard/FeatureCard.js",[],"/home/vikraant/GitHub/zippy/src/components/AchievementCard/AchievementCard.js",[],"/home/vikraant/GitHub/zippy/src/AdminServices/dataService.js",[],"/home/vikraant/GitHub/zippy/src/components/GoogleBtn.js",[],"/home/vikraant/GitHub/zippy/src/components/UpdateModals/UpdateProject.js",[],"/home/vikraant/GitHub/zippy/src/components/UpdateModals/UpdateContestProfile.js",[],"/home/vikraant/GitHub/zippy/src/components/UpdateModals/UpdateCodingProfile.js",[],"/home/vikraant/GitHub/zippy/src/components/MailPreview/MailPreview.js",[],"/home/vikraant/GitHub/zippy/src/components/modals/AddCourseModal.js",["204","205","206","207","208"],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":13,"column":10,"nodeType":"215","messageId":"216","endLine":13,"endColumn":24},{"ruleId":"213","severity":1,"message":"217","line":13,"column":26,"nodeType":"215","messageId":"216","endLine":13,"endColumn":39},{"ruleId":"213","severity":1,"message":"218","line":18,"column":10,"nodeType":"215","messageId":"216","endLine":18,"endColumn":20},{"ruleId":"219","severity":1,"message":"220","line":189,"column":6,"nodeType":"221","endLine":189,"endColumn":33,"suggestions":"222"},{"ruleId":"219","severity":1,"message":"223","line":60,"column":6,"nodeType":"221","endLine":60,"endColumn":8,"suggestions":"224"},{"ruleId":"213","severity":1,"message":"225","line":19,"column":9,"nodeType":"215","messageId":"216","endLine":19,"endColumn":16},{"ruleId":"213","severity":1,"message":"226","line":11,"column":10,"nodeType":"215","messageId":"216","endLine":11,"endColumn":13},{"ruleId":"213","severity":1,"message":"227","line":33,"column":10,"nodeType":"215","messageId":"216","endLine":33,"endColumn":17},{"ruleId":"213","severity":1,"message":"228","line":33,"column":19,"nodeType":"215","messageId":"216","endLine":33,"endColumn":26},{"ruleId":"219","severity":1,"message":"229","line":112,"column":6,"nodeType":"221","endLine":112,"endColumn":8,"suggestions":"230"},{"ruleId":"213","severity":1,"message":"231","line":6,"column":8,"nodeType":"215","messageId":"216","endLine":6,"endColumn":20},{"ruleId":"213","severity":1,"message":"232","line":7,"column":10,"nodeType":"215","messageId":"216","endLine":7,"endColumn":20},{"ruleId":"213","severity":1,"message":"233","line":7,"column":22,"nodeType":"215","messageId":"216","endLine":7,"endColumn":34},{"ruleId":"213","severity":1,"message":"234","line":9,"column":10,"nodeType":"215","messageId":"216","endLine":9,"endColumn":27},{"ruleId":"213","severity":1,"message":"235","line":12,"column":9,"nodeType":"215","messageId":"216","endLine":12,"endColumn":17},"no-native-reassign",["236"],"no-negated-in-lhs",["237"],"no-unused-vars","'AiOutlineCheck' is defined but never used.","Identifier","unusedVar","'AiOutlineEdit' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkCookie' and 'cookieAcceptStatus'. Either include them or remove the dependency array.","ArrayExpression",["238"],"React Hook useEffect has a missing dependency: 'QnA'. Either include it or remove the dependency array.",["239"],"'history' is assigned a value but never used.","'lte' is defined but never used.","'apicall' is assigned a value but never used.","'setcall' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'home' and 'portfolio'. Either include them or remove the dependency array.",["240"],"'AdminService' is defined but never used.","'ErrorToast' is defined but never used.","'SuccessToast' is defined but never used.","'setProjectWidgets' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},"Update the dependencies array to be: [accessToken, checkCookie, cookieAcceptStatus, cookieStatus]",{"range":"247","text":"248"},"Update the dependencies array to be: [QnA]",{"range":"249","text":"250"},"Update the dependencies array to be: [home, portfolio]",{"range":"251","text":"252"},[5596,5623],"[accessToken, checkCookie, cookieAcceptStatus, cookieStatus]",[2387,2389],"[QnA]",[3320,3322],"[home, portfolio]"]