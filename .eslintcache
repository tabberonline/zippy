[{"F:\\Github\\zippy\\src\\index.js":"1","F:\\Github\\zippy\\src\\App.js":"2","F:\\Github\\zippy\\src\\app\\store.js":"3","F:\\Github\\zippy\\src\\screens\\Error404.js":"4","F:\\Github\\zippy\\src\\screens\\DisplayScreen\\DisplayScreen.js":"5","F:\\Github\\zippy\\src\\screens\\AboutScreen\\AboutScreen.js":"6","F:\\Github\\zippy\\src\\screens\\ContactScreen\\ContactScreen.js":"7","F:\\Github\\zippy\\src\\screens\\HomeScreen\\HomeScreen.js":"8","F:\\Github\\zippy\\src\\screens\\PolicyScreen\\PolicyScreen.js":"9","F:\\Github\\zippy\\src\\screens\\TermsScreen\\TermsScreen.js":"10","F:\\Github\\zippy\\src\\screens\\PortfolioScreen\\PortfolioScreen.js":"11","F:\\Github\\zippy\\src\\features\\user\\userSlice.js":"12","F:\\Github\\zippy\\src\\AdminServices\\baseUrl.js":"13","F:\\Github\\zippy\\src\\AdminServices\\AdminService.js":"14","F:\\Github\\zippy\\src\\utility\\localStorageControl.js":"15","F:\\Github\\zippy\\src\\components\\Header\\Header.js":"16","F:\\Github\\zippy\\src\\components\\Footer\\Footer.js":"17","F:\\Github\\zippy\\src\\components\\Header\\Header1.js":"18","F:\\Github\\zippy\\src\\components\\CodingCard\\CodingCardDisplay.js":"19","F:\\Github\\zippy\\src\\components\\CourseCard\\CourseCardDisplay.js":"20","F:\\Github\\zippy\\src\\components\\CourseCard\\CourseCard.js":"21","F:\\Github\\zippy\\src\\components\\Cookie\\CookiePopup.js":"22","F:\\Github\\zippy\\src\\components\\AchievementCard\\AchievementCard.js":"23","F:\\Github\\zippy\\src\\components\\Loader\\Loader.js":"24","F:\\Github\\zippy\\src\\components\\FeatureCard\\FeatureCard.js":"25","F:\\Github\\zippy\\src\\components\\FAQCard\\FAQCard.js":"26","F:\\Github\\zippy\\src\\components\\ExperienceCard\\ExperienceCard.js":"27","F:\\Github\\zippy\\src\\components\\modals\\AddExperienceModal.js":"28","F:\\Github\\zippy\\src\\components\\modals\\AddCourseModal.js":"29","F:\\Github\\zippy\\src\\components\\ProjectCard\\ProjectCardDisplay.js":"30","F:\\Github\\zippy\\src\\components\\ExperienceCard\\ExperienceCardDisplay.js":"31","F:\\Github\\zippy\\src\\components\\modals\\LinkedInProfile.js":"32","F:\\Github\\zippy\\src\\components\\ContestCard\\ContestCardDisplay.js":"33","F:\\Github\\zippy\\src\\components\\modals\\PortfolioModal.js":"34","F:\\Github\\zippy\\src\\components\\modals\\SendViaEmail.js":"35","F:\\Github\\zippy\\src\\components\\modals\\AttachResume.js":"36","F:\\Github\\zippy\\src\\components\\UpdateModals\\UpdatePortfolioModal.js":"37","F:\\Github\\zippy\\src\\components\\modals\\SentHistory.js":"38","F:\\Github\\zippy\\src\\components\\modals\\ShareModal.js":"39","F:\\Github\\zippy\\src\\components\\modals\\ProjectModal.js":"40","F:\\Github\\zippy\\src\\components\\modals\\ContestProfileModal.js":"41","F:\\Github\\zippy\\src\\components\\ProjectCard\\ProjectCard.js":"42","F:\\Github\\zippy\\src\\components\\modals\\CodingProfileModal.js":"43","F:\\Github\\zippy\\src\\components\\ContestCard\\ContestCard.js":"44","F:\\Github\\zippy\\src\\components\\CodingCard\\CodingCard.js":"45","F:\\Github\\zippy\\src\\components\\UpdateModals\\UpdateCourseTaken.js":"46","F:\\Github\\zippy\\src\\components\\UpdateModals\\UpdateExperience.js":"47","F:\\Github\\zippy\\src\\components\\GoogleBtn.js":"48","F:\\Github\\zippy\\src\\components\\MailPreview\\MailPreview.js":"49","F:\\Github\\zippy\\src\\AdminServices\\dataService.js":"50","F:\\Github\\zippy\\src\\components\\UpdateModals\\UpdateProject.js":"51","F:\\Github\\zippy\\src\\components\\UpdateModals\\UpdateCodingProfile.js":"52","F:\\Github\\zippy\\src\\components\\UpdateModals\\UpdateContestProfile.js":"53","F:\\Github\\zippy\\src\\components\\modals\\TermsnCondns.js":"54"},{"size":510,"mtime":1636717989332,"results":"55","hashOfConfig":"56"},{"size":1604,"mtime":1636717987629,"results":"57","hashOfConfig":"56"},{"size":708,"mtime":1636717987630,"results":"58","hashOfConfig":"56"},{"size":662,"mtime":1636717989339,"results":"59","hashOfConfig":"56"},{"size":17834,"mtime":1636717989339,"results":"60","hashOfConfig":"56"},{"size":4151,"mtime":1636717989334,"results":"61","hashOfConfig":"56"},{"size":4508,"mtime":1636717989337,"results":"62","hashOfConfig":"56"},{"size":8520,"mtime":1637596627769,"results":"63","hashOfConfig":"56"},{"size":2020,"mtime":1636859545550,"results":"64","hashOfConfig":"56"},{"size":2000,"mtime":1636859545552,"results":"65","hashOfConfig":"56"},{"size":15469,"mtime":1636717989346,"results":"66","hashOfConfig":"56"},{"size":4556,"mtime":1636717989331,"results":"67","hashOfConfig":"56"},{"size":165,"mtime":1636717987196,"results":"68","hashOfConfig":"56"},{"size":3190,"mtime":1636717987195,"results":"69","hashOfConfig":"56"},{"size":4871,"mtime":1636717989350,"results":"70","hashOfConfig":"56"},{"size":2304,"mtime":1636717989308,"results":"71","hashOfConfig":"56"},{"size":1479,"mtime":1636717989306,"results":"72","hashOfConfig":"56"},{"size":2818,"mtime":1636717989309,"results":"73","hashOfConfig":"56"},{"size":1217,"mtime":1636717989197,"results":"74","hashOfConfig":"56"},{"size":606,"mtime":1636717989299,"results":"75","hashOfConfig":"56"},{"size":7514,"mtime":1636717989298,"results":"76","hashOfConfig":"56"},{"size":812,"mtime":1636717989297,"results":"77","hashOfConfig":"56"},{"size":678,"mtime":1636717988740,"results":"78","hashOfConfig":"56"},{"size":402,"mtime":1636717989311,"results":"79","hashOfConfig":"56"},{"size":588,"mtime":1636717989305,"results":"80","hashOfConfig":"56"},{"size":1329,"mtime":1636717989303,"results":"81","hashOfConfig":"56"},{"size":9337,"mtime":1636717989300,"results":"82","hashOfConfig":"56"},{"size":6287,"mtime":1636863941733,"results":"83","hashOfConfig":"56"},{"size":4191,"mtime":1636863924063,"results":"84","hashOfConfig":"56"},{"size":2192,"mtime":1636717989315,"results":"85","hashOfConfig":"56"},{"size":1674,"mtime":1636717989301,"results":"86","hashOfConfig":"56"},{"size":4512,"mtime":1636864078172,"results":"87","hashOfConfig":"56"},{"size":1347,"mtime":1636717989295,"results":"88","hashOfConfig":"56"},{"size":9254,"mtime":1636864120677,"results":"89","hashOfConfig":"56"},{"size":4770,"mtime":1636717989326,"results":"90","hashOfConfig":"56"},{"size":5164,"mtime":1636717989321,"results":"91","hashOfConfig":"56"},{"size":9352,"mtime":1636863862896,"results":"92","hashOfConfig":"56"},{"size":4351,"mtime":1636717989327,"results":"93","hashOfConfig":"56"},{"size":2641,"mtime":1636717989328,"results":"94","hashOfConfig":"56"},{"size":4877,"mtime":1636864162962,"results":"95","hashOfConfig":"56"},{"size":5866,"mtime":1636864033907,"results":"96","hashOfConfig":"56"},{"size":8900,"mtime":1636717989314,"results":"97","hashOfConfig":"56"},{"size":6272,"mtime":1636863995945,"results":"98","hashOfConfig":"56"},{"size":10056,"mtime":1636717989295,"results":"99","hashOfConfig":"56"},{"size":10373,"mtime":1636717989197,"results":"100","hashOfConfig":"56"},{"size":4297,"mtime":1636863554050,"results":"101","hashOfConfig":"56"},{"size":6558,"mtime":1636863672295,"results":"102","hashOfConfig":"56"},{"size":3064,"mtime":1636862116175,"results":"103","hashOfConfig":"56"},{"size":2898,"mtime":1636717989312,"results":"104","hashOfConfig":"56"},{"size":2364,"mtime":1636717987196,"results":"105","hashOfConfig":"56"},{"size":4525,"mtime":1636863906588,"results":"106","hashOfConfig":"56"},{"size":5622,"mtime":1636863225049,"results":"107","hashOfConfig":"56"},{"size":5786,"mtime":1636863505433,"results":"108","hashOfConfig":"56"},{"size":2079,"mtime":1636862878004,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1irqzbs",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"112"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"112"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"112"},"F:\\Github\\zippy\\src\\index.js",[],["227","228"],"F:\\Github\\zippy\\src\\App.js",[],"F:\\Github\\zippy\\src\\app\\store.js",[],"F:\\Github\\zippy\\src\\screens\\Error404.js",[],"F:\\Github\\zippy\\src\\screens\\DisplayScreen\\DisplayScreen.js",["229"],"import React, {useEffect, useState} from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport '../../styles/HelperStyles.css';\r\nimport './DisplayScreen.css';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport { ErrorToast, ReversePortalMap } from '../../utility/localStorageControl';\r\nimport CodingCardDisplay from '../../components/CodingCard/CodingCardDisplay';\r\nimport ContestCardDisplay from '../../components/ContestCard/ContestCardDisplay';\r\nimport ProjectCardDisplay from '../../components/ProjectCard/ProjectCardDisplay';\r\nimport CookiePopup from '../../components/Cookie/CookiePopup';\r\nimport {isMobile} from 'react-device-detect';\r\nimport Axios from 'axios';\r\nimport {API_ENDPOINT} from '../../AdminServices/baseUrl';\r\nimport Header1 from '../../components/Header/Header1';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport { BsFillEyeFill } from 'react-icons/bs';\r\nimport { AiOutlineDown, AiOutlineLinkedin, AiOutlineUp } from 'react-icons/ai';\r\nimport { userToken } from '../../features/user/userSlice';\r\nimport AdminService from '../../AdminServices/AdminService';\r\nimport { CourseCardDisplay } from '../../components/CourseCard/CourseCardDisplay';\r\nimport { ExperienceCardDisplay } from '../../components/ExperienceCard/ExperienceCardDisplay';\r\n\r\nconst API_KEY = 'AJYGpQcugTouk4olbrEfWz';\r\nconst processAPI = 'https://cdn.filestackcontent.com';\r\n\r\nfunction DisplayScreen() {\r\n  const accessToken = useSelector(userToken);\r\n  const [userData, setData] = useState([]);\r\n  const [loader, setloader] = useState(false);\r\n  const [RankWidgets, setRank] = useState([]);\r\n  const [ContestWidgets, setContests] = useState([]);\r\n  const [ProjectWidgets, setProjects] = useState([]);\r\n  const [showCookiePopup, setShowCookiePopup] = useState(false);\r\n  const [cookieStatus, setCookieStatus] = useState(null);\r\n  const [CourseWidgets, setCourses] = useState([]);\r\n  const [ view, setView ] = useState(false);\r\n  const [ExperienceWidgets, setExperiences] = useState([]);\r\n  const [viewExperience, setViewExperience] = useState(false);\r\n  const showPopupHandler = () => {\r\n    setShowCookiePopup(true);\r\n  };\r\n  const hidePopupHandler = () => {\r\n    setShowCookiePopup(false);\r\n  };\r\n  \r\n  const generateUUID = () => {\r\n    return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\r\n      (c ^ ((crypto.getRandomValues(new Uint8Array(1))[0] & 15) >> (c / 4))).toString(16)\r\n    );\r\n  };\r\n\r\n  const sendTrakingId = async(uuid) => {\r\n    const getIDFromURL = () => {\r\n      setloader(true);\r\n      return window.location.href.split('d/')[1];\r\n    };\r\n    const user_id = getIDFromURL();\r\n    Axios.get(`${API_ENDPOINT}/user/guest/resume?id=${user_id}&trakingId=${uuid}`)\r\n      .then(() => {\r\n        setloader(false);\r\n      })\r\n      .catch(err => { \r\n        ErrorToast('Something went wrong');\r\n        setloader(false);\r\n      })\r\n  }\r\n\r\n  const setCookie1 = (cname,cvalue,exdays) => {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + (exdays*24*60*60*1000));\r\n    let expires = \"expires=\" + d.toGMTString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n  };\r\n  \r\n  const setCookie2 = (cname,cvalue) => {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + (60*60*1000));\r\n    let expires = \"expires=\" + d.toGMTString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n  };\r\n  \r\n  const getCookie = (cname) => {\r\n    let name = cname + \"=\";\r\n    let decodedCookie = decodeURIComponent(document.cookie);\r\n    let ca = decodedCookie.split(';');\r\n    \r\n    for(let i = 0; i <ca.length; i++) {\r\n      let c = ca[i];\r\n      while (c.charAt(0) === ' ') {\r\n        c = c.substring(1);\r\n      }\r\n      if (c.indexOf(name) === 0) {\r\n        return c.substring(name.length, c.length);\r\n      }\r\n    }\r\n    return \"\";\r\n  };\r\n  \r\n  const checkCookie = (cname) => {\r\n    const check = getCookie(cname);\r\n    if(check) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  const cookieAcceptStatus = (checkCookie1) => {\r\n    AdminService.GetCookie()\r\n    .then(responce => {\r\n      if(responce.data){\r\n        setCookieStatus(true);\r\n      } else {\r\n        setCookieStatus(false);\r\n        if(!cookieStatus) {\r\n          if(!checkCookie1){\r\n            showPopupHandler();\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(() => {\r\n      ErrorToast('Something Went Wrong!');\r\n    })\r\n  };\r\n  \r\n  const acceptCookieHandler = () => {\r\n    let uuid = null;\r\n    let isLoggedin;\r\n    \r\n    accessToken === null ? isLoggedin = false : isLoggedin = true;\r\n    const checkCookie1 = checkCookie('cookieAccepted');\r\n    \r\n    if(!checkCookie1){\r\n      setCookie1('cookieAccepted', true, 365);\r\n      uuid = generateUUID();\r\n      setCookie2('uuid', uuid);\r\n      sendTrakingId(uuid);\r\n    }\r\n    if(isLoggedin) {\r\n      AdminService.SetCookie()\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch(() => {\r\n        ErrorToast('Something went wrong');\r\n      })\r\n    }\r\n    setShowCookiePopup(false);\r\n  };\r\n  \r\n  \r\n  useEffect(() => {\r\n    let isLoggedin;\r\n    accessToken === null ? isLoggedin = false : isLoggedin = true;\r\n    const checkCookie1 = checkCookie('cookieAccepted');\r\n    \r\n    if(isLoggedin) {\r\n      cookieAcceptStatus(checkCookie1);\r\n      \r\n      if(checkCookie1) {\r\n        AdminService.SetCookie()\r\n        .then((res) => {})\r\n        .catch(() => {\r\n          ErrorToast('Something went wrong');\r\n        })\r\n      }\r\n      \r\n      if(cookieStatus && !checkCookie1) {\r\n        setCookie1('cookieAccepted', true, 365);\r\n        const checkCookie2 = checkCookie('uuid');\r\n        if(!checkCookie2) {\r\n          let uuid = generateUUID();\r\n          setCookie2('uuid', uuid);\r\n          sendTrakingId(uuid);\r\n        }\r\n      }\r\n    } else {\r\n      if(!checkCookie1) {\r\n        showPopupHandler();\r\n      }\r\n    }\r\n    // if cookie2 has expired then generate new uuid\r\n    if(checkCookie1) {\r\n      const checkCookie2 = checkCookie('uuid');\r\n      if(!checkCookie2) {\r\n        let uuid = generateUUID();\r\n        setCookie2('uuid', uuid);\r\n        sendTrakingId(uuid);\r\n      }\r\n    }\r\n  }, [accessToken, cookieStatus]);\r\n\r\n  useEffect(() => {\r\n    const getIDFromURL = () => {\r\n      setloader(true);\r\n      return window.location.href.split('d/')[1];\r\n    };\r\n    const user_id = getIDFromURL();\r\n\r\n    const trakingId = getCookie(\"uuid\");\r\n    let urlTrakingId = \"\";\r\n    if(trakingId) {\r\n      urlTrakingId = `&trakingId=${trakingId}`;\r\n    }\r\n\r\n    Axios.get(`${API_ENDPOINT}/user/guest/resume?id=${user_id}${urlTrakingId}`)\r\n      .then(resp => {\r\n        setData([resp.data]);\r\n        setloader(false);\r\n        window.scroll(0,150);\r\n          adjustData(resp.data);\r\n      })\r\n      .catch(error => {\r\n        ErrorToast(\"Some Error Occured.\")\r\n        setloader(false);\r\n      })\r\n  }, [])\r\n  \r\n  const adjustData = (data) => {\r\n    // console.log(data)\r\n    var abc = data && data.rank_widgets && data.rank_widgets.filter(profile => profile.invisible === false);\r\n    setRank(abc);\r\n    abc = data && data.contest_widgets && data.contest_widgets.filter(profile => profile.invisible === false);\r\n    setContests(abc);\r\n    abc = data && data.personal_projects && data.personal_projects.filter(profile => profile.invisible === false);\r\n    setProjects(abc);\r\n    abc = data && data.course_widgets && data.course_widgets.filter(profile => profile.invisible === false);\r\n    setCourses(abc);\r\n    abc = data && data.experience_widgets && data.experience_widgets.filter(profile => profile.invisible === false );\r\n    setExperiences(abc);\r\n  }\r\n  return (\r\n    <div className=\"#display-screen\">\r\n    {loader ? <Loader /> : null}\r\n      <Header1 open={() => setloader(true)} close={() => setloader(false)} />\r\n      <div className=\"mw1100\">\r\n        <div className=\"p-40 flexColumn display-section\">\r\n          {userData && userData.map(user => (\r\n            <div className=\"flexColumn\" key={user.user_id}>\r\n              <p className=\"title\">{user.portfolio.title}</p>\r\n              <hr style={{color : '#717070', width: '80%', margin: 'auto', marginTop: 10}} />\r\n              <div className=\"flexColumn info-sec\">\r\n                <p className=\"name mb-20 pl-20\">Hello! I am <strong>{user.name}</strong>, a student of  <strong>{user.portfolio.college.split(',')[0]}({user.portfolio.graduation_year})</strong></p>\r\n                <p className=\"desc\">{user.portfolio.description}</p>\r\n              </div>\r\n              <div className=\"socialsRow\">\r\n                {user.portfolio.cloud_resume_link && user.portfolio.cloud_resume_link !== 'https://' ? (\r\n                  <div className=\"flexColumn mv-20\">\r\n                    <p className=\"card-heading mb-20\">Resume</p>\r\n                    <div className=\"grow1 attach-resume flexRow flexAlignCenter flexEvenly\">\r\n                      <p className=\"resume-head\">View Attached PDF</p>\r\n                      <BsFillEyeFill onClick={() => window.open(user.portfolio.cloud_resume_link)} className=\"grow2 attach-resume__icon\" />\r\n                    </div>\r\n                  </div>\r\n                ) : null} \r\n                {user.portfolio.social_profiles[0] && user.portfolio.social_profiles[0].link !== '' ? (\r\n                  <div className=\"flexColumn mv-20\">\r\n                    <p className=\"card-heading mb-20\">LinkedIn Profile</p>\r\n                    <div className=\"grow1 attach-resume flexRow flexAlignCenter flexEvenly\">\r\n                      <p className=\"resume-head\">View LinkedIn Profile</p>\r\n                      <AiOutlineLinkedin onClick={() => window.open(user.portfolio.social_profiles[0].link)} className=\"grow2 attach-resume__icon\" />\r\n                    </div>\r\n                  </div>\r\n                ) : null}  \r\n              </div>\r\n              {\r\n                CourseWidgets && CourseWidgets.length > 0 ? (\r\n                  <div className=\"courses mv-20\">\r\n                    <p className=\"card-heading mb-20\">Courses Taken</p>\r\n                    <div className=\"flexColumn courseList grow5\">\r\n                      {\r\n                        CourseWidgets.length > 2 ? (\r\n                          view ? (\r\n                            <>\r\n                              {CourseWidgets.map(profile => (\r\n                                <CourseCardDisplay name={profile.course_name} link={profile.certificate_link} issuer={profile.issuer} />\r\n                              ))}\r\n                              {\r\n                                <div className=\"viewCourses flexRow flexCenter\" onClick={() => setView(false)}>\r\n                                  <div className=\"flexRow flexAlignCenter viewCourses__containter pointer\">\r\n                                    <p className=\"viewCourses__text\">View Less</p>\r\n                                    <AiOutlineUp />\r\n                                  </div>\r\n                                </div>\r\n                              }\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              {CourseWidgets.slice(0,2).map(profile => (\r\n                                <CourseCardDisplay name={profile.course_name} link={profile.certificate_link} issuer={profile.issuer} />\r\n                              ))}\r\n                              {\r\n                                <div className=\"viewCourses flexRow flexCenter\" onClick={() => setView(true)}>\r\n                                  <div className=\"flexRow flexAlignCenter viewCourses__containter pointer\">\r\n                                    <p className=\"viewCourses__text\">View More</p>\r\n                                    <AiOutlineDown />\r\n                                  </div>\r\n                                </div>\r\n                              }\r\n                            </>\r\n                          )\r\n                        ) : (\r\n                          CourseWidgets.map(profile => (\r\n                            <CourseCardDisplay name={profile.course_name} link={profile.certificate_link} issuer={profile.issuer} />\r\n                          ))\r\n                        )                        \r\n                      }\r\n                    </div>\r\n                  </div>\r\n                ) : null\r\n              }\r\n              {\r\n                ExperienceWidgets && ExperienceWidgets.length > 0 ? (\r\n                  <div className=\"courses mv-20\">\r\n                    <p className=\"card-heading mb-20\">Work Experience</p>\r\n                    <div className=\"flexColumn courseList grow5\">\r\n                      {\r\n                        ExperienceWidgets.length > 2 ? (\r\n                          viewExperience ? (\r\n                            <>\r\n                              {ExperienceWidgets.map(profile => (\r\n                                <ExperienceCardDisplay type={profile.type} companyName={profile.company_name} description={profile.description} start={profile.start_date} end={profile.end_date} />\r\n                              ))}\r\n                              {\r\n                                <div className=\"viewCourses flexRow flexCenter\" onClick={() => setViewExperience(false)}>\r\n                                  <div className=\"flexRow flexAlignCenter viewCourses__containter pointer\">\r\n                                    <p className=\"viewCourses__text\">View Less</p>\r\n                                    <AiOutlineUp />\r\n                                  </div>\r\n                                </div>\r\n                              }\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              {ExperienceWidgets.slice(0,2).map(profile => (\r\n                                <ExperienceCardDisplay type={profile.type} companyName={profile.company_name} description={profile.description} start={profile.start_date} end={profile.end_date} />\r\n                              ))}\r\n                              {\r\n                                <div className=\"viewCourses flexRow flexCenter\" onClick={() => setViewExperience(true)}>\r\n                                  <div className=\"flexRow flexAlignCenter viewCourses__containter pointer\">\r\n                                    <p className=\"viewCourses__text\">View More</p>\r\n                                    <AiOutlineDown />\r\n                                  </div>\r\n                                </div>\r\n                              }\r\n                            </>\r\n                          )\r\n                        ) : (\r\n                          ExperienceWidgets.map(profile => (\r\n                            <ExperienceCardDisplay type={profile.type} companyName={profile.company_name} description={profile.description} start={profile.start_date} end={profile.end_date} />\r\n                          ))\r\n                        )                        \r\n                      }\r\n                    </div>\r\n                  </div>\r\n                ) : null\r\n              }\r\n              {\r\n                RankWidgets.length > 0 ? (\r\n                  <div className=\"coding-profile mv-20\">\r\n                    <p className=\"card-heading mb-20\">Coding Profile</p>\r\n                    <div className=\"flexRow flexWrap\">\r\n                      { \r\n                        RankWidgets.map(profile => (\r\n                            <CodingCardDisplay url={profile.link} name={ReversePortalMap.get(profile.website_id.toString()).name} id={profile.website_username} rank={profile.rank} logo={ReversePortalMap.get(profile.website_id.toString()).logo} />\r\n                        ))\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                ) : null\r\n              }\r\n              {\r\n                ContestWidgets.length > 0 ? (\r\n                  <div className=\"coding-profile mv-20\">\r\n                    <p className=\"card-heading mb-20\">Coding Contests</p>\r\n                    <div className=\"flexRow flexWrap\">\r\n                      { \r\n                        ContestWidgets.map(profile => (\r\n                            <ContestCardDisplay card_id={profile.id} name={ReversePortalMap.get(profile.website_id.toString()).name} id={profile.website_username} rank={profile.rank} logo={ReversePortalMap.get(profile.website_id.toString()).logo} contest={profile.contest_name} />\r\n                        ))\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                ) : null\r\n              }\r\n              {\r\n                ProjectWidgets.length > 0 ? (\r\n                  <div className=\"coding-profile mv-20\">\r\n                    <p className=\"card-heading mb-20\">Projects</p>\r\n                    <div className=\"flexRow flexWrap\">\r\n                      { \r\n                        ProjectWidgets.map(project => (\r\n                            <ProjectCardDisplay name={project.title} img={`${processAPI}/${API_KEY}/urlscreenshot=agent:${isMobile ? 'mobile' : 'desktop'}/${project.link}`} url={project.link} id={project.id} hide={project.invisible} techstack={project.tech_stack} desc={project.description} />\r\n                        ))\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                ) : null\r\n              }\r\n            </div>\r\n          ))}\r\n          <div className=\"flexRow end-section flexCenter ph-20 flexAlignCenter mv-40\">\r\n            <hr style={{width: '35%', color: 'rgba(154,154,154,1)'}} />\r\n            <p className=\"end-text\">Thats all folks</p>\r\n            <hr style={{width: '35%', color: 'rgba(154,154,154,1)'}} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n      <CookiePopup show={showCookiePopup} hidePopup={hidePopupHandler} acceptCookie={acceptCookieHandler}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayScreen;\r\n","F:\\Github\\zippy\\src\\screens\\AboutScreen\\AboutScreen.js",[],"F:\\Github\\zippy\\src\\screens\\ContactScreen\\ContactScreen.js",[],"F:\\Github\\zippy\\src\\screens\\HomeScreen\\HomeScreen.js",["230"],"F:\\Github\\zippy\\src\\screens\\PolicyScreen\\PolicyScreen.js",[],"F:\\Github\\zippy\\src\\screens\\TermsScreen\\TermsScreen.js",[],"F:\\Github\\zippy\\src\\screens\\PortfolioScreen\\PortfolioScreen.js",[],"F:\\Github\\zippy\\src\\features\\user\\userSlice.js",[],"F:\\Github\\zippy\\src\\AdminServices\\baseUrl.js",[],"F:\\Github\\zippy\\src\\AdminServices\\AdminService.js",[],"F:\\Github\\zippy\\src\\utility\\localStorageControl.js",[],"F:\\Github\\zippy\\src\\components\\Header\\Header.js",[],"F:\\Github\\zippy\\src\\components\\Footer\\Footer.js",[],"F:\\Github\\zippy\\src\\components\\Header\\Header1.js",[],"F:\\Github\\zippy\\src\\components\\CodingCard\\CodingCardDisplay.js",[],"F:\\Github\\zippy\\src\\components\\CourseCard\\CourseCardDisplay.js",[],"F:\\Github\\zippy\\src\\components\\CourseCard\\CourseCard.js",["231","232","233"],"import React, {useState} from 'react'\r\nimport { ClickAwayListener } from '@material-ui/core';\r\nimport {BsThreeDotsVertical} from 'react-icons/bs';\r\nimport deleted from '../../assets/images/Bin-Icon.png';\r\nimport edited from '../../assets/images/Edit-Icon.png';\r\nimport hidden from '../../assets/images/Hide-Icon.png';\r\nimport hidecards from '../../assets/images/hiddeeen.png';\r\nimport AdminService from '../../AdminServices/AdminService';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCourses } from '../../features/user/userSlice';\r\nimport { ErrorToast, SuccessToast } from '../../utility/localStorageControl';\r\nimport UpdateCourseTaken from '../UpdateModals/UpdateCourseTaken';\r\n\r\nexport const CourseCard = ({name, issuer, link, id, hide, open, close}) => {  \r\n    let invisible = hide;\r\n    const [ bullets, setbullets ] = useState(true);\r\n    const [ drawer, setdrawer ] = useState(false);\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const dispatch = useDispatch()\r\n\r\n    const OptionDrawer = () => {\r\n        setdrawer(true);\r\n        setbullets(false);\r\n    }\r\n    const CloseOptionDrawer = () => {\r\n        setdrawer(false);\r\n        setbullets(true);\r\n    }\r\n\r\n    const unHideCard = (uid) => {\r\n        open();\r\n        invisible = false;\r\n        updateCourseWidget(uid);\r\n    }\r\n\r\n    const HideCard = (uid) => {\r\n        open();\r\n        invisible = true;\r\n        updateCourseWidget(uid)\r\n    }\r\n\r\n    function DeleteModal(props) {\r\n        return (\r\n          <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <div className=\"flexColumn\">\r\n              <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\r\n                <div style={{width: 20}}></div>\r\n                <h2 className=\"modal-head\">Delete Course</h2>\r\n                <button onClick={props.onHide}>\r\n                  <AiOutlineCloseCircle style={{fontSize: 40, color: 'black'}} />\r\n                </button>\r\n              </div>\r\n              <Form>\r\n                <Form.Group controlId=\"formBasicEmail\" className=\"flexColumn mb-20\">\r\n                  <Form.Label style={{textAlign: 'center'}}>Are you sure you want to delete this card?</Form.Label>\r\n                </Form.Group>\r\n              </Form>\r\n      \r\n              <div className=\"share\" style={{justifyContent: 'center'}}>\r\n                <a onClick={(e) => {\r\n                    DeleteCard(props.uid); \r\n                    setModalShow(false); \r\n                }} style={{marginRight: 10}} className=\"flexAlignCenter modal-button\">Delete</a>\r\n                <a onClick={props.onHide} className=\"flexAlignCenter modal-button\">Cancel</a>\r\n              </div>\r\n      \r\n            </div>\r\n          </Modal>\r\n        );\r\n    }\r\n\r\n    const updateCourseWidget = async () => {\r\n        if (name && issuer && link) {\r\n          let CourseData = {\r\n            \"course_name\": name,\r\n            \"issuer\": issuer,\r\n            \"certificate_link\": link,\r\n            \"invisible\": invisible,\r\n          };\r\n          AdminService.updateCourseWidget(id,CourseData)\r\n            .then(() => {\r\n              SuccessToast(\"Course Updated!\");\r\n              AdminService.getUserData()\r\n                .then((resp) => {\r\n                  dispatch(setCourses(resp.data));\r\n                  close();\r\n                  setModalShow(false);\r\n                })\r\n                .catch((err) => ErrorToast(\"Some Error Occured.\"));\r\n              close();\r\n            })\r\n            .catch((error) => {\r\n              ErrorToast(\"Error, Enter correct details!\");\r\n              close();\r\n            });\r\n        } else {\r\n          ErrorToast(\"Error, Fields cannot be empty!\");\r\n          close();\r\n        }\r\n    };\r\n\r\n    const DeleteCard = async (uid) => {\r\n        open();\r\n        AdminService.deleteCourseWidget(uid)\r\n            .then(response => {\r\n                SuccessToast('Card Successfully Deleted');\r\n                AdminService.getUserData()\r\n                    .then(resp => {\r\n                      dispatch(setCourses(resp.data));\r\n                      close();\r\n                    })\r\n                    .catch(err => {\r\n                        close();\r\n                      });\r\n                })\r\n            .catch(error => {\r\n                ErrorToast('Error, Cannot delete this card!');\r\n                close();\r\n            });\r\n    }\r\n\r\n    const DeleteCardPortal = () => {\r\n        setModalShow(true);\r\n    }\r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={() => CloseOptionDrawer()}>\r\n            <div className=\"course-card flexRow flexBetween\">\r\n                {\r\n                    invisible && (\r\n                        <div id=\"overlay\" onClick={() => unHideCard(id)} className=\"flexColumn flexCenter flexAlignCenter mv-5\">\r\n                            <img src={hidecards} alt=\"hidden\" className=\"hide-card-icon\" style={{height:30, width: 30, marginBottom: 10}} />\r\n                            <p className=\"options-text\" style={{color: 'white'}}>Hidden</p>\r\n                        </div>\r\n                    )\r\n                }\r\n                <DeleteModal\r\n                    show={modalShow}\r\n                    onHide={() => setModalShow(false)}\r\n                    uid={id}\r\n                />\r\n                {/* <img \r\n                    src=\"https://play-lh.googleusercontent.com/qq5__wITsoCx2kUK8TqVW2-8UDRuxET9kCzPzAPHad8umXiHRF2N0tZKuLezd0tiBQg\" \r\n                    className=\"course__logo\"  \r\n                /> */}\r\n                <div className=\"flexColumn\">\r\n                    <a href={link} className=\"course__name\" >{name}</a>\r\n                    <span className=\"course__issuer\">{issuer}</span>\r\n                </div>\r\n                <div className=\"flexRow flexCenter\" style={{position: 'relative'}}>\r\n                    { bullets ? (\r\n                        <div onClick={() => OptionDrawer()} className=\"flexRow option-drawer flexCenter flexAlignCenter iconcontainerCourse\">\r\n                            <BsThreeDotsVertical className=\"portfolio-icon\" />                    \r\n                        </div>\r\n                        ) : null \r\n                    }\r\n                    { drawer ? (\r\n                        <div className=\"flexRow flexStart options\" style={{position: 'absolute', zIndex: 1000}}>\r\n                            <div className=\"flexRow flexAlignCenter option delete-option drawerOption\" onClick={() => DeleteCardPortal()}>\r\n                                <img src={deleted} alt=\"delete\" className=\"drawerImg\" />\r\n                            </div>    \r\n                            <div className=\"flexRow flexAlignCenter option edit-option drawerOption\">\r\n                                <UpdateCourseTaken name={name} link={link} issuer={issuer} open={open} close={close} id={id} />\r\n                            </div>\r\n                            <div className=\"flexRow flexAlignCenter option hide-option drawerOption\" onClick={() => HideCard(id)}>\r\n                                <img src={hidden} alt=\"hide\" className=\"drawerImg\" />\r\n                            </div>\r\n                        </div>\r\n                        ) : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </ClickAwayListener>\r\n    )\r\n}","F:\\Github\\zippy\\src\\components\\Cookie\\CookiePopup.js",[],"F:\\Github\\zippy\\src\\components\\AchievementCard\\AchievementCard.js",[],"F:\\Github\\zippy\\src\\components\\Loader\\Loader.js",[],"F:\\Github\\zippy\\src\\components\\FeatureCard\\FeatureCard.js",[],"F:\\Github\\zippy\\src\\components\\FAQCard\\FAQCard.js",[],"F:\\Github\\zippy\\src\\components\\ExperienceCard\\ExperienceCard.js",["234","235"],"import React, { useState } from 'react'\r\nimport { ClickAwayListener } from '@material-ui/core';\r\nimport { BsThreeDotsVertical } from 'react-icons/bs';\r\nimport deleted from '../../assets/images/Bin-Icon.png';\r\nimport hidden from '../../assets/images/Hide-Icon.png';\r\nimport hidecards from '../../assets/images/hiddeeen.png';\r\nimport AdminService from '../../AdminServices/AdminService';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setExperiences } from '../../features/user/userSlice';\r\nimport { ErrorToast, SuccessToast } from '../../utility/localStorageControl';\r\nimport UpdateExperience from '../UpdateModals/UpdateExperience';\r\n\r\nexport const ExperienceCard = ({ type, companyName, description, start, end, id, hide, open, close }) => {\r\n    let invisible = hide;\r\n    const [bullets, setbullets] = useState(true);\r\n    const [drawer, setdrawer] = useState(false);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const text = description;\r\n    const [isReadMore, setIsReadMore] = useState(true);\r\n\r\n    const myStartMonth = new Date(start).toDateString().split(' ')[1];\r\n    const myStartYear = new Date(start).toDateString().split(' ')[3];\r\n    const startDate = myStartMonth + ' ' + myStartYear;\r\n\r\n    const myEndMonth = new Date(end).toDateString().split(' ')[1];\r\n    const myEndYear = new Date(end).toDateString().split(' ')[3];\r\n    const endDate = myEndMonth + ' ' + myEndYear;\r\n\r\n    const OptionDrawer = () => {\r\n        setdrawer(true);\r\n        setbullets(false);\r\n    }\r\n    const CloseOptionDrawer = () => {\r\n        setdrawer(false);\r\n        setbullets(true);\r\n    }\r\n\r\n    const unHideCard = (uid) => {\r\n        open();\r\n        invisible = false;\r\n        updateExperienceWidget(uid);\r\n    }\r\n\r\n    const HideCard = (uid) => {\r\n        open();\r\n        invisible = true;\r\n        updateExperienceWidget(uid);\r\n    }\r\n\r\n    const toggleReadMore = () => {\r\n        setIsReadMore(prevState => !prevState);\r\n    }\r\n\r\n    function DeleteModal(props) {\r\n        return (\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <div className=\"flexColumn\">\r\n                    <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\r\n                        <div style={{ width: 20 }}></div>\r\n                        <h2 className=\"modal-head\">Delete Work Experience</h2>\r\n                        <button onClick={props.onHide}>\r\n                            <AiOutlineCloseCircle style={{ fontSize: 40, color: 'black' }} />\r\n                        </button>\r\n                    </div>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formBasicEmail\" className=\"flexColumn mb-20\">\r\n                            <Form.Label style={{ textAlign: 'center' }}>Are you sure you want to delete this card?</Form.Label>\r\n                        </Form.Group>\r\n                    </Form>\r\n                    <div className=\"share\" style={{ justifyContent: 'center' }}>\r\n                        <a onClick={(e) => {\r\n                            DeleteCard(props.uid);\r\n                            setModalShow(false);\r\n                        }} style={{ marginRight: 10 }} className=\"flexAlignCenter modal-button\">Delete</a>\r\n                        <a onClick={props.onHide} className=\"flexAlignCenter modal-button\">Cancel</a>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    function ReadMore() {\r\n        return (\r\n            <p>\r\n                {isReadMore ? text.slice(0, 300) : text}\r\n                <span onClick={toggleReadMore} style={{color: \"#4285F4\", cursor: \"pointer\"}}>\r\n                    {text.length > 300 ?  isReadMore ? \" ...show more\" : <div>show less</div> : null}\r\n                </span>\r\n            </p>\r\n        );\r\n    }\r\n\r\n    const updateExperienceWidget = async () => {\r\n        if (type && companyName && description && start && end) {\r\n            let ExperienceData = {\r\n                \"type\": type,\r\n                \"company_name\": companyName,\r\n                \"description\": description,\r\n                \"start_date\": start,\r\n                \"end_date\": end,\r\n                \"invisible\": invisible,\r\n            };\r\n\r\n            AdminService.updateExperienceWidget(id, ExperienceData)\r\n                .then(() => {\r\n                    SuccessToast(\"Experience Updated!\");\r\n                    AdminService.getUserData()\r\n                        .then((resp) => {\r\n                            dispatch(setExperiences(resp.data));\r\n                            close();\r\n                            setModalShow(false)\r\n                        })\r\n                        .catch((err) => {\r\n                            ErrorToast(\"Some Error Occured.\");\r\n                        })\r\n                    close();\r\n                })\r\n                .catch((error) => {\r\n                    ErrorToast(\"Error, Enter correct details!\");\r\n                    close();\r\n                })\r\n        } else {\r\n            ErrorToast(\"Error, Fields cannot be empty!\");\r\n            close();\r\n        }\r\n    };\r\n\r\n    const DeleteCard = async (uid) => {\r\n        open();\r\n        AdminService.deleteExperienceWidget(uid)\r\n            .then(response => {\r\n                SuccessToast(\"Card Successfully Deleted\");\r\n                AdminService.getUserData()\r\n                    .then(resp => {\r\n                        dispatch(setExperiences(resp.data));\r\n                        close();\r\n                    })\r\n                    .catch(err => {\r\n                        close();\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                ErrorToast(\"Error, Cannot delete this card!\");\r\n                close();\r\n            });\r\n    }\r\n\r\n    const DeleteCardPortal = () => {\r\n        setModalShow(true);\r\n    }\r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={() => CloseOptionDrawer()}>\r\n            <div className=\"course-card flexRow flexBetween\">\r\n                {\r\n                    invisible && (\r\n                        <div id=\"overlay\" onClick={() => unHideCard(id)} className=\"flexColumn flexCenter flexAlignCenter mv-5\">\r\n                            <img src={hidecards} alt=\"hidden\" className=\"hide-card-icon\" style={{ height: 30, width: 30, marginBottom: 10 }} />\r\n                            <p className=\"options-text\" style={{ color: 'white' }}>Hidden</p>\r\n                        </div>\r\n                    )\r\n                }\r\n                <DeleteModal\r\n                    show={modalShow}\r\n                    onHide={() => setModalShow(false)}\r\n                    uid={id}\r\n                />\r\n                <div className=\"flexColumn experience__section\">\r\n                    <span className=\"company__name\" > <strong>{companyName}</strong> </span>\r\n                    <span className=\"experience__date\">{startDate} - {endDate} </span>\r\n                    <div className=\"experience__desc\">\r\n                        <ReadMore />\r\n                    </div>\r\n                    <div className=\"experience__type\">\r\n                        <em>{type}</em>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flexRow flexCenter\" style={{ position: 'relative' }}>\r\n                    {bullets ? (\r\n                        <div onClick={() => OptionDrawer()} className=\"flexRow option-drawer flexCenter flexAlignCenter iconcontainerCourse\">\r\n                            <BsThreeDotsVertical className=\"portfolio-icon\" />\r\n                        </div>\r\n                    ) : null\r\n                    }\r\n                    {drawer ? (\r\n                        <div className=\"flexColumn options\" style={{ position: 'absolute', zIndex: 1000, left: 25 }}>\r\n                            <div className=\"flexRow flexAlignCenter option delete-option drawerOption\" onClick={() => DeleteCardPortal()}>\r\n                                <img src={deleted} alt=\"delete\" className=\"drawerImg\" />\r\n                            </div>\r\n                            <div className=\"flexRow flexAlignCenter option edit-option drawerOption\">\r\n                                <UpdateExperience\r\n                                    type={type}\r\n                                    companyName={companyName}\r\n                                    description={description}\r\n                                    start={start}\r\n                                    end={end}\r\n                                    open={open}\r\n                                    close={close}\r\n                                    id={id} />\r\n                            </div>\r\n                            <div className=\"flexRow flexAlignCenter option hide-option drawerOption\" onClick={() => HideCard(id)}>\r\n                                <img src={hidden} alt=\"hide\" className=\"drawerImg\" />\r\n                            </div>\r\n                        </div>\r\n                    ) : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </ClickAwayListener>\r\n    );\r\n}","F:\\Github\\zippy\\src\\components\\modals\\AddExperienceModal.js",[],"F:\\Github\\zippy\\src\\components\\modals\\AddCourseModal.js",[],"F:\\Github\\zippy\\src\\components\\ProjectCard\\ProjectCardDisplay.js",[],"F:\\Github\\zippy\\src\\components\\ExperienceCard\\ExperienceCardDisplay.js",[],"F:\\Github\\zippy\\src\\components\\modals\\LinkedInProfile.js",[],"F:\\Github\\zippy\\src\\components\\ContestCard\\ContestCardDisplay.js",[],"F:\\Github\\zippy\\src\\components\\modals\\PortfolioModal.js",["236"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"../../styles/HelperStyles.css\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\r\nimport {\r\n  ErrorToast,\r\n  SuccessToast,\r\n  WarningToast,\r\n  graduationYears,\r\n} from \"../../utility/localStorageControl\";\r\nimport AdminService from \"../../AdminServices/AdminService\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  setPortfolio,\r\n  userImage,\r\n  userLogin,\r\n  userPortfolio,\r\n  userToken,\r\n} from \"../../features/user/userSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { API_ENDPOINT } from \"../../AdminServices/baseUrl\";\r\nimport TermsnCondns from \"./TermsnCondns\";\r\n\r\nexport default function PortfolioModal({ home, open, close, terms }) {\r\n  const token = useSelector(userToken);\r\n  const dispatch = useDispatch();\r\n  const image = useSelector(userImage);\r\n  const isLogin = useSelector(userLogin);\r\n  const portfolio = useSelector(userPortfolio);\r\n  const history = useHistory();\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [modalShow2, setModalShow2] = useState(false);\r\n  const [accept, setAccept] = useState(false);\r\n  const [collegeList, setList] = useState([]);\r\n  const [educationLevels, setEducationLevels] = useState([]);\r\n\r\n  let title = \"\";\r\n  let desc = \"\";\r\n  let college = -1;\r\n  let other = \"\";\r\n  let gradYear = 2010;\r\n  let educationLevel = \"postgraduate\";\r\n\r\n  const createPortfolio = async () => {\r\n    if (token === \"\") {\r\n      ErrorToast(\"Access Token not Retrieved!\");\r\n    } else {\r\n        const portfolioData = {\r\n          title: title,\r\n          picture_url: image,\r\n          description: desc,\r\n          college: other.length >= 1 ? -1 : college,\r\n          college_others: other,\r\n          graduation_year: gradYear,\r\n          education_level: educationLevel,\r\n        };\r\n        AdminService.createPortfolio(portfolioData)\r\n          .then((resp) => {\r\n            SuccessToast(\"Details Entered!\");\r\n            AdminService.getUserData()\r\n              .then((resp) => {\r\n                dispatch(setPortfolio(resp.data));\r\n                setModalShow(false);\r\n                history.push(\"/portfolio\");\r\n                close();\r\n              })\r\n              .catch((err) => {\r\n                ErrorToast(\"Some Error Occured.\");\r\n                close();\r\n              });\r\n          })\r\n          .catch((err) => {\r\n            ErrorToast(\"Error, One User, One Portfolio!\");\r\n            close();\r\n          });\r\n    }\r\n  };\r\n\r\n  const Add = () => {\r\n    open();\r\n    if (title && desc && gradYear && educationLevel && (college !== -1 || other !== \"\")) {\r\n      createPortfolio(); setModalShow(false);\r\n    } else {\r\n      ErrorToast(\"Error, Fields cannot be empty!\");\r\n      close();\r\n    }\r\n  };\r\n\r\n  const getUnivList = () => {\r\n    axios.get(`${API_ENDPOINT}/university/university_list`).then((res) => {\r\n      const data = Object.values(res.data);\r\n      setList(data);\r\n    });\r\n  };\r\n\r\n  const getEducationLevels = () => {\r\n    axios\r\n      .get(`${API_ENDPOINT}/fe/get?page_type=portfolio&key=education_level`)\r\n      .then((res) => {\r\n        const data2 = Object.keys(res.data.value);\r\n        setEducationLevels(data2);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Something went wrong!\", err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    !home && !portfolio && (accept ? setModalShow(true) : setModalShow2(true));\r\n    getUnivList();\r\n    getEducationLevels();\r\n  }, []);\r\n\r\n  function MyVerticallyCenteredModal(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        animation={false}\r\n      >\r\n        <div className=\"flexColumn\">\r\n          <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\r\n            <div style={{ width: 20 }}></div>\r\n            <h2 className=\"modal-head\">Add Portfolio Details</h2>\r\n            <button onClick={props.onHide}>\r\n              <AiOutlineCloseCircle style={{ fontSize: 40, color: \"black\" }} />\r\n            </button>\r\n          </div>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasic1\" className=\"mb-20\">\r\n              <Form.Label>\r\n                Your Portfolio Title<span style={{ color: \"red\" }}>*</span>{\" \"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={title}\r\n                onChange={(e) => (title = e.target.value)}\r\n                placeholder=\"Eg. Web Developer, Analyst, Mechanic\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\" className=\"flexColumn mb-20\">\r\n              <Form.Label>\r\n                Your College Name<span style={{ color: \"red\" }}>*</span>\r\n              </Form.Label>\r\n              <select\r\n                defaultValue={college}\r\n                onChange={(e) => (college = e.target.value)}\r\n              >\r\n                <option value=\"Select Your College/University\">\r\n                  Select Your College/University\r\n                </option>\r\n                {collegeList.map((college, index) => (\r\n                  <option value={index}>{college}</option>\r\n                ))}\r\n              </select>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasic5\" className=\"mb-20\">\r\n              <Form.Label>\r\n                If not in above list:<span style={{ color: \"red\" }}></span>{\" \"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                defaultValue={other}\r\n                onChange={(e) => (other = e.target.value.trim())}\r\n                placeholder=\"Eg. Thapar University, Patiala\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasic7\" className=\"flexColumn mb-20\">\r\n              <Form.Label>\r\n                Education Level<span style={{ color: \"red\" }}>*</span>\r\n              </Form.Label>\r\n              <select\r\n                defaultValue={educationLevel}\r\n                onChange={(e) => (educationLevel = e.target.value)}\r\n              >\r\n                <option value=\"Eg. Undergraduate\" disabled>\r\n                  Eg. Undergraduate\r\n                </option>\r\n                {educationLevels.map((eduLevel) => (\r\n                  <option value={eduLevel}>\r\n                    {eduLevel.charAt(0).toUpperCase() + eduLevel.slice(1)}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasic6\" className=\"flexColumn mb-20\">\r\n              <Form.Label>\r\n                Graduation Year<span style={{ color: \"red\" }}>*</span>\r\n              </Form.Label>\r\n              <select\r\n                defaultValue={gradYear}\r\n                onChange={(e) => (gradYear = e.target.value)}\r\n              >\r\n                <option value=\"year\" disabled>\r\n                  Year\r\n                </option>\r\n                {graduationYears.map((year) => (\r\n                  <option value={year.gradYear}>{year.gradYear}</option>\r\n                ))}\r\n              </select>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasic2\">\r\n              <Form.Label>\r\n                Your Description<span style={{ color: \"red\" }}>*</span>\r\n              </Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                defaultValue={desc}\r\n                onChange={(e) => (desc = e.target.value)}\r\n                placeholder=\"Enter your short bio/description here\"\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n\r\n          <div className=\"share\" style={{ justifyContent: \"center\" }}>\r\n            <a onClick={() => Add()} className=\"flexAlignCenter modal-button\">\r\n              Create Portfolio\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n  \r\n  const setAct = (option) => {\r\n    setAccept(option)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {home ? (\r\n        <a\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            if (isLogin) {\r\n              if (portfolio) {\r\n                history.push(\"/portfolio\");\r\n              } else {\r\n                (accept ? setModalShow(true) : setModalShow2(true))\r\n              }\r\n            } else {\r\n              WarningToast(\"You need to Login first!\");\r\n            }\r\n          }}\r\n          className=\"flexAlignCenter intro-button\"\r\n        >\r\n          Get Started\r\n        </a>\r\n      ) : (\r\n        <button\r\n          onClick={() => {\r\n            portfolio ? history.push(\"/portfolio\") : (accept ? setModalShow(true) : setModalShow2(true));\r\n          }}\r\n          className=\"edit-your-portfolio grow1\"\r\n        >\r\n          {portfolio ? \"Move to your Portfolio\" : \"Edit your Portfolio\"}\r\n        </button>\r\n      )}\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n      {terms && !accept && <TermsnCondns setModalShow1={setModalShow} setModalShow={setModalShow2} modalShow={modalShow2} terms={terms} setAccept={setAct} />}\r\n    </>\r\n  );\r\n}\r\n","F:\\Github\\zippy\\src\\components\\modals\\SendViaEmail.js",["237"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport \"../../styles/HelperStyles.css\";\r\nimport { Modal, Form } from \"react-bootstrap\";\r\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\r\nimport MailPreview from \"../MailPreview/MailPreview\";\r\nimport { ErrorToast, SuccessToast } from \"../../utility/localStorageControl\";\r\nimport AdminService from \"../../AdminServices/AdminService\";\r\nimport { setHistory } from \"../../features/user/userSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { lte } from \"lodash\";\r\n\r\nexport default function SendViaEmail({ open, close }) {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n  let mails = \"\";\r\n  let resume = \"\";\r\n  const resumeData = new FormData();\r\n\r\n  const OptionalHeader = {\r\n    \"Content-Type\":\r\n      \"multipart/form-data; boundary=<calculated when request is sent>\",\r\n  };\r\n\r\n  const handleInput = (event) => {\r\n    resume = event.target.files[0];\r\n  };\r\n\r\n  const SendMail = async () => {\r\n    if (mails !== \"\" && mails.includes(\"@\")) {\r\n      setModalShow(false);\r\n      open();\r\n      resumeData.append(\"file\", resume);\r\n      AdminService.sendMailwithAttachment(mails, resumeData, OptionalHeader)\r\n        .then((resp) => {\r\n          if (resp.data.status === \"success\") {\r\n            SuccessToast(resp.data.message);\r\n            AdminService.getUserData().then((resp) =>\r\n              dispatch(setHistory(resp.data))\r\n            );\r\n            close();\r\n          } else {\r\n            ErrorToast(resp.data.message);\r\n            close();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          ErrorToast(\"Some Error occured.\");\r\n          close();\r\n        });\r\n    } else {\r\n      ErrorToast(\"Missing email !\");\r\n    }\r\n  };\r\n  function MyVerticallyCenteredModal(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <div className=\"flexColumn\">\r\n          <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\r\n            <div style={{ width: 20 }}></div>\r\n            <h2 className=\"modal-head\">Send via Email</h2>\r\n            <button onClick={props.onHide}>\r\n              <AiOutlineCloseCircle style={{ fontSize: 40, color: \"black\" }} />\r\n            </button>\r\n          </div>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasic1\" className=\"mb-20\">\r\n              <Form.Label>\r\n                Enter the mail ID you would like to send the mail to\r\n                <span style={{ color: \"red\" }}>*</span>{\" \"}\r\n              </Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                defaultValue={mails}\r\n                onChange={(event) => (mails = event.target.value.trim())}\r\n                placeholder=\"example: anything@gmail.com\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasic12\" className=\"mb-20\">\r\n              <Form.Label>Upload Resume (Optional)</Form.Label>\r\n              <Form.Control\r\n                type=\"file\"\r\n                defaultValue={resume}\r\n                onChange={(event) => handleInput(event)}\r\n                placeholder=\"Click on Upload to attach resume\"\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n\r\n          <div className=\"flexRow flexBetween\">\r\n            <div className=\"flexColumn\">\r\n              <span className=\"modal-list\">\r\n                • File size should not more than 10 MB.\r\n              </span>\r\n              <span className=\"modal-list\">\r\n                • File should be in PDF format.\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"share\" style={{ justifyContent: \"center\" }}>\r\n            <a onClick={SendMail} className=\"flexAlignCenter modal-button\">\r\n              Send Mail\r\n            </a>\r\n          </div>\r\n\r\n          <div className=\"flexRow flexCenter end-section ph-20 flexAlignCenter mv-40\">\r\n            <hr style={{ width: \"35%\", color: \"rgba(154,154,154,1)\" }} />\r\n            <p className=\"end-text\" style={{ fontSize: 16 }}>\r\n              Mail Preview\r\n            </p>\r\n            <hr style={{ width: \"35%\", color: \"rgba(154,154,154,1)\" }} />\r\n          </div>\r\n\r\n          <MailPreview />\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"share\">\r\n        <a\r\n          className=\"flexRow flexAlignCenter email-button\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => setModalShow(true)}\r\n        >\r\n          Send Email\r\n        </a>\r\n      </div>\r\n\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","F:\\Github\\zippy\\src\\components\\modals\\AttachResume.js",["238"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport \"../../styles/HelperStyles.css\";\r\nimport { Modal, Form } from \"react-bootstrap\";\r\nimport {\r\n  AiOutlinePlusCircle,\r\n  AiOutlineCloseCircle,\r\n  AiOutlineLink,\r\n} from \"react-icons/ai\";\r\nimport { BsFillEyeFill } from \"react-icons/bs\";\r\nimport AdminService from \"../../AdminServices/AdminService\";\r\nimport { ErrorToast, SuccessToast } from \"../../utility/localStorageControl\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setPortfolio, userPortfolio } from \"../../features/user/userSlice\";\r\n\r\nexport default function AttachResumeModal({ open, close }) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const portfolio = useSelector(userPortfolio);\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  var url = portfolio.cloud_resume_link;\r\n\r\n  const ResumeAttach = async () => {\r\n    open();\r\n      if (url !== portfolio.cloud_resume_link && url !== \"\") {\r\n        setModalShow(false);\r\n        AdminService.AttachResume(url)\r\n          .then((resp) => {\r\n            AdminService.getUserData()\r\n              .then((resp) => {\r\n                setModalShow(false);\r\n                dispatch(setPortfolio(resp.data));\r\n                if (url.length > 0) {\r\n                  SuccessToast(\"Resume Added!\");\r\n                  close();\r\n                } else {\r\n                  SuccessToast(\"Resume Removed!\");\r\n                  close();\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                ErrorToast(\"Some Error Occured.\");\r\n                close();\r\n              });\r\n          })\r\n          .catch((err) => {\r\n            ErrorToast(\"Some Error Occured.\");\r\n            close();\r\n          });\r\n      } else {\r\n        if(portfolio.cloud_resume_link === 'https://'){\r\n          ErrorToast(\"Empty Field\");\r\n        } else {\r\n          ErrorToast(\"No Change\");\r\n        }\r\n        close();\r\n      }\r\n    close();\r\n  };\r\n\r\n  function MyVerticallyCenteredModal(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <div className=\"flexColumn\">\r\n          <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\r\n            <div style={{ width: 20 }}></div>\r\n            <h2 className=\"modal-head\">Attach your Resume</h2>\r\n            <button onClick={props.onHide}>\r\n              <AiOutlineCloseCircle style={{ fontSize: 40, color: \"black\" }} />\r\n            </button>\r\n          </div>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\" className=\"flexColumn mb-20\">\r\n              <Form.Label style={{ fontStyle: \"Poppins\" }}>\r\n                Enter your Resume link in the form of PDF below\r\n              </Form.Label>\r\n              <textarea\r\n                style={{\r\n                  fontStyle: \"Poppins\",\r\n                  borderRadius: 32,\r\n                  margin: \"10px 0\",\r\n                }}\r\n                rows={5}\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                defaultValue={url ? url : \"\"}\r\n                placeholder=\"Example https://www.gdrive.com/profile/abc,.pdf\"\r\n                onChange={(event) => (url = event.target.value.trim())}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n\r\n          <span className=\"modal-list\">\r\n            • Enter a proper Gdrive/Dropbox or any cloud link.\r\n          </span>\r\n          <span className=\"modal-list\">\r\n            • Upload the file in cloud in pdf format (Recommended).\r\n          </span>\r\n          <span className=\"modal-list\">\r\n            • Give Public Access to your shared link (Recommended).\r\n          </span>\r\n\r\n          <div className=\"share\" style={{ justifyContent: \"center\" }}>\r\n            <a\r\n              className=\"flexAlignCenter modal-button\"\r\n              onClick={() => ResumeAttach()}\r\n            >\r\n              Add to profile\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grow1 attach-resume flexRow flexAlignCenter flexEvenly\">\r\n        <p className=\"resume-head\">\r\n          {url && url !== \"https://\"\r\n            ? \"View attached PDF\"\r\n            : \"Attach your Resume\"}\r\n        </p>\r\n        {url && url !== \"https://\" && (\r\n          <div style={{ display: \"flex\", gap: 20 }}>\r\n            <AiOutlineLink\r\n              onClick={() => setModalShow(true)}\r\n              className=\"grow2 attach-resume__icon\"\r\n            />\r\n            <BsFillEyeFill\r\n              onClick={() => window.open(url)}\r\n              className=\"grow2 attach-resume__icon\"\r\n            />\r\n          </div>\r\n        )}\r\n        {(!url || url === \"https://\") && (\r\n          <AiOutlinePlusCircle\r\n            onClick={() => setModalShow(true)}\r\n            className=\"grow2 attach-resume__icon\"\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","F:\\Github\\zippy\\src\\components\\UpdateModals\\UpdatePortfolioModal.js",[],"F:\\Github\\zippy\\src\\components\\modals\\SentHistory.js",[],"F:\\Github\\zippy\\src\\components\\modals\\ShareModal.js",[],"F:\\Github\\zippy\\src\\components\\modals\\ProjectModal.js",[],"F:\\Github\\zippy\\src\\components\\modals\\ContestProfileModal.js",[],"F:\\Github\\zippy\\src\\components\\ProjectCard\\ProjectCard.js",[],"F:\\Github\\zippy\\src\\components\\modals\\CodingProfileModal.js",[],"F:\\Github\\zippy\\src\\components\\ContestCard\\ContestCard.js",[],"F:\\Github\\zippy\\src\\components\\CodingCard\\CodingCard.js",[],"F:\\Github\\zippy\\src\\components\\UpdateModals\\UpdateCourseTaken.js",[],"F:\\Github\\zippy\\src\\components\\UpdateModals\\UpdateExperience.js",[],"F:\\Github\\zippy\\src\\components\\GoogleBtn.js",["239","240","241","242","243"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useState, useEffect} from 'react'\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { ErrorToast, setItem, SuccessToast, WarningToast } from '../utility/localStorageControl';\r\nimport Axios from 'axios';\r\nimport PortfolioModal from '../components/modals/PortfolioModal';\r\nimport AdminService from '../AdminServices/AdminService';\r\nimport {API_ENDPOINT} from '../AdminServices/baseUrl';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {logOutUser, logUser, setUser, userID, userLogin, userPortfolio} from '../features/user/userSlice'\r\nimport { useHistory } from 'react-router-dom';\r\nimport TermsnCondns from './modals/TermsnCondns';\r\n\r\nconst CLIENT_ID = '148434873376-a1k8ubdj3g3oqkh53an00v8angbj2itd.apps.googleusercontent.com';\r\n\r\nconst GoogleBtn = ({open, close}) => {\r\n  const dispatch = useDispatch();\r\n  const isLogin = useSelector( userLogin );\r\n  const userid = useSelector(userID);\r\n  const [terms, setTerms] = useState(null);\r\n\r\n  const getData = async () => {\r\n    open();\r\n    Axios.get(`${API_ENDPOINT}/fe/get?page_type=TNC&key=tncAll`)\r\n      .then(resp => {\r\n        setTerms(resp.data.value.body);\r\n        close();\r\n      })\r\n      .catch(err => {\r\n        ErrorToast(\"Some Error Occured.\");\r\n        close();\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    open();\r\n    getData();\r\n    terms && close();\r\n  }, [terms])\r\n\r\n  const loginSuccess = (response) => {\r\n    open();\r\n    if(response.tokenId){\r\n      Axios.post(`${API_ENDPOINT}/login?idTokenString=${response.tokenId}`)\r\n        .then(response => {\r\n          dispatch(logUser(response.data));\r\n          setItem('accessToken', response.data.access_token);\r\n          AdminService.getUserData()\r\n            .then(resp => {\r\n              dispatch(setUser(resp.data));\r\n              SuccessToast('Successfully Logged In');\r\n              SuccessToast('User Details fetched!');\r\n              close();\r\n            })\r\n            .catch(err => {\r\n              ErrorToast(\"Some Error Occured, Re-login\");\r\n              close();\r\n            });\r\n        })\r\n        .catch(function (error) {\r\n          ErrorToast('Login Failed, Retry!');\r\n          close();\r\n        });\r\n    }\r\n  }\r\n\r\n  const loginFailure = (response) => {\r\n    open();    \r\n    ErrorToast('Login Failed, Retry!');\r\n    close();\r\n  }\r\n\r\n  isLogin &&\r\n    setTimeout(() => {\r\n      dispatch(logOutUser());\r\n    }, 604800000)\r\n\r\n  return (\r\n    <div>\r\n      { isLogin && userid ? (\r\n        <>\r\n          <PortfolioModal home={false} open={() => open()} close={() => close()} terms={terms} />\r\n        </>\r\n        )\r\n        : \r\n        (\r\n          <GoogleLogin\r\n            clientId={ CLIENT_ID }\r\n            buttonText='Sign in with Google'\r\n            onSuccess={ loginSuccess }\r\n            onFailure={ loginFailure }\r\n            cookiePolicy={ 'single_host_origin' }\r\n            responseType='code,token'\r\n            className=\"google-button\"\r\n          />\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoogleBtn;","F:\\Github\\zippy\\src\\components\\MailPreview\\MailPreview.js",[],"F:\\Github\\zippy\\src\\AdminServices\\dataService.js",[],"F:\\Github\\zippy\\src\\components\\UpdateModals\\UpdateProject.js",[],"F:\\Github\\zippy\\src\\components\\UpdateModals\\UpdateCodingProfile.js",[],"F:\\Github\\zippy\\src\\components\\UpdateModals\\UpdateContestProfile.js",[],"F:\\Github\\zippy\\src\\components\\modals\\TermsnCondns.js",["244","245","246","247","248"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useState, useEffect} from 'react';\r\nimport '../../styles/HelperStyles.css'\r\nimport { Modal } from 'react-bootstrap';\r\nimport {AiOutlineCloseCircle} from 'react-icons/ai';\r\nimport '../../styles/HelperStyles.css'\r\nimport axios from 'axios';\r\nimport { ErrorToast } from '../../utility/localStorageControl';\r\nimport { API_ENDPOINT } from '../../AdminServices/baseUrl';\r\n\r\nexport default function TermsnCondns({terms, setAccept, modalShow, setModalShow, setModalShow1}) {\r\n    function MyVerticallyCenteredModal(props) {\r\n        return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <div className=\"flexColumn\">\r\n                <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\r\n                    <h2 className=\"modal-head\">Terms and Conditions</h2>\r\n                    <button onClick={props.onHide}>\r\n                        <AiOutlineCloseCircle style={{fontSize: 40, color: 'black'}} />\r\n                    </button>\r\n                </div>\r\n                \r\n                <div className=\"modalBox\">\r\n                    {terms}\r\n                </div>\r\n\r\n                <div className=\"flexRow flexAlignCenter flexEnd\">\r\n                    <div className=\"share\">\r\n                        <a onClick={() => {props.setAccept(false); setModalShow1(false); props.onHide()}} className=\"flexAlignCenter modal-button newModalButton\">Decline</a>\r\n                    </div>\r\n                    <div className=\"share\">\r\n                        <a onClick={() => {props.setAccept(true); setModalShow1(true); props.onHide()}} className=\"flexAlignCenter modal-button\">I Agree</a>\r\n                    </div>\r\n                </div>\r\n    \r\n            </div>\r\n        </Modal>\r\n        );\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        setAccept={setAccept}\r\n      />\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","severity":1,"message":"254","line":191,"column":6,"nodeType":"255","endLine":191,"endColumn":33,"suggestions":"256"},{"ruleId":"253","severity":1,"message":"257","line":60,"column":6,"nodeType":"255","endLine":60,"endColumn":8,"suggestions":"258"},{"ruleId":"259","severity":1,"message":"260","line":5,"column":8,"nodeType":"261","messageId":"262","endLine":5,"endColumn":14},{"ruleId":"263","severity":1,"message":"264","line":68,"column":17,"nodeType":"265","endLine":71,"endColumn":87},{"ruleId":"263","severity":1,"message":"264","line":72,"column":17,"nodeType":"265","endLine":72,"endColumn":84},{"ruleId":"263","severity":1,"message":"264","line":81,"column":25,"nodeType":"265","endLine":84,"endColumn":97},{"ruleId":"263","severity":1,"message":"264","line":85,"column":25,"nodeType":"265","endLine":85,"endColumn":92},{"ruleId":"253","severity":1,"message":"266","line":114,"column":6,"nodeType":"255","endLine":114,"endColumn":8,"suggestions":"267"},{"ruleId":"259","severity":1,"message":"268","line":11,"column":10,"nodeType":"261","messageId":"262","endLine":11,"endColumn":13},{"ruleId":"259","severity":1,"message":"269","line":19,"column":9,"nodeType":"261","messageId":"262","endLine":19,"endColumn":16},{"ruleId":"259","severity":1,"message":"270","line":4,"column":45,"nodeType":"261","messageId":"262","endLine":4,"endColumn":57},{"ruleId":"259","severity":1,"message":"271","line":10,"column":58,"nodeType":"261","messageId":"262","endLine":10,"endColumn":71},{"ruleId":"259","severity":1,"message":"272","line":11,"column":10,"nodeType":"261","messageId":"262","endLine":11,"endColumn":20},{"ruleId":"259","severity":1,"message":"273","line":12,"column":8,"nodeType":"261","messageId":"262","endLine":12,"endColumn":20},{"ruleId":"253","severity":1,"message":"274","line":39,"column":6,"nodeType":"255","endLine":39,"endColumn":13,"suggestions":"275"},{"ruleId":"259","severity":1,"message":"276","line":2,"column":16,"nodeType":"261","messageId":"262","endLine":2,"endColumn":24},{"ruleId":"259","severity":1,"message":"277","line":2,"column":26,"nodeType":"261","messageId":"262","endLine":2,"endColumn":35},{"ruleId":"259","severity":1,"message":"278","line":7,"column":8,"nodeType":"261","messageId":"262","endLine":7,"endColumn":13},{"ruleId":"259","severity":1,"message":"279","line":8,"column":10,"nodeType":"261","messageId":"262","endLine":8,"endColumn":20},{"ruleId":"259","severity":1,"message":"280","line":9,"column":10,"nodeType":"261","messageId":"262","endLine":9,"endColumn":22},"no-native-reassign",["281"],"no-negated-in-lhs",["282"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkCookie' and 'cookieAcceptStatus'. Either include them or remove the dependency array.","ArrayExpression",["283"],"React Hook useEffect has a missing dependency: 'QnA'. Either include it or remove the dependency array.",["284"],"no-unused-vars","'edited' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'accept', 'home', and 'portfolio'. Either include them or remove the dependency array.",["285"],"'lte' is defined but never used.","'history' is assigned a value but never used.","'WarningToast' is defined but never used.","'userPortfolio' is defined but never used.","'useHistory' is defined but never used.","'TermsnCondns' is defined but never used.","React Hook useEffect has missing dependencies: 'close', 'getData', and 'open'. Either include them or remove the dependency array. If 'open' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["286"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'ErrorToast' is defined but never used.","'API_ENDPOINT' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},"Update the dependencies array to be: [accessToken, checkCookie, cookieAcceptStatus, cookieStatus]",{"range":"295","text":"296"},"Update the dependencies array to be: [QnA]",{"range":"297","text":"298"},"Update the dependencies array to be: [accept, home, portfolio]",{"range":"299","text":"300"},"Update the dependencies array to be: [close, getData, open, terms]",{"range":"301","text":"302"},[6125,6152],"[accessToken, checkCookie, cookieAcceptStatus, cookieStatus]",[2446,2448],"[QnA]",[3588,3590],"[accept, home, portfolio]",[1409,1416],"[close, getData, open, terms]"]