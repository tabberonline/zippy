[{"F:\\Github\\zippy1\\src\\index.js":"1","F:\\Github\\zippy1\\src\\reportWebVitals.js":"2","F:\\Github\\zippy1\\src\\App.js":"3","F:\\Github\\zippy1\\src\\screens\\ContactScreen\\ContactScreen.js":"4","F:\\Github\\zippy1\\src\\screens\\HomeScreen\\HomeScreen.js":"5","F:\\Github\\zippy1\\src\\screens\\AboutScreen\\AboutScreen.js":"6","F:\\Github\\zippy1\\src\\screens\\DisplayScreen\\DisplayScreen.js":"7","F:\\Github\\zippy1\\src\\screens\\PortfolioScreen\\PortfolioScreen.js":"8","F:\\Github\\zippy1\\src\\utility\\localStorageControl.js":"9","F:\\Github\\zippy1\\src\\components\\FAQCard\\FAQCard.js":"10","F:\\Github\\zippy1\\src\\components\\AchievementCard\\AchievementCard.js":"11","F:\\Github\\zippy1\\src\\components\\Header\\Header1.js":"12","F:\\Github\\zippy1\\src\\components\\FeatureCard\\FeatureCard.js":"13","F:\\Github\\zippy1\\src\\components\\Footer\\Footer.js":"14","F:\\Github\\zippy1\\src\\components\\Header\\Header.js":"15","F:\\Github\\zippy1\\src\\components\\modals\\PortfolioModal.js":"16","F:\\Github\\zippy1\\src\\components\\modals\\ShareModal.js":"17","F:\\Github\\zippy1\\src\\components\\modals\\ContestProfileModal.js":"18","F:\\Github\\zippy1\\src\\components\\modals\\ProjectModal.js":"19","F:\\Github\\zippy1\\src\\components\\ContestCard\\ContestCard.js":"20","F:\\Github\\zippy1\\src\\components\\ProjectCard\\ProjectCard.js":"21","F:\\Github\\zippy1\\src\\components\\ProjectCard\\ProjectCardDisplay.js":"22","F:\\Github\\zippy1\\src\\components\\ContestCard\\ContestCardDisplay.js":"23","F:\\Github\\zippy1\\src\\components\\modals\\CodingProfileModal.js":"24","F:\\Github\\zippy1\\src\\components\\CodingCard\\CodingCardDisplay.js":"25","F:\\Github\\zippy1\\src\\components\\CodingCard\\CodingCard.js":"26","F:\\Github\\zippy1\\src\\AdminServices\\AdminService.js":"27","F:\\Github\\zippy1\\src\\components\\GoogleBtn.js":"28","F:\\Github\\zippy1\\src\\AdminServices\\dataService.js":"29","F:\\Github\\zippy1\\src\\components\\UpdateModals\\UpdateCodingProfile.js":"30","F:\\Github\\zippy1\\src\\components\\UpdateModals\\UpdateContestProfile.js":"31","F:\\Github\\zippy1\\src\\components\\UpdateModals\\UpdateProject.js":"32","F:\\Github\\zippy1\\src\\utility\\reducer.js":"33","F:\\Github\\zippy1\\src\\utility\\StateProvider.js":"34","F:\\Github\\zippy1\\src\\screens\\PolicyScreen\\PolicyScreen.js":"35","F:\\Github\\zippy1\\src\\screens\\TermsScreen\\TermsScreen.js":"36","F:\\Github\\zippy1\\src\\components\\modals\\SendViaEmail.js":"37","F:\\Github\\zippy1\\src\\components\\modals\\AttachResume.js":"38","F:\\Github\\zippy1\\src\\components\\MailPreview\\MailPreview.js":"39","F:\\Github\\zippy1\\src\\components\\modals\\SentHistory.js":"40","F:\\Github\\zippy1\\src\\AdminServices\\baseUrl.js":"41"},{"size":1908,"mtime":1611356572024,"results":"42","hashOfConfig":"43"},{"size":362,"mtime":1610430732000,"results":"44","hashOfConfig":"43"},{"size":557,"mtime":1610996793644,"results":"45","hashOfConfig":"43"},{"size":4819,"mtime":1611326115981,"results":"46","hashOfConfig":"43"},{"size":6270,"mtime":1613930590511,"results":"47","hashOfConfig":"43"},{"size":2386,"mtime":1611324498222,"results":"48","hashOfConfig":"43"},{"size":4699,"mtime":1613930583090,"results":"49","hashOfConfig":"43"},{"size":8949,"mtime":1613930822753,"results":"50","hashOfConfig":"43"},{"size":3041,"mtime":1610430732000,"results":"51","hashOfConfig":"43"},{"size":1298,"mtime":1610498564435,"results":"52","hashOfConfig":"43"},{"size":635,"mtime":1611680678327,"results":"53","hashOfConfig":"43"},{"size":1606,"mtime":1611321850691,"results":"54","hashOfConfig":"43"},{"size":572,"mtime":1611503969703,"results":"55","hashOfConfig":"43"},{"size":759,"mtime":1611351261128,"results":"56","hashOfConfig":"43"},{"size":1127,"mtime":1611085328806,"results":"57","hashOfConfig":"43"},{"size":6414,"mtime":1611592482111,"results":"58","hashOfConfig":"43"},{"size":2740,"mtime":1613082646561,"results":"59","hashOfConfig":"43"},{"size":5581,"mtime":1611343299198,"results":"60","hashOfConfig":"43"},{"size":4540,"mtime":1612827969878,"results":"61","hashOfConfig":"43"},{"size":10571,"mtime":1613930746780,"results":"62","hashOfConfig":"43"},{"size":8453,"mtime":1613930756312,"results":"63","hashOfConfig":"43"},{"size":893,"mtime":1610500837174,"results":"64","hashOfConfig":"43"},{"size":1323,"mtime":1610500821083,"results":"65","hashOfConfig":"43"},{"size":6454,"mtime":1611343095636,"results":"66","hashOfConfig":"43"},{"size":1130,"mtime":1610500809531,"results":"67","hashOfConfig":"43"},{"size":10775,"mtime":1613930736048,"results":"68","hashOfConfig":"43"},{"size":1920,"mtime":1613932589442,"results":"69","hashOfConfig":"43"},{"size":3288,"mtime":1613931189790,"results":"70","hashOfConfig":"43"},{"size":2350,"mtime":1613930364484,"results":"71","hashOfConfig":"43"},{"size":5337,"mtime":1610616437296,"results":"72","hashOfConfig":"43"},{"size":5688,"mtime":1610616445721,"results":"73","hashOfConfig":"43"},{"size":4612,"mtime":1610430732000,"results":"74","hashOfConfig":"43"},{"size":1124,"mtime":1610457107933,"results":"75","hashOfConfig":"43"},{"size":373,"mtime":1610473541120,"results":"76","hashOfConfig":"43"},{"size":9007,"mtime":1611353178319,"results":"77","hashOfConfig":"43"},{"size":9010,"mtime":1611356514983,"results":"78","hashOfConfig":"43"},{"size":3922,"mtime":1613930843651,"results":"79","hashOfConfig":"43"},{"size":3395,"mtime":1613931648654,"results":"80","hashOfConfig":"43"},{"size":2207,"mtime":1612832365310,"results":"81","hashOfConfig":"43"},{"size":3502,"mtime":1613118657747,"results":"82","hashOfConfig":"43"},{"size":165,"mtime":1613930185166,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"17xg5nk",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"86"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Github\\zippy1\\src\\index.js",[],["180","181"],"F:\\Github\\zippy1\\src\\reportWebVitals.js",[],"F:\\Github\\zippy1\\src\\App.js",["182"],"import React, {useEffect} from 'react';\nimport './App.css';\nimport HomeScreen from './screens/HomeScreen/HomeScreen';\nimport {setItem, getItem} from './utility/localStorageControl';\n\nfunction App() {  \n  useEffect(() => {\n    setItem('login', false);\n    setItem('access_token', '');\n    setItem('name', '');\n    setItem('image', '');\n    setItem('portfolio', false);\n    setItem('projects', []);\n    setItem('rank', []);\n    setItem('contest', []);\n  }, []);\n  return (\n    <div className=\"App\">\n      <HomeScreen />\n    </div>\n  );\n}\n\nexport default App;\n","F:\\Github\\zippy1\\src\\screens\\ContactScreen\\ContactScreen.js",["183"],"import React, { useState } from 'react';\nimport '../../styles/HelperStyles.css';\nimport './ContactScreen.css';\nimport Footer from '../../components/Footer/Footer';\nimport contactimg from '../../assets/images/Contactimg.png';\nimport {Form} from 'react-bootstrap';\nimport Header1 from '../../components/Header/Header1';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AdminService from '../../AdminServices/AdminService';\nimport { Animated } from 'react-animated-css';\n\nfunction ContactScreen() {\n    const [name, setName] = useState('');\n    const [subject, setSubject] = useState('');\n    const [message, setMessage] = useState('');\n\n    const SendMail = async () => {\n        if(name.length > 0 && subject.length > 0 && message.length > 0){\n            const mailContent = {\n                'subject': subject,\n                'text': message\n            }\n            AdminService.sendMail(mailContent)\n                .then(resp => {\n                    toast.success('Mail Sent!', {\n                        position: \"top-center\",\n                        autoClose: 2000,\n                        hideProgressBar: true,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    });\n                    window.open('/contact', '_self')\n                })\n                .catch(err => {\n                    toast.error('Invalid entries!', {\n                        position: \"top-center\",\n                        autoClose: 2000,\n                        hideProgressBar: true,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                    });\n                })\n        } else{\n            toast.error('Error, Fields cannot be empty!', {\n                position: \"top-center\",\n                autoClose: 2000,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n              });\n        }\n\n    }\n  return (\n    <div className=\"contact-screen\">\n        <Header1 />\n        <div id=\"contact-section\">\n          <div className=\"mw1100 flexColumn\">\n            <Animated isVisible={true} animationIn=\"slideInUp\">\n                <div className=\"flexColumn flexAlignCenter flexCenter mh-20 contact-header\">\n                    <img src={contactimg} alt=\"\" style={{width: '90%'}} />\n                </div>\n            </Animated>\n            <ToastContainer\n                position=\"top-center\"\n                autoClose={3000}\n                hideProgressBar={true}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss\n                draggable\n                pauseOnHover\n            />\n            <Animated isVisible={true} animationIn=\"slideInUp\">\n                <div className=\"flexColumn contact-section\">\n                    <h1 className=\"contact-heading\">Have anything to ask?</h1>\n                    <div className=\"flexColumn flexAround flexAlignCenter mv-40\">\n                        <Form style={{width: '75%'}}>\n                            <Form.Group controlId=\"formBasicEmail\" className=\"mb-20\">\n                                <Form.Label>Name*</Form.Label>\n                                <Form.Control type=\"name\" defaultValue={name} onChange={(e) => setName(e.target.value)} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formBasicPassword2\" className=\"mb-20\">\n                                <Form.Label>Subject*</Form.Label>\n                                <Form.Control type=\"text\" defaultValue={subject} onChange={(e) => setSubject(e.target.value)} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formBasicPassword3\">\n                                <Form.Label>Message*</Form.Label>\n                                <Form.Control as=\"textarea\" rows={5} defaultValue={message} onChange={(e) => setMessage(e.target.value)} />\n                            </Form.Group>\n\n                            <div className=\"share\" onClick={() => SendMail()} style={{cursor: 'pointer', justifyContent: 'flex-start', paddingLeft: 0, paddingTop: 30}}>\n                                <a className=\"flexAlignCenter modal-button\">Send</a>\n                            </div>\n                        </Form>\n                    </div>\n                </div>\n            </Animated>\n          </div>\n      </div>\n        <Footer />\n    </div>\n  );\n}\n\nexport default ContactScreen;\n","F:\\Github\\zippy1\\src\\screens\\HomeScreen\\HomeScreen.js",["184","185","186"],"F:\\Github\\zippy1\\src\\screens\\AboutScreen\\AboutScreen.js",[],"F:\\Github\\zippy1\\src\\screens\\DisplayScreen\\DisplayScreen.js",[],"F:\\Github\\zippy1\\src\\screens\\PortfolioScreen\\PortfolioScreen.js",["187","188","189","190","191","192"],"F:\\Github\\zippy1\\src\\utility\\localStorageControl.js",[],"F:\\Github\\zippy1\\src\\components\\FAQCard\\FAQCard.js",[],"F:\\Github\\zippy1\\src\\components\\AchievementCard\\AchievementCard.js",[],"F:\\Github\\zippy1\\src\\components\\Header\\Header1.js",["193","194"],"import {React, useState} from 'react';\nimport './Header.css';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport splashlogo from '../../assets/images/logo.png';\nimport GoogleBtn from '../GoogleBtn';\nimport Avatar from '@material-ui/core/Avatar';\nimport { getItem, setItem } from '../../utility/localStorageControl';\n\nfunction Header1(){\n    return (\n        <header className=\"header\">\n            <Navbar sticky=\"top\" expand=\"lg\" className=\"flexRow flexAlignCenter navbar\">\n                <Navbar.Brand className=\"flexColumn flexAlignCenter\" href=\"/home\">\n                    <img src={splashlogo} width=\"150\" height=\"30\" className=\"d-inline-block mr-80\" alt=\"logo\" />\n                </Navbar.Brand>\n                <div className=\"w100 flexRow flexAlignCenter flexBetween\">\n                    <Nav className=\"mr-auto flexRow\">\n                        <Nav.Link className=\"grow2\" href=\"/about\">About</Nav.Link>\n                        <Nav.Link className=\"grow2\" href=\"/home#faq\">FAQ</Nav.Link>\n                        <Nav.Link className=\"grow2\" href=\"/contact\">Contact</Nav.Link>\n                    </Nav>\n                    {getItem('login') ? (\n                        <div className=\"avatar\">\n                            <Avatar alt=\"img\" src={getItem('image')} />\n                            <p className=\"avatar-name\">Welcome<br/><p className=\"name\">{getItem('name')}</p></p>\n                        </div>\n                    ) : (\n                        <GoogleBtn />\n                    )}\n                </div>\n            </Navbar>\n        </header>\n    );\n}\n\nexport default Header1;","F:\\Github\\zippy1\\src\\components\\FeatureCard\\FeatureCard.js",[],"F:\\Github\\zippy1\\src\\components\\Footer\\Footer.js",[],"F:\\Github\\zippy1\\src\\components\\Header\\Header.js",["195"],"import {React, useState} from 'react';\nimport './Header.css';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport splashlogo from '../../assets/images/logo.png';\nimport GoogleBtn from '../GoogleBtn';\n\nfunction Header(){\n    return (\n        <header className=\"header\">\n            <Navbar sticky=\"top\" expand=\"lg\" className=\"flexRow flexAlignCenter navbar\">\n                <Navbar.Brand className=\"flexColumn flexAlignCenter\" href=\"/home\">\n                    <img src={splashlogo} width=\"150\" height=\"30\" className=\"d-inline-block mr-80\" alt=\"logo\" />\n                </Navbar.Brand>\n                <div className=\"w100 flexRow flexAlignCenter flexBetween\">\n                    <Nav className=\"mr-auto flexRow\">\n                        <Nav.Link className=\"grow2\" href=\"/about\">About</Nav.Link>\n                        <Nav.Link className=\"grow2\" href=\"/home#faq\">FAQ</Nav.Link>\n                        <Nav.Link className=\"grow2\" href=\"/contact\">Contact</Nav.Link>\n                    </Nav>\n                    <GoogleBtn />\n                </div>\n            </Navbar>\n        </header>\n    );\n}\n\nexport default Header;","F:\\Github\\zippy1\\src\\components\\modals\\PortfolioModal.js",["196"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from 'react';\nimport '../../styles/HelperStyles.css'\nimport { Form, Modal } from 'react-bootstrap';\nimport {AiOutlineCloseCircle} from 'react-icons/ai';\nimport { getItem, setItem } from '../../utility/localStorageControl';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AdminService from '../../AdminServices/AdminService';\n  \n  export default function PortfolioModal({home}) {\n    const [modalShow, setModalShow] = useState(false);\n    const [apicall, setcall] = useState('');\n    var name = '';\n    var title = '';\n    var desc = '';    \n\n    const createPortfolio = async () => {\n      const accessToken = getItem('access_token');\n      if(accessToken === \"\"){\n        toast.error('Access Token not Retrieved!', {\n          position: \"top-center\",\n          autoClose: 2000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n      } else{\n        if(title.length > 0 && desc.length > 0){\n          const portfolioData = {\n              'title': getItem('titlePortfolio'),\n              'picture_url': getItem('image'),\n              'description': getItem('descPortfolio')\n          };\n          AdminService.createPortfolio(portfolioData)\n            .then(resp => {\n              toast.success('Details Entered!', {\n                position: \"top-center\",\n                autoClose: 2000,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n              });\n              setcall('Success');\n              AdminService.getUserData()\n                .then(resp => {\n                  setItem('portfolio', resp.data.resume_present);\n                  setModalShow(false);\n                  window.open('/portfolio', '_self');                  \n                })\n                .catch(err => console.log(err));\n            })\n            .catch(err => {\n              toast.error('Error, One User, One Portfolio!', {\n                position: \"top-center\",\n                autoClose: 2000,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n              });\n            });\n        } else {\n          toast.error('Error, Fields cannot be empty!', {\n            position: \"top-center\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        }\n      }\n    };  \n\n    const Add = () => {\n      setItem('name', name);\n      setItem('titlePortfolio', title);\n      setItem('descPortfolio', desc);\n      createPortfolio();\n    }\n\n    const ModalOpen = () => {\n      apicall === 'Success' ? window.open('/portfolio', '_self') : setModalShow(true);\n    }\n\n    function MyVerticallyCenteredModal(props) {\n        return (\n          <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <div className=\"flexColumn\">\n            <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\n              <div style={{width: 20}}></div>\n              <h2 className=\"modal-head\">Add Portfolio Details</h2>\n              <button onClick={props.onHide}>\n                <AiOutlineCloseCircle style={{fontSize: 40, color: 'black'}} />\n              </button>\n            </div>\n            <Form>\n              <Form.Group controlId=\"formBasic1\" className=\"mb-20\">\n                <Form.Label>Your Name<span style={{color: 'red'}}>*</span> </Form.Label>\n                <Form.Control type=\"text\" defaultValue={name} onChange={(e) => name = (e.target.value)} placeholder=\"Eg. Aarav Bansal\" />\n              </Form.Group>    \n              <Form.Group controlId=\"formBasic1\" className=\"mb-20\">\n                <Form.Label>Your Portfolio Title<span style={{color: 'red'}}>*</span> </Form.Label>\n                <Form.Control type=\"text\" defaultValue={title} onChange={(e) => title = (e.target.value)} placeholder=\"Eg. Web Developer\" />\n              </Form.Group>    \n              <Form.Group controlId=\"formBasic2\">\n                <Form.Label>Your Description<span style={{color: 'red'}}>*</span></Form.Label>\n                <Form.Control type=\"text\" defaultValue={desc} onChange={(e) => desc = (e.target.value)} placeholder=\"Enter your College and profile description here\" />\n              </Form.Group>    \n            </Form>\n    \n            <div className=\"share\" style={{justifyContent: 'center'}}>\n              <a onClick={() => Add()} className=\"flexAlignCenter modal-button\">Create Portfolio</a>\n            </div>\n    \n          </div>\n          </Modal>\n        );\n      }\n  \n    return (\n      <>\n        {\n          home ? (\n            <a style={{cursor: 'pointer'}} onClick={() => {\n              if(getItem('login')){\n                if(getItem('portfolio')){\n                  window.open('/portfolio', '_self');\n                } else {\n                  setModalShow(true);\n                }\n              } else{\n                toast.warning('You need to Login first!', {\n                  position: \"top-center\",\n                  autoClose: 2000,\n                  hideProgressBar: true,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  draggable: true,\n                  progress: undefined,\n                });\n              }\n            }} className=\"flexAlignCenter intro-button\"\n          >\n            Get Started\n          </a>\n          ) :\n            (\n              <button onClick={() => {\n                  getItem('portfolio') ? window.open('/portfolio', '_self') : ModalOpen()\n                }} \n                className=\"edit-your-portfolio grow1\"\n              >\n                {apicall === 'Success' || getItem('portfolio') ? 'Move to your Portfolio' : 'Edit your Portfolio'}\n              </button>\n            )\n        }\n        <MyVerticallyCenteredModal\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n        />\n      </>\n    );\n  }","F:\\Github\\zippy1\\src\\components\\modals\\ShareModal.js",[],"F:\\Github\\zippy1\\src\\components\\modals\\ContestProfileModal.js",["197"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport '../../styles/HelperStyles.css'\nimport { Modal, Form } from 'react-bootstrap';\nimport {AiOutlineCloseCircle, AiOutlinePlusCircle} from 'react-icons/ai';\nimport { PortalMap, setItem, getItem } from '../../utility/localStorageControl';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AdminService from '../../AdminServices/AdminService';\n\nexport default function ContestProfileModal() {\n  const [modalShow, setModalShow] = React.useState(false);\n  var portal = \"Eg. GeeksforGeeks, CodeChef\";\n  const data = ['Geeks for Geeks', 'CodeChef', 'CodeForces', 'HackerRank', 'TopCoder', 'LeetCode'];\n  var contest = '';\n  var rank = '';\n  var username = '';\n\n  const formatPortal = portal => {\n    return portal.split(' ').join('').toLowerCase();\n  }\n\n  const createWidget = async () => {\n    if(portal && username && rank && contest){\n      const contestWidgetData = {\n        'rank' : getItem('Contestrank'),\n        'website_id' : getItem('website_id'),\n        'username' : getItem('Contestusername'),\n        'contest_name': getItem('Contestname')\n      }\n      AdminService.createContestWidget(contestWidgetData)\n        .then(response => {\n          toast.success('Details Entered!', {\n            position: \"top-center\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n          AdminService.getUserData()\n            .then(resp => {\n              setItem('contestWidgets', resp.data.contest_widgets);\n              window.open('/portfolio', '_self');\n              setModalShow(false);\n            })\n            .catch(err => console.log(err));\n        })\n        .catch(error => {\n          toast.error('Error, Enter correct details!', {\n            position: \"top-center\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        });\n    } else {\n      toast.error('Error, Fields cannot be empty!', {\n        position: \"top-center\",\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  }\n\n  const getPortalDetails = (portal) => {\n    if(portal !== ''){\n      setItem('url', PortalMap.get(portal).url);\n      setItem('website_id', PortalMap.get(portal).id);\n      setItem('logo', PortalMap.get(portal).logo);\n    }\n  }\n\n  const UpdateCard = () => {\n    setItem('Contestportal', portal);\n    getPortalDetails(formatPortal(getItem('Contestportal')));\n    setItem('Contestusername', username);\n    setItem('Contestrank', rank);\n    setItem('Contestname', contest);\n    createWidget();\n  }\n\n  function MyVerticallyCenteredModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <div className=\"flexColumn\">\n          <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\n            <div style={{width: 20}}></div>\n            <h2 className=\"modal-head\">Add Contests won</h2>\n            <button onClick={props.onHide}>\n              <AiOutlineCloseCircle style={{fontSize: 40, color: 'black'}} />\n            </button>\n          </div>\n          <Form>\n            <Form.Group controlId=\"formBasicEmail\" className=\" flexColumn mb-20\">\n              <Form.Label>Website Name</Form.Label>\n              <select defaultValue={portal} onChange={(e) => portal = (e.target.value)}>\n                <option value=\"Eg. GeeksforGeeks, CodeChef\" disabled>Eg. GeeksforGeeks, CodeChef</option>\n                {data.map(platform => (\n                  <option value={platform}>{platform}</option>\n                ))}\n              </select>\n            </Form.Group>\n  \n            <Form.Group controlId=\"formBasicPassword1\" className=\"mb-20\">\n              <Form.Label>Your Profile Username </Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Eg. abc_234\" defaultValue={username} onChange={(e) => username = (e.target.value)} />\n            </Form.Group>\n  \n            <Form.Group controlId=\"formBasicPassword2\" className=\"mb-20\">\n              <Form.Label>Contest Name</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Eg. 2020 Hackathon\" defaultValue={contest} onChange={(e) => contest = (e.target.value)} />\n            </Form.Group>\n  \n            <Form.Group controlId=\"formBasicPassword3\">\n              <Form.Label>Your Rank</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Eg. 2514\" defaultValue={rank} onChange={(e) => rank = (e.target.value)} />\n            </Form.Group>\n  \n          </Form>\n  \n          <div className=\"share\" style={{justifyContent: 'center'}}>\n            <a onClick={() => UpdateCard()} className=\"flexAlignCenter modal-button\">Add to Profile</a>\n          </div>\n  \n        </div>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"grow1 flexColumn flexCenter flexAlignCenter add-card1\" style={{height: 250}}>\n        <button onClick={() => setModalShow(true)}>\n          <AiOutlinePlusCircle style={{fontSize: 80, color: '#C0C0C0'}} />\n        </button>\n      </div>\n\n      <MyVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n}\n","F:\\Github\\zippy1\\src\\components\\modals\\ProjectModal.js",["198"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport '../../styles/HelperStyles.css'\nimport { Modal, Form } from 'react-bootstrap';\nimport {AiOutlineCloseCircle, AiOutlinePlusCircle} from 'react-icons/ai';\nimport { setItem, getItem } from '../../utility/localStorageControl';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AdminService from '../../AdminServices/AdminService';\n\nexport default function ProjectModal() {\n  const [modalShow, setModalShow] = React.useState(false);\n  var url = '';\n  var project = '';\n\n  const createWidget = async () => {\n    if(url.length > 0 && project.length > 0 ){\n      const projectWidgetData = {\n        'title' : getItem('Projectname'),\n        'link' : getItem('Projectid')\n      }\n      AdminService.createProjectWidget(projectWidgetData)\n        .then(response => {\n          console.log(response);\n          toast.success('Details Entered!', {\n            position: \"top-center\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n          AdminService.getUserData()\n            .then(resp => {\n              setItem('projectWidgets', resp.data.personal_projects);\n              window.open('/portfolio', '_self');\n              setModalShow(false);\n            })\n            .catch(err => console.log(err));\n        })\n        .catch(error => {\n          toast.error('Error, Enter correct details!', {\n            position: \"top-center\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        });\n    } else {\n      toast.error('Error, Fields cannot be empty!', {\n        position: \"top-center\",\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  }\n\n  const UpdateCard = () => {\n    setItem('Projectname', project);\n    setItem('Projectid', url);\n    createWidget();\n    setModalShow(false);\n  }\n\n  function MyVerticallyCenteredModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <div className=\"flexColumn\">\n          <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\n            <div style={{width: 20}}></div>\n            <h2 className=\"modal-head\">Add your work</h2>\n            <button onClick={props.onHide}>\n              <AiOutlineCloseCircle style={{fontSize: 40, color: 'black'}} />\n            </button>\n          </div>\n          <Form>\n            <Form.Group controlId=\"formBasicEmail\" className=\"mb-20\">\n              <Form.Label>Project Title</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Eg. Automated System\" defaultValue={project} onChange={(e) => project = (e.target.value)} />\n            </Form.Group>\n  \n            <Form.Group controlId=\"formBasicPassword1\" className=\"mb-20\">\n              <Form.Label>Project URL</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"http://www.google.com/\" defaultValue={url} onChange={(e) => url = (e.target.value)} />\n            </Form.Group>\n  \n            <Form.Group controlId=\"formBasicPassword2\" className=\"mb-20\">\n              <Form.Label>Cover Image</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Click on “upload cover” to upload an image of less than 2MB for your website cover.\" />\n            </Form.Group>\n  \n            <div className=\"grow5 share\">\n              <a className=\"flexAlignCenter upload-button\">Upload Cover</a>\n            </div>\n  \n          </Form>\n  \n          <div className=\"share\" style={{justifyContent: 'center'}}>\n            <a onClick={() => UpdateCard()} className=\"flexAlignCenter modal-button\">Add to Profile</a>\n          </div>\n  \n        </div>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"grow1 flexColumn flexCenter flexAlignCenter add-card\" style={{height: 280}}>\n        <button onClick={() => setModalShow(true)}>\n          <AiOutlinePlusCircle style={{fontSize: 80, color: '#C0C0C0'}} />\n        </button>\n      </div>\n\n      <MyVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n}","F:\\Github\\zippy1\\src\\components\\ContestCard\\ContestCard.js",["199"],"F:\\Github\\zippy1\\src\\components\\ProjectCard\\ProjectCard.js",["200","201"],"F:\\Github\\zippy1\\src\\components\\ProjectCard\\ProjectCardDisplay.js",["202","203"],"import React, { useState, useEffect } from 'react';\nimport '../../styles/HelperStyles.css';\nimport './ProjectCard.css';\n\nexport default function ProjectCardDisplay({name, img, url}){\n    const [namecard, setcard] = useState(true);\n    return(\n        <div className=\"grow1 flexColumn project-card flexEnd\" \n            style={{  \n                backgroundImage: img === \"\" ? null : `url(\"${img}\")`,\n                backgroundColor: 'rgba(219,219,219,1)',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat'\n            }}\n        >\n            {\n                namecard ? (\n                    <div className=\"flexColumn flexCenter flexAlignCenter project-textbox\">\n                        <p className=\"project-name\">{ name.length > 0 ? name : \"Sample Webpage\"}</p>\n                    </div>\n                ) : null\n            }\n        </div>\n    );\n}","F:\\Github\\zippy1\\src\\components\\ContestCard\\ContestCardDisplay.js",[],"F:\\Github\\zippy1\\src\\components\\modals\\CodingProfileModal.js",["204","205","206","207"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport '../../styles/HelperStyles.css'\nimport { Form, Modal } from 'react-bootstrap';\nimport {AiOutlineCloseCircle, AiOutlinePlusCircle} from 'react-icons/ai';\nimport { PortalMap, setItem, getItem } from '../../utility/localStorageControl';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\nimport AdminService from '../../AdminServices/AdminService';\n\n  export default function CodingProfileModal() {\n    const [modalShow, setModalShow] = React.useState(false);\n    const [rankWidgets, setrankWidgets] = React.useState(getItem('rankWidgets'));\n    var username = \"\";\n    var rank = \"\";\n    var portal = \"Eg. GeeksforGeeks, CodeChef\";\n    const data = ['Geeks for Geeks', 'CodeChef', 'CodeForces', 'HackerRank', 'TopCoder', 'LeetCode'];\n\n    const formatPortal = portal => {\n      return portal.split(' ').join('').toLowerCase();\n    }\n\n    const createRankWidget = async () => {\n      var portalsArray = [];\n      rankWidgets.map(rank => (\n        portalsArray.push((rank.website_id))\n      ))\n      var exist = portalsArray.includes(getItem('website_id'));\n      if(exist){\n        toast.error('Error, Site already exists!', {\n          position: \"top-center\",\n          autoClose: 2000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });setModalShow(false);\n      } else{\n        if(portal.length > 0 && username.length > 0 && rank.length > 0){\n          const rankWidgetData = {\n            'rank' : getItem('Codingrank'),\n            'website_id' : getItem('website_id'),\n            'username' : getItem('Codingusername'),\n          }\n          AdminService.createRankWidget(rankWidgetData)\n            .then(response => {\n              toast.success('Details Entered!', {\n                position: \"top-center\",\n                autoClose: 2000,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n              });\n              AdminService.getUserData()\n                .then(resp => {\n                  setItem('rankWidgets', resp.data.rank_widgets);\n                  setModalShow(false);\n                  window.open('/portfolio', '_self');\n                })\n                .catch(err => console.log(err));\n            })\n            .catch(error => {\n              toast.error('Error, Enter correct details!', {\n                position: \"top-center\",\n                autoClose: 2000,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n              });\n            });\n        } else {\n          toast.error('Error, Fields cannot be empty!', {\n            position: \"top-center\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          });\n        }\n      }\n    }\n\n    const getPortalDetails = (portal) => {\n      if(portal !== ''){\n        setItem('url', PortalMap.get(portal).url);\n        setItem('website_id', PortalMap.get(portal).id);\n        setItem('logo', PortalMap.get(portal).logo);\n      }\n    }\n\n    const UpdateCard = () => {\n      setItem('Codingportal', portal);\n      getPortalDetails(formatPortal(getItem('Codingportal')));\n      setItem('Codingusername', username);\n      setItem('Codingrank', rank);\n      createRankWidget();\n    }\n\n    function MyVerticallyCenteredModal(props) {\n      return (\n        <Modal\n          {...props}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <div className=\"flexColumn\">\n          <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\n            <div style={{width: 20}}></div>\n            <h2 className=\"modal-head\">Add Coding Profile</h2>\n            <button onClick={props.onHide}>\n              <AiOutlineCloseCircle style={{fontSize: 40, color: 'black'}} />\n            </button>\n          </div>\n          <Form>\n\n            <Form.Group controlId=\"formBasicEmail\" className=\" flexColumn mb-20\">\n              <Form.Label>Website Name</Form.Label>\n              <select defaultValue={portal} onChange={(e) => portal = (e.target.value)}>\n                <option value=\"Eg. GeeksforGeeks, CodeChef\" disabled>Eg. GeeksforGeeks, CodeChef</option>\n                {data.map(platform => (\n                  <option value={platform}>{platform}</option>\n                ))}\n              </select>\n            </Form.Group>\n\n            {/* <Form.Group controlId=\"formBasicEmail\" className=\"mb-20\">\n              <Form.Label>Website Name</Form.Label>\n              <Form.Control placeholder=\"Eg. GeeksforGeeks, CodeChef\" type=\"text\" defaultValue={portal} onChange={(e) => portal = (e.target.value)} />\n            </Form.Group> */}\n  \n            <Form.Group controlId=\"formBasicPassword\" className=\"mb-20\">\n              <Form.Label>Your Profile Username </Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Eg. abc_234\" defaultValue={username} onChange={(e) => username = (e.target.value)} />\n            </Form.Group>\n  \n            <Form.Group controlId=\"formBasicPassword1\">\n              <Form.Label>Your Rank</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Eg. 2512\" defaultValue={rank} onChange={(e) => rank = (e.target.value)} />\n            </Form.Group>\n  \n          </Form>\n  \n          <div className=\"share\" style={{justifyContent: 'center'}}>\n            <a onClick={() => UpdateCard() } className=\"flexAlignCenter modal-button\">Add to Profile</a>\n          </div>\n  \n        </div>\n        </Modal>\n      );\n    }\n  \n    return (\n      <>\n        <div className=\"grow1 flexColumn flexCenter flexAlignCenter add-card\" style={{height: 250}}>\n            <button onClick={() => setModalShow(true)}>\n                <AiOutlinePlusCircle style={{fontSize: 80, color: '#C0C0C0'}} />\n            </button>\n        </div>\n  \n        <MyVerticallyCenteredModal\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n        />\n      </>\n    );\n  }","F:\\Github\\zippy1\\src\\components\\CodingCard\\CodingCardDisplay.js",[],"F:\\Github\\zippy1\\src\\components\\CodingCard\\CodingCard.js",["208","209"],"F:\\Github\\zippy1\\src\\AdminServices\\AdminService.js",[],"F:\\Github\\zippy1\\src\\components\\GoogleBtn.js",["210"],"F:\\Github\\zippy1\\src\\AdminServices\\dataService.js",[],"F:\\Github\\zippy1\\src\\components\\UpdateModals\\UpdateCodingProfile.js",["211"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport '../../styles/HelperStyles.css'\nimport { Form, Modal } from 'react-bootstrap';\nimport {AiOutlineCloseCircle} from 'react-icons/ai';\nimport { PortalMap, setItem, getItem } from '../../utility/localStorageControl';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AdminService from '../../AdminServices/AdminService';\nimport edited from '../../assets/images/Edit-Icon.png';\n\n  export default function UpdateCodingProfile(portalName, Rank, userName) {\n    const [modalShow, setModalShow] = React.useState(false);\n    var portal1 = portalName;\n    var portal = portal1.portalName;\n    const data = ['Geeks for Geeks', 'CodeChef', 'CodeForces', 'HackerRank', 'TopCoder', 'LeetCode'];\n    var username = portal1.userName;\n    var rank = portal1.Rank;\n\n    const formatPortal = portal => {\n      return portal.split(' ').join('').toLowerCase();\n    }\n\n    const updateRankWidget = async () => {\n      if(portal.length > 0 && username.length > 0 && rank.length > 0){\n        const rankWidgetData = {\n          'rank' : getItem('Codingrank'),\n          'website_id' : getItem('website_id'),\n          'username': getItem('Codingusername'),\n        }\n        AdminService.updateRankWidget(rankWidgetData)\n          .then(response => {\n            toast.success('Card Updated!', {\n              position: \"top-center\",\n              autoClose: 2000,\n              hideProgressBar: true,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n            AdminService.getUserData()\n              .then(resp => {\n                setItem('rankWidgets', resp.data.rank_widgets);\n                window.open('/portfolio', '_self')\n                setModalShow(false);\n              })\n              .catch(err => console.log(err));\n          })\n          .catch(error => {\n            toast.error('Error, Enter correct details!', {\n              position: \"top-center\",\n              autoClose: 2000,\n              hideProgressBar: true,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n          });\n      } else {\n        toast.error('Error, Fields cannot be empty!', {\n          position: \"top-center\",\n          autoClose: 2000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n\n    const getPortalDetails = (portal) => {\n      if(portal !== ''){\n        setItem('url', PortalMap.get(portal).url);\n        setItem('website_id', PortalMap.get(portal).id);\n        setItem('logo', PortalMap.get(portal).logo);\n      }\n    }\n\n    const UpdateCard = () => {\n      setItem('Codingportal', portal);\n      getPortalDetails(formatPortal(getItem('Codingportal')));\n      setItem('Codingusername', username);\n      setItem('Codingrank', rank);\n      updateRankWidget();\n    }\n\n    function MyVerticallyCenteredModal(props) {\n      return (\n        <Modal\n          {...props}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <div className=\"flexColumn\">\n          <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\n            <div style={{width: 20}}></div>\n            <h2 className=\"modal-head\">Update Coding Profile</h2>\n            <button onClick={props.onHide}>\n              <AiOutlineCloseCircle style={{fontSize: 40, color: 'black'}} />\n            </button>\n          </div>\n          <Form>\n            <Form.Group controlId=\"formBasicEmail\" className=\" flexColumn mb-20\">\n              <Form.Label>Website Name</Form.Label>\n              <select defaultValue={portal} onChange={(e) => portal = (e.target.value)}>\n                <option value=\"Eg. GeeksforGeeks, CodeChef\" disabled>Eg. GeeksforGeeks, CodeChef</option>\n                {data.map(platform => (\n                  <option value={platform}>{platform}</option>\n                ))}\n              </select>\n            </Form.Group>\n  \n            <Form.Group controlId=\"formBasicPassword\" className=\"mb-20\">\n              <Form.Label>Your Profile Username </Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Eg. abc_234\" defaultValue={username} onChange={(e) => username = (e.target.value)} />\n            </Form.Group>\n  \n            <Form.Group controlId=\"formBasicPassword1\">\n              <Form.Label>Your Rank</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Eg. 2512\" defaultValue={rank} onChange={(e) => rank = (e.target.value)} />\n            </Form.Group>\n  \n          </Form>\n  \n          <div className=\"share\" style={{justifyContent: 'center'}}>\n            <a onClick={() => UpdateCard() } className=\"flexAlignCenter modal-button\">Update</a>\n          </div>\n  \n        </div>\n        </Modal>\n      );\n    }\n  \n    return (\n      <>\n        <img src={edited} alt=\"edit\" onClick={() => setModalShow(true)} style={{height:30, width: 30, marginRight: 10}} />\n  \n        <MyVerticallyCenteredModal\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n        />\n      </>\n    );\n  }","F:\\Github\\zippy1\\src\\components\\UpdateModals\\UpdateContestProfile.js",[],"F:\\Github\\zippy1\\src\\components\\UpdateModals\\UpdateProject.js",[],"F:\\Github\\zippy1\\src\\utility\\reducer.js",[],["212","213"],"F:\\Github\\zippy1\\src\\utility\\StateProvider.js",[],"F:\\Github\\zippy1\\src\\screens\\PolicyScreen\\PolicyScreen.js",[],"F:\\Github\\zippy1\\src\\screens\\TermsScreen\\TermsScreen.js",[],"F:\\Github\\zippy1\\src\\components\\modals\\SendViaEmail.js",["214"],"F:\\Github\\zippy1\\src\\components\\modals\\AttachResume.js",["215"],"F:\\Github\\zippy1\\src\\components\\MailPreview\\MailPreview.js",["216","217","218","219"],"import React, {useState} from 'react';\r\nimport '../../styles/HelperStyles.css';\r\nimport AdminService from '../../AdminServices/AdminService';\r\nimport {setItem, getItem} from '../../utility/localStorageControl'\r\n\r\nimport splashlogo from '../../assets/images/logo.png';\r\n\r\nexport default function MailPreview(){\r\n    return(\r\n        <div className=\"mail-box\">\r\n            <img src={splashlogo} width=\"200\" height=\"40\" style={{alignSelf: 'center'}} className=\"d-inline-block\" alt=\"logo\" />\r\n            <div className=\"mail-content-box\">\r\n                <div style={{backgroundColor: 'rgba(255,217,135,1)', borderTopLeftRadius: 8, borderTopRightRadius: 8}}>\r\n                    <h6 className=\"mailcontent-header\">{getItem('titlePortfolio')}</h6>\r\n                </div>\r\n                <div style={{padding: 20, gap: 30}} className=\"flexRow\">\r\n                    <img src={getItem('image')} className=\"profile-pic\" alt=\"profile\" />\r\n                    <div className=\"flexColumn\">\r\n                        <h2 className=\"mailcontent-name\">{getItem('name')}</h2>\r\n                        <h4 className=\"mailcontent-mail\">{getItem('email')}</h4>\r\n                        <div className=\"flexRow\" style={{alignItems: 'baseline', gap: 50}}>\r\n                            <div className=\"flexRow\" style={{alignItems: 'baseline', gap: 10}}>\r\n                                <h1 className=\"mailcontent-number\">{getItem('rankWidgets').length}</h1>\r\n                                <h5 className=\"mailcontent-sec\">Profiles</h5>\r\n                            </div>\r\n                            <div className=\"flexRow\" style={{alignItems: 'baseline', gap: 10}}>\r\n                                <h1 className=\"mailcontent-number\">{getItem('contestWidgets').length}</h1>\r\n                                <h5 className=\"mailcontent-sec\">Coding Contests</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"share\" style={{justifyContent: 'center', padding: 0}} >\r\n                <a onClick className=\"flexAlignCenter modal-button\">Visit Profile</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}","F:\\Github\\zippy1\\src\\components\\modals\\SentHistory.js",["220"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useState} from 'react';\r\nimport '../../styles/HelperStyles.css'\r\nimport { Modal, Form, Table, Pagination } from 'react-bootstrap';\r\nimport {AiOutlineCloseCircle} from 'react-icons/ai';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport AdminService from '../../AdminServices/AdminService';\r\nimport { setItem, getItem } from '../../utility/localStorageControl';\r\n\r\nexport default function SentHistoryModal() {\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [active, setActive] = useState(1);\r\n    var history = [];\r\n    let items = [];\r\n    for (let number = 1; number <= 10; number++) {\r\n    items.push(\r\n        <Pagination.Item key={number} active={number === active} onClick={() => {\r\n          setActive(number);}}>\r\n        {number}\r\n        </Pagination.Item>,\r\n    );\r\n    }\r\n\r\n    const GetHistory = async (page, item) => {\r\n      AdminService.SentHistory(page, item)\r\n        .then(resp => {\r\n          history = resp.data.mail_history;\r\n          setItem('history', history)\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n  GetHistory(active ,5);\r\n\r\n  function MyVerticallyCenteredModal(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <div className=\"flexColumn\">\r\n          <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\r\n            <div style={{width: 20}}></div>\r\n            <h2 className=\"modal-head\">List of E-mail Sent History</h2>\r\n            <button onClick={props.onHide}>\r\n              <AiOutlineCloseCircle style={{fontSize: 40, color: 'black'}} />\r\n            </button>\r\n          </div>\r\n          <Table striped bordered hover style={{borderRadius: 8}}>\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"table-head\">Date</th>\r\n                        <th className=\"table-head\">Email ID</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {getItem('history').map((table) => (\r\n                    <tr>\r\n                        <td className=\"table-date\">{table.date.split(' ')[0]}</td>\r\n                        <td className=\"table-element\">{table.email}</td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </Table>\r\n            <div>\r\n                <Pagination className=\"pageNumbers\">\r\n                  <Pagination.Item key=\"First\" active={1 === active} disabled={active===1 ? true : false} onClick={() => {\r\n                    setActive(1); \r\n                  }}>\r\n                    First\r\n                  </Pagination.Item>\r\n                  {items}\r\n                  <Pagination.Item key=\"Next\" active={true} disabled={active===10 ? true : false} onClick={() => {\r\n                    setActive(active+1); \r\n                  }}>\r\n                    Next\r\n                  </Pagination.Item>\r\n                </Pagination>\r\n            </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"history\">\r\n          <button className=\"flexAlignCenter history-button\" style={{outline: 'none'}} onClick={() => setModalShow(true)} >\r\n              View Sent History        \r\n          </button>\r\n        </div>\r\n\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","F:\\Github\\zippy1\\src\\AdminServices\\baseUrl.js",[],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":4,"column":18,"nodeType":"227","messageId":"228","endLine":4,"endColumn":25},{"ruleId":"229","severity":1,"message":"230","line":103,"column":33,"nodeType":"231","endLine":103,"endColumn":77},{"ruleId":"225","severity":1,"message":"232","line":2,"column":16,"nodeType":"227","messageId":"228","endLine":2,"endColumn":25},{"ruleId":"225","severity":1,"message":"233","line":25,"column":9,"nodeType":"227","messageId":"228","endLine":25,"endColumn":16},{"ruleId":"225","severity":1,"message":"226","line":25,"column":18,"nodeType":"227","messageId":"228","endLine":25,"endColumn":25},{"ruleId":"225","severity":1,"message":"232","line":1,"column":17,"nodeType":"227","messageId":"228","endLine":1,"endColumn":26},{"ruleId":"225","severity":1,"message":"234","line":13,"column":41,"nodeType":"227","messageId":"228","endLine":13,"endColumn":60},{"ruleId":"225","severity":1,"message":"235","line":27,"column":16,"nodeType":"227","messageId":"228","endLine":27,"endColumn":23},{"ruleId":"225","severity":1,"message":"236","line":32,"column":23,"nodeType":"227","messageId":"228","endLine":32,"endColumn":37},{"ruleId":"225","severity":1,"message":"237","line":33,"column":26,"nodeType":"227","messageId":"228","endLine":33,"endColumn":43},{"ruleId":"225","severity":1,"message":"238","line":34,"column":26,"nodeType":"227","messageId":"228","endLine":34,"endColumn":43},{"ruleId":"225","severity":1,"message":"239","line":1,"column":16,"nodeType":"227","messageId":"228","endLine":1,"endColumn":24},{"ruleId":"225","severity":1,"message":"233","line":7,"column":19,"nodeType":"227","messageId":"228","endLine":7,"endColumn":26},{"ruleId":"225","severity":1,"message":"239","line":1,"column":16,"nodeType":"227","messageId":"228","endLine":1,"endColumn":24},{"ruleId":"225","severity":1,"message":"240","line":7,"column":17,"nodeType":"227","messageId":"228","endLine":7,"endColumn":31},{"ruleId":"225","severity":1,"message":"240","line":7,"column":10,"nodeType":"227","messageId":"228","endLine":7,"endColumn":24},{"ruleId":"225","severity":1,"message":"240","line":7,"column":10,"nodeType":"227","messageId":"228","endLine":7,"endColumn":24},{"ruleId":"225","severity":1,"message":"240","line":11,"column":10,"nodeType":"227","messageId":"228","endLine":11,"endColumn":24},{"ruleId":"225","severity":1,"message":"232","line":2,"column":27,"nodeType":"227","messageId":"228","endLine":2,"endColumn":36},{"ruleId":"225","severity":1,"message":"240","line":8,"column":10,"nodeType":"227","messageId":"228","endLine":8,"endColumn":24},{"ruleId":"225","severity":1,"message":"232","line":1,"column":27,"nodeType":"227","messageId":"228","endLine":1,"endColumn":36},{"ruleId":"225","severity":1,"message":"241","line":6,"column":22,"nodeType":"227","messageId":"228","endLine":6,"endColumn":29},{"ruleId":"225","severity":1,"message":"240","line":7,"column":10,"nodeType":"227","messageId":"228","endLine":7,"endColumn":24},{"ruleId":"225","severity":1,"message":"242","line":9,"column":10,"nodeType":"227","messageId":"228","endLine":9,"endColumn":24},{"ruleId":"225","severity":1,"message":"243","line":9,"column":26,"nodeType":"227","messageId":"228","endLine":9,"endColumn":34},{"ruleId":"225","severity":1,"message":"244","line":14,"column":25,"nodeType":"227","messageId":"228","endLine":14,"endColumn":39},{"ruleId":"225","severity":1,"message":"226","line":10,"column":18,"nodeType":"227","messageId":"228","endLine":10,"endColumn":25},{"ruleId":"225","severity":1,"message":"240","line":11,"column":10,"nodeType":"227","messageId":"228","endLine":11,"endColumn":24},{"ruleId":"225","severity":1,"message":"240","line":6,"column":10,"nodeType":"227","messageId":"228","endLine":6,"endColumn":24},{"ruleId":"225","severity":1,"message":"240","line":7,"column":10,"nodeType":"227","messageId":"228","endLine":7,"endColumn":24},{"ruleId":"221","replacedBy":"245"},{"ruleId":"223","replacedBy":"246"},{"ruleId":"225","severity":1,"message":"239","line":2,"column":16,"nodeType":"227","messageId":"228","endLine":2,"endColumn":24},{"ruleId":"225","severity":1,"message":"239","line":2,"column":16,"nodeType":"227","messageId":"228","endLine":2,"endColumn":24},{"ruleId":"225","severity":1,"message":"239","line":1,"column":16,"nodeType":"227","messageId":"228","endLine":1,"endColumn":24},{"ruleId":"225","severity":1,"message":"247","line":3,"column":8,"nodeType":"227","messageId":"228","endLine":3,"endColumn":20},{"ruleId":"225","severity":1,"message":"233","line":4,"column":9,"nodeType":"227","messageId":"228","endLine":4,"endColumn":16},{"ruleId":"229","severity":1,"message":"230","line":35,"column":17,"nodeType":"231","endLine":35,"endColumn":69},{"ruleId":"225","severity":1,"message":"248","line":4,"column":17,"nodeType":"227","messageId":"228","endLine":4,"endColumn":21},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"no-unused-vars","'getItem' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'setItem' is defined but never used.","'AiOutlinePlusCircle' is defined but never used.","'setname' is assigned a value but never used.","'setrankwidgets' is assigned a value but never used.","'setcontestwidgets' is assigned a value but never used.","'setprojectwidgets' is assigned a value but never used.","'useState' is defined but never used.","'ToastContainer' is defined but never used.","'setcard' is assigned a value but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'setrankWidgets' is assigned a value but never used.",["249"],["250"],"'AdminService' is defined but never used.","'Form' is defined but never used.","no-global-assign","no-unsafe-negation"]