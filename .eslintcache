[{"F:\\Github\\zippy1\\src\\index.js":"1","F:\\Github\\zippy1\\src\\reportWebVitals.js":"2","F:\\Github\\zippy1\\src\\App.js":"3","F:\\Github\\zippy1\\src\\screens\\ContactScreen\\ContactScreen.js":"4","F:\\Github\\zippy1\\src\\screens\\HomeScreen\\HomeScreen.js":"5","F:\\Github\\zippy1\\src\\screens\\AboutScreen\\AboutScreen.js":"6","F:\\Github\\zippy1\\src\\screens\\DisplayScreen\\DisplayScreen.js":"7","F:\\Github\\zippy1\\src\\screens\\PortfolioScreen\\PortfolioScreen.js":"8","F:\\Github\\zippy1\\src\\utility\\localStorageControl.js":"9","F:\\Github\\zippy1\\src\\components\\FAQCard\\FAQCard.js":"10","F:\\Github\\zippy1\\src\\components\\AchievementCard\\AchievementCard.js":"11","F:\\Github\\zippy1\\src\\components\\Header\\Header1.js":"12","F:\\Github\\zippy1\\src\\components\\FeatureCard\\FeatureCard.js":"13","F:\\Github\\zippy1\\src\\components\\Footer\\Footer.js":"14","F:\\Github\\zippy1\\src\\components\\Header\\Header.js":"15","F:\\Github\\zippy1\\src\\components\\modals\\PortfolioModal.js":"16","F:\\Github\\zippy1\\src\\components\\modals\\ShareModal.js":"17","F:\\Github\\zippy1\\src\\components\\modals\\ProjectModal.js":"18","F:\\Github\\zippy1\\src\\components\\ContestCard\\ContestCard.js":"19","F:\\Github\\zippy1\\src\\components\\ProjectCard\\ProjectCard.js":"20","F:\\Github\\zippy1\\src\\components\\ProjectCard\\ProjectCardDisplay.js":"21","F:\\Github\\zippy1\\src\\components\\ContestCard\\ContestCardDisplay.js":"22","F:\\Github\\zippy1\\src\\components\\CodingCard\\CodingCardDisplay.js":"23","F:\\Github\\zippy1\\src\\components\\CodingCard\\CodingCard.js":"24","F:\\Github\\zippy1\\src\\AdminServices\\AdminService.js":"25","F:\\Github\\zippy1\\src\\components\\GoogleBtn.js":"26","F:\\Github\\zippy1\\src\\AdminServices\\dataService.js":"27","F:\\Github\\zippy1\\src\\components\\UpdateModals\\UpdateCodingProfile.js":"28","F:\\Github\\zippy1\\src\\components\\UpdateModals\\UpdateContestProfile.js":"29","F:\\Github\\zippy1\\src\\components\\UpdateModals\\UpdateProject.js":"30","F:\\Github\\zippy1\\src\\screens\\PolicyScreen\\PolicyScreen.js":"31","F:\\Github\\zippy1\\src\\screens\\TermsScreen\\TermsScreen.js":"32","F:\\Github\\zippy1\\src\\components\\modals\\SendViaEmail.js":"33","F:\\Github\\zippy1\\src\\components\\MailPreview\\MailPreview.js":"34","F:\\Github\\zippy1\\src\\components\\modals\\SentHistory.js":"35","F:\\Github\\zippy1\\src\\AdminServices\\baseUrl.js":"36","F:\\Github\\zippy1\\src\\components\\modals\\AttachResume.js":"37","F:\\Github\\zippy1\\src\\components\\modals\\CodingProfileModal.js":"38","F:\\Github\\zippy1\\src\\components\\modals\\ContestProfileModal.js":"39","F:\\Github\\zippy1\\src\\utility\\userContext.js":"40","F:\\Github\\zippy1\\src\\screens\\HomeScreen\\Hello.js":"41","F:\\Github\\zippy1\\src\\components\\Loader\\Loader.js":"42","F:\\Github\\zippy1\\src\\screens\\Error404.js":"43"},{"size":1670,"mtime":1617063686560,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":1610430732000,"results":"46","hashOfConfig":"45"},{"size":247,"mtime":1615643296392,"results":"47","hashOfConfig":"45"},{"size":5853,"mtime":1615644851847,"results":"48","hashOfConfig":"45"},{"size":7900,"mtime":1617759945737,"results":"49","hashOfConfig":"45"},{"size":2386,"mtime":1611324498222,"results":"50","hashOfConfig":"45"},{"size":6020,"mtime":1618107030080,"results":"51","hashOfConfig":"45"},{"size":10697,"mtime":1618102123786,"results":"52","hashOfConfig":"45"},{"size":3041,"mtime":1614903040546,"results":"53","hashOfConfig":"45"},{"size":1298,"mtime":1610498564435,"results":"54","hashOfConfig":"45"},{"size":660,"mtime":1616539573137,"results":"55","hashOfConfig":"45"},{"size":3302,"mtime":1616751916673,"results":"56","hashOfConfig":"45"},{"size":572,"mtime":1611503969703,"results":"57","hashOfConfig":"45"},{"size":759,"mtime":1611351261128,"results":"58","hashOfConfig":"45"},{"size":2922,"mtime":1617762388142,"results":"59","hashOfConfig":"45"},{"size":6602,"mtime":1618104577459,"results":"60","hashOfConfig":"45"},{"size":2944,"mtime":1616070995998,"results":"61","hashOfConfig":"45"},{"size":5459,"mtime":1618107837000,"results":"62","hashOfConfig":"45"},{"size":12000,"mtime":1618109113126,"results":"63","hashOfConfig":"45"},{"size":11194,"mtime":1618108734434,"results":"64","hashOfConfig":"45"},{"size":1823,"mtime":1618107042073,"results":"65","hashOfConfig":"45"},{"size":1323,"mtime":1610500821083,"results":"66","hashOfConfig":"45"},{"size":1196,"mtime":1618106180335,"results":"67","hashOfConfig":"45"},{"size":12483,"mtime":1618108919063,"results":"68","hashOfConfig":"45"},{"size":1952,"mtime":1614072226931,"results":"69","hashOfConfig":"45"},{"size":4110,"mtime":1617760042045,"results":"70","hashOfConfig":"45"},{"size":2398,"mtime":1615179589903,"results":"71","hashOfConfig":"45"},{"size":6398,"mtime":1618097963765,"results":"72","hashOfConfig":"45"},{"size":6305,"mtime":1615719824286,"results":"73","hashOfConfig":"45"},{"size":5580,"mtime":1618108675587,"results":"74","hashOfConfig":"45"},{"size":9007,"mtime":1611353178319,"results":"75","hashOfConfig":"45"},{"size":9010,"mtime":1611356514983,"results":"76","hashOfConfig":"45"},{"size":5081,"mtime":1615713970446,"results":"77","hashOfConfig":"45"},{"size":2700,"mtime":1616750862433,"results":"78","hashOfConfig":"45"},{"size":4764,"mtime":1615713335943,"results":"79","hashOfConfig":"45"},{"size":165,"mtime":1613930185166,"results":"80","hashOfConfig":"45"},{"size":3985,"mtime":1615718093457,"results":"81","hashOfConfig":"45"},{"size":7245,"mtime":1618098968882,"results":"82","hashOfConfig":"45"},{"size":6289,"mtime":1615719342337,"results":"83","hashOfConfig":"45"},{"size":873,"mtime":1616536034074,"results":"84","hashOfConfig":"45"},{"size":409,"mtime":1615179589998,"results":"85","hashOfConfig":"45"},{"size":402,"mtime":1615636202516,"results":"86","hashOfConfig":"45"},{"size":662,"mtime":1617064264085,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"17xg5nk",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"F:\\Github\\zippy1\\src\\index.js",[],["185","186"],"F:\\Github\\zippy1\\src\\reportWebVitals.js",[],"F:\\Github\\zippy1\\src\\App.js",[],"F:\\Github\\zippy1\\src\\screens\\ContactScreen\\ContactScreen.js",[],"F:\\Github\\zippy1\\src\\screens\\HomeScreen\\HomeScreen.js",[],"F:\\Github\\zippy1\\src\\screens\\AboutScreen\\AboutScreen.js",[],"F:\\Github\\zippy1\\src\\screens\\DisplayScreen\\DisplayScreen.js",[],"F:\\Github\\zippy1\\src\\screens\\PortfolioScreen\\PortfolioScreen.js",["187"],"F:\\Github\\zippy1\\src\\utility\\localStorageControl.js",[],"F:\\Github\\zippy1\\src\\components\\FAQCard\\FAQCard.js",[],"F:\\Github\\zippy1\\src\\components\\AchievementCard\\AchievementCard.js",[],"F:\\Github\\zippy1\\src\\components\\Header\\Header1.js",["188"],"import {React, useState, useContext} from 'react';\r\nimport './Header.css';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport splashlogo from '../../assets/images/logo.png';\r\nimport GoogleBtn from '../GoogleBtn';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { getItem, setItem } from '../../utility/localStorageControl';\r\nimport { toast } from 'react-toastify';\r\nimport {ProgrammerContext} from '../../utility/userContext';\r\n\r\nfunction Header1({open, close}){\r\n    const [user, setUser] = useContext(ProgrammerContext);\r\n    const SignOut = () => {\r\n        open();\r\n        toast.success('Successfully Logged Out!', {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n        setUser(prevUser => ({...prevUser,\r\n            login: false,\r\n            token: null,\r\n            user_id: null,\r\n            name: '',\r\n            email: '',\r\n            image: '',\r\n            resume_present: false,\r\n            portfolio: [],\r\n            rank_widgets: [],\r\n            contest_widgets: [],\r\n            project_widgets: [],\r\n            resumeLink: '',\r\n        }));\r\n        setItem('user', '');\r\n        setItem('accessToken', '');\r\n        setTimeout(() => {\r\n            close();\r\n            window.open('/home', '_self');\r\n        }, [500])\r\n    }\r\n\r\n    const [dropdown, setdropdown] = useState(false);\r\n    return (\r\n        <header className=\"header\">\r\n            <Navbar sticky=\"top\" expand=\"lg\" className=\"flexRow flexAlignCenter navbar\">\r\n                <Navbar.Brand className=\"flexColumn flexAlignCenter\" href=\"/home\">\r\n                    <img src={splashlogo} width=\"150\" height=\"30\" className=\"d-inline-block mr-80\" alt=\"logo\" />\r\n                </Navbar.Brand>\r\n                <div className=\"w100 flexRow flexAlignCenter flexBetween\">\r\n                    <Nav className=\"mr-auto flexRow\">\r\n                        <Nav.Link className=\"grow2\" href=\"/about\">About</Nav.Link>\r\n                        <Nav.Link className=\"grow2\" href=\"/home#faq\">FAQ</Nav.Link>\r\n                        <Nav.Link className=\"grow2\" href=\"/contact\">Contact</Nav.Link>\r\n                    </Nav>\r\n                    {user.login ? (\r\n                        dropdown ? (\r\n                            <button onClick={() => SignOut()} \r\n                                className=\"edit-your-portfolio grow1\" style={{fontWeight: 500}}\r\n                            >\r\n                                Sign Out\r\n                            </button>\r\n                        ) : (                            \r\n                            <div className=\"avatar\" style={{cursor: 'pointer'}} onClick={() => setdropdown(true)}>\r\n                                <Avatar alt=\"img\" src={user.image} />\r\n                                <p className=\"avatar-name\">Welcome<br/><p className=\"name\">{user.name}</p></p>\r\n                            </div>\r\n                        )\r\n                    ) : (\r\n                        <GoogleBtn open={open} close={close} />\r\n                    )}\r\n                </div>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header1;","F:\\Github\\zippy1\\src\\components\\FeatureCard\\FeatureCard.js",[],"F:\\Github\\zippy1\\src\\components\\Footer\\Footer.js",[],"F:\\Github\\zippy1\\src\\components\\Header\\Header.js",["189"],"import {React, useState, useContext} from 'react';\r\nimport './Header.css';\r\nimport { Navbar, Nav, Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport splashlogo from '../../assets/images/logo.png';\r\nimport GoogleBtn from '../GoogleBtn';\r\nimport {ProgrammerContext} from '../../utility/userContext';\r\nimport { setItem } from '../../utility/localStorageControl';\r\nimport { toast } from 'react-toastify';\r\nimport '../../styles/HelperStyles.css'\r\n\r\nfunction Header({open, close}){\r\n    const [user, setUser] = useContext(ProgrammerContext);\r\n    const SignOut = () => {\r\n        open();\r\n        toast.success('Successfully Logged Out!', {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n        setUser(prevUser => ({...prevUser,\r\n            login: false,\r\n            token: null,\r\n            user_id: null,\r\n            name: '',\r\n            email: '',\r\n            image: '',\r\n            resume_present: false,\r\n            portfolio: [],\r\n            rank_widgets: [],\r\n            contest_widgets: [],\r\n            project_widgets: [],\r\n            resumeLink: '',\r\n        }));\r\n        setItem('user', '');\r\n        setItem('accessToken', '');\r\n        setTimeout(() => {\r\n            close();\r\n            window.open('/home', '_self');\r\n        }, [500])\r\n    }\r\n    return (\r\n        <header className=\"header\">\r\n            <Navbar sticky=\"top\" expand=\"lg\" className=\"flexRow flexAlignCenter navbar\">\r\n                <Navbar.Brand className=\"flexColumn flexAlignCenter\" href=\"/home\">\r\n                    <img src={splashlogo} width=\"150\" height=\"30\" className=\"d-inline-block mr-80\" alt=\"logo\" />\r\n                </Navbar.Brand>\r\n                <div className=\"w100 flexRow flexAlignCenter flexBetween\">\r\n                    <Nav className=\"mr-auto flexRow\">\r\n                        <Nav.Link className=\"grow2\" href=\"/about\">About</Nav.Link>\r\n                        <Nav.Link className=\"grow2\" href=\"/home#faq\">FAQ</Nav.Link>\r\n                        <Nav.Link className=\"grow2\" href=\"/contact\">Contact</Nav.Link>\r\n                    </Nav>\r\n                    <GoogleBtn open={open} close={close} />\r\n                    {user.login ? (\r\n                        <DropdownButton\r\n                            menuAlign=\"right\"\r\n                            title=\"\"\r\n                            className=\"menu__dropdown\"\r\n                            id=\"dropdown-menu-align-right\"\r\n                            >\r\n                            <Dropdown.Item eventKey=\"1\" onClick={() => SignOut()} >Sign Out</Dropdown.Item>\r\n                        </DropdownButton>\r\n                    ) : null}\r\n                </div>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","F:\\Github\\zippy1\\src\\components\\modals\\PortfolioModal.js",["190","191"],"F:\\Github\\zippy1\\src\\components\\modals\\ShareModal.js",["192","193","194"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useState, useRef, useContext} from 'react';\r\nimport '../../styles/HelperStyles.css'\r\nimport { Modal, Form } from 'react-bootstrap';\r\nimport {AiOutlineCloseCircle} from 'react-icons/ai';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport AdminService from '../../AdminServices/AdminService';\r\nimport { ProgrammerContext } from '../../utility/userContext';\r\n\r\nexport default function ShareModal({id, open, close}) {\r\n  const [user, setUser] = useContext(ProgrammerContext);\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const url = `https://tabber.online/d?id=${user.user_id}`;\r\n  const textAreaRef = useRef(null);\r\n\r\n  const CopyText = (e) => {\r\n    open();\r\n    textAreaRef.current.select();\r\n    document.execCommand('copy');\r\n    toast.success('Link Copied!', {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n    setModalShow(false);\r\n    close();\r\n  }\r\n\r\n  function MyVerticallyCenteredModal(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <div className=\"flexColumn\">\r\n          <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\r\n            <div style={{width: 20}}></div>\r\n            <h2 className=\"modal-head\">Share Portfolio</h2>\r\n            <button onClick={props.onHide}>\r\n              <AiOutlineCloseCircle style={{fontSize: 40, color: 'black'}} />\r\n            </button>\r\n          </div>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\" className=\"flexColumn mb-20\">\r\n              <Form.Label>Just copy and share this simple link !</Form.Label>\r\n              <input type=\"text\" class=\"form-control\" ref={textAreaRef} defaultValue={url} placeholder=\"https://tabber.com/123\" readOnly />\r\n            </Form.Group>\r\n          </Form>\r\n\r\n          <div className=\"flexRow flexAlignCenter flexCenter\">\r\n            <div className=\"share\">\r\n              <a onClick={(e) => CopyText(e)} className=\"flexAlignCenter modal-button\">Copy Link</a>\r\n            </div>\r\n            <div className=\"share\">\r\n              <a onClick={() => {window.open(url); setModalShow(false)}} className=\"flexAlignCenter modal-button\">Open Link</a>\r\n            </div>\r\n          </div>\r\n  \r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"share\">\r\n        <button className=\"flexAlignCenter share-button\" style={{outline: 'none', marginRight: 0}} onClick={() => {setModalShow(true);}}>\r\n          Share        \r\n        </button>\r\n      </div>\r\n\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","F:\\Github\\zippy1\\src\\components\\modals\\ProjectModal.js",["195"],"F:\\Github\\zippy1\\src\\components\\ContestCard\\ContestCard.js",["196"],"F:\\Github\\zippy1\\src\\components\\ProjectCard\\ProjectCard.js",["197","198","199","200"],"F:\\Github\\zippy1\\src\\components\\ProjectCard\\ProjectCardDisplay.js",["201"],"F:\\Github\\zippy1\\src\\components\\ContestCard\\ContestCardDisplay.js",[],"F:\\Github\\zippy1\\src\\components\\CodingCard\\CodingCardDisplay.js",[],"F:\\Github\\zippy1\\src\\components\\CodingCard\\CodingCard.js",["202","203","204","205"],"F:\\Github\\zippy1\\src\\AdminServices\\AdminService.js",[],"F:\\Github\\zippy1\\src\\components\\GoogleBtn.js",["206","207","208","209"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useState, useContext, useEffect} from 'react'\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { getItem, setItem } from '../utility/localStorageControl';\r\nimport Axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PortfolioModal from '../components/modals/PortfolioModal';\r\nimport AdminService from '../AdminServices/AdminService';\r\nimport {API_ENDPOINT} from '../AdminServices/baseUrl';\r\nimport {ProgrammerContext} from '../utility/userContext';\r\n\r\nconst CLIENT_ID = '148434873376-a1k8ubdj3g3oqkh53an00v8angbj2itd.apps.googleusercontent.com';\r\n\r\nconst GoogleBtn = ({open, close}) => {\r\n  const [user, setUser] = useContext(ProgrammerContext);\r\n  const [isLogin, setLogin] = useState(user.login);\r\n  const loginSuccess = (response) => {\r\n    open();\r\n    if(response.tokenId){\r\n      Axios.post(`${API_ENDPOINT}/login?idTokenString=${response.tokenId}`)\r\n        .then(function (response) {\r\n          setLogin(true);\r\n          setUser(prevUser => ({...prevUser, login: true, token: response.data.access_token }));\r\n          setItem('accessToken', response.data.access_token);\r\n          toast.success('Login Successful!', {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n          AdminService.getUserData()\r\n            .then(resp => {\r\n              setUser(prevUser => ({...prevUser,\r\n                user_id: resp.data.user_id,\r\n                name: resp.data.name,\r\n                email: resp.data.email,\r\n                image: resp.data.picture_url,\r\n                resume_present: resp.data.resume_present,\r\n                portfolio: resp.data.portfolio,\r\n                rank_widgets: resp.data.rank_widgets,\r\n                contest_widgets: resp.data.contest_widgets,\r\n                project_widgets: resp.data.personal_projects,\r\n              }));\r\n              if(resp.data.portfolio){\r\n                if(resp.data.portfolio.cloud_resume_link){\r\n                  setUser(prevUser => ({...prevUser, resumeLink: resp.data.portfolio.cloud_resume_link}));\r\n                }\r\n              }\r\n              close();\r\n            })\r\n            .catch(err => {\r\n              toast.error(\"Some Error Occured.\", {\r\n                position: \"top-center\",\r\n                autoClose: 2000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n              })\r\n              close();\r\n            });\r\n        })\r\n        .catch(function (error) {\r\n          toast.error('Login Failed, Retry!', {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n          close();\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  const loginFailure = (response) => {\r\n    open();\r\n    toast.error('Login Failed, Retry!', {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n    close();\r\n  }\r\n    return (\r\n    <div>\r\n      { user.login ? (\r\n        <>\r\n          <PortfolioModal home={false} open={() => open()} close={() => close()} />\r\n        </>\r\n        )\r\n        : \r\n        (\r\n          <GoogleLogin\r\n            clientId={ CLIENT_ID }\r\n            buttonText='Sign in with Google'\r\n            onSuccess={ loginSuccess }\r\n            onFailure={ loginFailure }\r\n            cookiePolicy={ 'single_host_origin' }\r\n            responseType='code,token'\r\n            className=\"google-button\"\r\n          />\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoogleBtn;","F:\\Github\\zippy1\\src\\AdminServices\\dataService.js",[],"F:\\Github\\zippy1\\src\\components\\UpdateModals\\UpdateCodingProfile.js",["210","211"],"F:\\Github\\zippy1\\src\\components\\UpdateModals\\UpdateContestProfile.js",["212"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useContext } from 'react';\r\nimport '../../styles/HelperStyles.css'\r\nimport { Modal, Form } from 'react-bootstrap';\r\nimport {AiOutlineCloseCircle} from 'react-icons/ai';\r\nimport { PortalMap, setItem, getItem } from '../../utility/localStorageControl';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport AdminService from '../../AdminServices/AdminService';\r\nimport edited from '../../assets/images/Edit-Icon.png';\r\nimport { ProgrammerContext } from '../../utility/userContext';\r\n\r\nexport default function UpdateContestProfile({portalName, Rank, userName, id, ContestName, open, close}) {\r\n  const [user, setUser] = useContext(ProgrammerContext);\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  var portal = portalName;\r\n  const data = ['Geeks for Geeks', 'CodeChef', 'CodeForces', 'HackerRank', 'TopCoder', 'LeetCode'];\r\n  var contest = ContestName;\r\n  var rank = Rank;\r\n  var username = userName;\r\n  var card_id = id;\r\n\r\n  const formatPortal = portal => {\r\n    return portal.split(' ').join('').toLowerCase();\r\n  }\r\n\r\n  const updateWidget = async (card_id) => {\r\n    if(portal && username && rank && contest){\r\n      const updateWidgetData = {\r\n        'rank' : getItem('Contestrank'),\r\n        'website_id' : getItem('website_id'),\r\n        'username' : getItem('Contestusername'),\r\n        'contest_name' : getItem('Contestname')\r\n      }\r\n      AdminService.updateContestWidget(card_id, updateWidgetData)\r\n        .then(response => {\r\n          toast.success('Card Updated!', {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n          AdminService.getUserData()\r\n            .then(resp => {\r\n              setUser(prevUser => ({...prevUser,\r\n                contest_widgets: resp.data.contest_widgets,\r\n              }));\r\n              close();\r\n              setModalShow(false);\r\n            })\r\n            .catch(err => toast.error(\"Some Error Occured.\", {\r\n              position: \"top-center\",\r\n              autoClose: 2000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            }));\r\n            close();\r\n        })\r\n        .catch(error => {\r\n          toast.error('Error, Enter correct details!', {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n          close();\r\n        });\r\n    } else {\r\n      toast.error('Error, Fields cannot be empty!', {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      close();\r\n    }\r\n  }\r\n\r\n  \r\n  const getPortalDetails = (portal) => {\r\n    if(portal !== ''){\r\n      setItem('url', PortalMap.get(portal).url);\r\n      setItem('website_id', PortalMap.get(portal).id);\r\n      setItem('logo', PortalMap.get(portal).logo);\r\n    }\r\n  }\r\n\r\n  const UpdateCard = (card_id) => {\r\n    open();\r\n    setModalShow(false);\r\n    setItem('Contestportal', portal);\r\n    getPortalDetails(formatPortal(getItem('Contestportal')));\r\n    setItem('Contestusername', username);\r\n    setItem('Contestrank', rank);\r\n    setItem('Contestname', contest);\r\n    updateWidget(card_id);\r\n  }\r\n\r\n  function MyVerticallyCenteredModal(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <div className=\"flexColumn\">\r\n          <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\r\n            <div style={{width: 20}}></div>\r\n            <h2 className=\"modal-head\">Update Contests won</h2>\r\n            <button onClick={props.onHide}>\r\n              <AiOutlineCloseCircle style={{fontSize: 40, color: 'black'}} />\r\n            </button>\r\n          </div>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\" className=\" flexColumn mb-20\">\r\n              <Form.Label>Website Name</Form.Label>\r\n              <select defaultValue={portal} onChange={(e) => portal = (e.target.value)}>\r\n                <option value=\"Eg. GeeksforGeeks, CodeChef\" disabled>Eg. GeeksforGeeks, CodeChef</option>\r\n                {data.map(platform => (\r\n                  <option value={platform}>{platform}</option>\r\n                ))}\r\n              </select>\r\n            </Form.Group>\r\n  \r\n            <Form.Group controlId=\"formBasicPassword1\" className=\"mb-20\">\r\n              <Form.Label>Your Profile Username </Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Eg. abc_234\" defaultValue={username} onChange={(e) => username = (e.target.value)} />\r\n            </Form.Group>\r\n  \r\n            <Form.Group controlId=\"formBasicPassword2\" className=\"mb-20\">\r\n              <Form.Label>Contest Name</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Eg. 2020 Hackathon\" defaultValue={contest} onChange={(e) => contest = (e.target.value)} />\r\n            </Form.Group>\r\n  \r\n            <Form.Group controlId=\"formBasicPassword3\">\r\n              <Form.Label>Your Rank</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Eg. 2514\" defaultValue={rank} onChange={(e) => rank = (e.target.value)} />\r\n            </Form.Group>\r\n  \r\n          </Form>\r\n  \r\n          <div className=\"share\" style={{justifyContent: 'center'}}>\r\n            <a onClick={() => UpdateCard(card_id)} className=\"flexAlignCenter modal-button\">Update Profile</a>\r\n          </div>\r\n  \r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n        <img src={edited} alt=\"edit\" onClick={() => setModalShow(true)} style={{height:30, width: 30, marginRight: 10}} />\r\n  \r\n        <MyVerticallyCenteredModal\r\n            show={modalShow}\r\n            onHide={() => setModalShow(false)}\r\n        />\r\n    </>\r\n  );\r\n}\r\n","F:\\Github\\zippy1\\src\\components\\UpdateModals\\UpdateProject.js",["213"],"F:\\Github\\zippy1\\src\\screens\\PolicyScreen\\PolicyScreen.js",[],"F:\\Github\\zippy1\\src\\screens\\TermsScreen\\TermsScreen.js",[],"F:\\Github\\zippy1\\src\\components\\modals\\SendViaEmail.js",["214","215","216","217","218","219"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useContext, useState} from 'react';\r\nimport '../../styles/HelperStyles.css'\r\nimport { Modal, Form } from 'react-bootstrap';\r\nimport {AiOutlineCloseCircle} from 'react-icons/ai';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport MailPreview from '../MailPreview/MailPreview';\r\nimport { getItem, setItem } from '../../utility/localStorageControl';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport AdminService from '../../AdminServices/AdminService';\r\nimport { ProgrammerContext } from '../../utility/userContext';\r\n\r\nexport default function SendViaEmail({open, close}) {\r\n  const [user, setUser] = useContext(ProgrammerContext);\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n     var mails = \"\";\r\n     var resume = \"\";\r\n     const resumeData = new FormData();\r\n\r\n     const OptionalHeader = {\r\n      'Content-Type': 'multipart/form-data; boundary=<calculated when request is sent>',\r\n     }\r\n\r\n     const handleInput = (event) => {\r\n      resume = event.target.files[0]\r\n     }\r\n\r\n    const SendMail =  async () => {\r\n      setModalShow(false);\r\n      open();\r\n      resumeData.append('file', resume)\r\n      AdminService.sendMailwithAttachment(mails, resumeData, OptionalHeader)\r\n        .then(resp => {\r\n          if(resp.data.status === \"success\"){\r\n            toast.success('Email Succesfully Sent!', {\r\n              position: \"top-center\",\r\n              autoClose: 2000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n            close();\r\n          } else{\r\n            toast.error(resp.data.message, {\r\n              position: \"top-center\",\r\n              autoClose: 2000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n            close();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          toast.error(\r\n            \"Some Error occured.\", {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          })\r\n          close();\r\n        });\r\n    }\r\n  function MyVerticallyCenteredModal(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <div className=\"flexColumn\">\r\n            <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\r\n              <div style={{width: 20}}></div>\r\n              <h2 className=\"modal-head\">Send via Email</h2>\r\n              <button onClick={props.onHide}>\r\n                <AiOutlineCloseCircle style={{fontSize: 40, color: 'black'}} />\r\n              </button>\r\n            </div>\r\n            <Form>\r\n              <Form.Group controlId=\"formBasic1\" className=\"mb-20\">\r\n                <Form.Label>Enter the mail ID you would like to send the mail to<span style={{color: 'red'}}>*</span> </Form.Label>\r\n                <Form.Control type=\"text\" defaultValue={mails} onChange={(event) => mails = (event.target.value)} placeholder=\"example: anything@gmail.com\" />\r\n              </Form.Group>    \r\n              <Form.Group controlId=\"formBasic12\" className=\"mb-20\">\r\n                <Form.Label>Upload Resume (Optional)</Form.Label>\r\n                <Form.Control type=\"file\" defaultValue={resume} onChange={(event) => handleInput(event)} placeholder=\"Click on Upload to attach resume\" />\r\n              </Form.Group>   \r\n            </Form>\r\n\r\n            <div className=\"flexRow flexBetween\">\r\n                <div className=\"flexColumn\">\r\n                    <span className=\"modal-list\">• File size should not more than 10 MB.</span>\r\n                    <span className=\"modal-list\">• File should be in PDF format.</span>\r\n                </div>\r\n            </div>\r\n    \r\n            <div className=\"share\" style={{justifyContent: 'center'}}>\r\n              <a onClick={SendMail} className=\"flexAlignCenter modal-button\">Send Mail</a>\r\n            </div>\r\n\r\n            <div className=\"flexRow flexCenter end-section ph-20 flexAlignCenter mv-40\">\r\n                <hr style={{width: '35%', color: 'rgba(154,154,154,1)'}} />\r\n                <p className=\"end-text\" style={{fontSize: 16}}>Mail Preview</p>\r\n                <hr style={{width: '35%', color: 'rgba(154,154,154,1)'}} />\r\n            </div>\r\n\r\n            <MailPreview />\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"share\">\r\n        <a className=\"flexRow flexAlignCenter email-button\" style={{cursor: 'pointer'}} onClick={() => setModalShow(true)}>Send Email</a>\r\n      </div>\r\n\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","F:\\Github\\zippy1\\src\\components\\MailPreview\\MailPreview.js",["220","221","222","223","224"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useContext, useState} from 'react';\r\nimport '../../styles/HelperStyles.css';\r\nimport AdminService from '../../AdminServices/AdminService';\r\nimport {setItem, getItem} from '../../utility/localStorageControl'\r\n\r\nimport splashlogo from '../../assets/images/logo.png';\r\nimport { ProgrammerContext } from '../../utility/userContext';\r\n\r\nexport default function MailPreview(){\r\n    const [user, setUser] = useContext(ProgrammerContext);\r\n    return(\r\n        <div className=\"mail-box\">\r\n            <img src={splashlogo} width=\"200\" height=\"40\" style={{alignSelf: 'center'}} className=\"d-inline-block\" alt=\"logo\" />\r\n            <div className=\"mail-content-box\">\r\n                <div style={{backgroundColor: 'rgba(255,217,135,1)', borderTopLeftRadius: 8, borderTopRightRadius: 8}}>\r\n                    <h6 className=\"mailcontent-header\">{user.portfolio.title}</h6>\r\n                </div>\r\n                <div style={{padding: 20, gap: 30}} className=\"flexRow\">\r\n                    <img src={user.image} className=\"profile-pic\" alt=\"profile\" />\r\n                    <div className=\"flexColumn\">\r\n                        <h2 className=\"mailcontent-name\">{user.name}</h2>\r\n                        <h4 className=\"mailcontent-mail\">{user.email}</h4>\r\n                        <div className=\"flexRow numbers__code\">\r\n                            <div className=\"flexRow\" style={{alignItems: 'baseline', gap: 10}}>\r\n                                <h1 className=\"mailcontent-number\">{user.rank_widgets.length}</h1>\r\n                                <h5 className=\"mailcontent-sec\">Profiles</h5>\r\n                            </div>\r\n                            <div className=\"flexRow\" style={{alignItems: 'baseline', gap: 10}}>\r\n                                <h1 className=\"mailcontent-number\">{user.contest_widgets.length}</h1>\r\n                                <h5 className=\"mailcontent-sec\">Coding Contests</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"share\" style={{justifyContent: 'center', padding: 0}} >\r\n                <a href={`/d?id=${user.user_id}`} className=\"flexAlignCenter modal-button\">Visit Profile</a>\r\n            </div>\r\n            <div className=\"imp\">\r\n                <h2 className=\"imp_header\">Important</h2>\r\n                <li className=\"imp_point\">Tabber is not accountable or liable for the content or truthfulness of the profile.</li>\r\n                <li className=\"imp_point\">If needed, kindly verify the candidate's information.</li>\r\n            </div>\r\n        </div>\r\n    );\r\n}","F:\\Github\\zippy1\\src\\components\\modals\\SentHistory.js",["225","226","227","228"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useContext, useState} from 'react';\r\nimport '../../styles/HelperStyles.css'\r\nimport { Modal, Form, Table, Pagination } from 'react-bootstrap';\r\nimport {AiOutlineCloseCircle} from 'react-icons/ai';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport AdminService from '../../AdminServices/AdminService';\r\nimport { setItem, getItem } from '../../utility/localStorageControl';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { ProgrammerContext } from '../../utility/userContext';\r\n\r\nexport default function SentHistoryModal({open, close}) {\r\n    const [user, setUser] = useContext(ProgrammerContext);\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [active, setActive] = useState(1);\r\n    let items = [];\r\n    const pages = Math.floor(user.total_mails_sent/5) + 1;\r\n    for (let number = 1; number <= pages; number++) {\r\n    items.push(\r\n        <Pagination.Item key={number} active={number === active} onClick={() => {\r\n          setActive(number);\r\n          GetHistory(number, 5)\r\n          console.log(pages, active, user.sent_history);}} style={{cursor: 'pointer'}}>\r\n        {number}\r\n        </Pagination.Item>,\r\n    );\r\n    }\r\n\r\n    const GetHistory = async (page, item) => {\r\n      open();\r\n      AdminService.SentHistory(page, item)\r\n        .then(resp => {\r\n          setUser(prevUser => ({...prevUser,\r\n            sent_history: resp.data.mail_history,\r\n            total_mails_sent: resp.data.total_items\r\n          }));          \r\n          close();\r\n        })\r\n        .catch(err => {\r\n          toast.error(\"Some Error Occured.\", {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          })\r\n          close();\r\n      });\r\n    }\r\n\r\n  function MyVerticallyCenteredModal(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <div className=\"flexColumn\">\r\n          <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\r\n            <div style={{width: 20}}></div>\r\n            <h2 className=\"modal-head\">List of E-mail Sent History</h2>\r\n            <button onClick={props.onHide}>\r\n              <AiOutlineCloseCircle style={{fontSize: 40, color: 'black'}} />\r\n            </button>\r\n          </div>\r\n          <Table striped bordered hover style={{borderRadius: 8}}>\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"table-head\">Date</th>\r\n                        <th className=\"table-head\">Email ID</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                  props.history ? (\r\n                  props.history.map((table) => (\r\n                    <tr>\r\n                        <td className=\"table-date\">{table.date.split(' ')[0]}</td>\r\n                        <td className=\"table-element\">{table.email}</td>\r\n                    </tr>\r\n                  ))) : null\r\n                }\r\n                </tbody>\r\n            </Table>\r\n            <div>\r\n                <Pagination className=\"pageNumbers\">\r\n                  <Pagination.Item key=\"First\" active={1 === active} disabled={active === 1 ? true : false} onClick={() => {\r\n                    setActive(active === 1 ? 1 : active-1); \r\n                    GetHistory(active === 1 ? 1 : active-1,5);\r\n                    console.log(pages, active, user.sent_history);\r\n                  }} style={{cursor: 'pointer'}}>\r\n                    Prev\r\n                  </Pagination.Item>\r\n                  {items}\r\n                  <Pagination.Item key=\"Next\" active={true} disabled={active === pages ? true : false} onClick={() => {\r\n                    setActive(active+1);\r\n                    GetHistory(active+1,5);\r\n                    console.log(pages, active, user.sent_history); \r\n                  }} style={{cursor: 'pointer'}}>\r\n                    Next\r\n                  </Pagination.Item>\r\n                </Pagination>\r\n            </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"history\">\r\n          <button className=\"flexAlignCenter history-button\" style={{outline: 'none', marginRight: 0}} onClick={() => {setModalShow(true); GetHistory(1, 5);}} >\r\n              View Sent History        \r\n          </button>\r\n        </div>\r\n\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        history = {user.sent_history}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","F:\\Github\\zippy1\\src\\AdminServices\\baseUrl.js",[],"F:\\Github\\zippy1\\src\\components\\modals\\AttachResume.js",["229"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useContext, useState} from 'react';\r\nimport '../../styles/HelperStyles.css'\r\nimport { Modal, Form } from 'react-bootstrap';\r\nimport {AiOutlinePlusCircle, AiOutlineCloseCircle, AiOutlineCloudDownload} from 'react-icons/ai';\r\nimport {BsFillEyeFill} from 'react-icons/bs'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport AdminService from '../../AdminServices/AdminService';\r\nimport { ProgrammerContext } from '../../utility/userContext';\r\n\r\nexport default function AttachResumeModal({open, close}) {\r\n  const [user, setUser] = useContext(ProgrammerContext);\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  var url = user.resumeLink;\r\n\r\n  const ResumeAttach = async () => {\r\n    open();\r\n    if(url !== user.resumeLink){\r\n      setUser(prevUser => ({...prevUser, resumeLink: url}));\r\n    }\r\n    setModalShow(false);\r\n    AdminService.AttachResume(url)\r\n      .then(resp => {\r\n        toast.success('Resume Link Added!', {\r\n          position: \"top-center\",\r\n          autoClose: 2000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n        close();\r\n      })\r\n      .catch(err => {\r\n        toast.error(\"Some Error Occured.\", {\r\n          position: \"top-center\",\r\n          autoClose: 2000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n        close();\r\n      });\r\n  }\r\n\r\n  function MyVerticallyCenteredModal(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <div className=\"flexColumn\">\r\n          <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\r\n            <div style={{width: 20}}></div>\r\n            <h2 className=\"modal-head\">Attach your Resume</h2>\r\n            <button onClick={props.onHide}>\r\n              <AiOutlineCloseCircle style={{fontSize: 40, color: 'black'}} />\r\n            </button>\r\n          </div>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\" className=\"flexColumn mb-20\">\r\n              <Form.Label style={{fontStyle: 'Poppins'}}>Enter your Resume link in the form of PDF below</Form.Label>\r\n              <textarea style={{fontStyle: 'Poppins', borderRadius: 32, margin: '10px 0'}} rows={5} type=\"text\" class=\"form-control\" defaultValue={url} placeholder=\"Example https://www.gdrive.com/profile/abc,.pdf\" onChange={(event) => url = event.target.value} />\r\n            </Form.Group>\r\n          </Form>\r\n\r\n          <span className=\"modal-list\">• Enter a proper Gdrive/Dropbox or any cloud link.</span>\r\n          <span className=\"modal-list\">• Upload the file in cloud in pdf format (Recommended).</span>\r\n\r\n          <div className=\"share\" style={{justifyContent: 'center'}}>\r\n            <a className=\"flexAlignCenter modal-button\" onClick={() => ResumeAttach()}>Add to profile</a>\r\n          </div>\r\n  \r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grow1 attach-resume flexRow flexAlignCenter flexEvenly\">\r\n        <p className=\"resume-head\">{url ? 'View attached PDF' : 'Attach your Resume'}</p>\r\n        {url.length > 0 ?\r\n        (<div style={{display: 'flex', gap: 20}}>\r\n          <AiOutlineCloudDownload onClick={() => setModalShow(true)} className=\"grow2 attach-resume__icon\" />\r\n          <BsFillEyeFill onClick={() => window.open(url)} className=\"grow2 attach-resume__icon\" />\r\n        </div>) :\r\n        (\r\n          <AiOutlinePlusCircle onClick={() => setModalShow(true)} className=\"grow2 attach-resume__icon\"/>\r\n        )}\r\n      </div>\r\n\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","F:\\Github\\zippy1\\src\\components\\modals\\CodingProfileModal.js",[],"F:\\Github\\zippy1\\src\\components\\modals\\ContestProfileModal.js",["230"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useContext } from 'react';\r\nimport '../../styles/HelperStyles.css'\r\nimport { Modal, Form } from 'react-bootstrap';\r\nimport {AiOutlineCloseCircle, AiOutlinePlusCircle} from 'react-icons/ai';\r\nimport { PortalMap, setItem, getItem } from '../../utility/localStorageControl';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport AdminService from '../../AdminServices/AdminService';\r\nimport { ProgrammerContext } from '../../utility/userContext';\r\n\r\nexport default function ContestProfileModal({open, close}) {\r\n  const [user, setUser] = useContext(ProgrammerContext);\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  var portal = \"Eg. GeeksforGeeks, CodeChef\";\r\n  const data = ['Geeks for Geeks', 'CodeChef', 'CodeForces', 'HackerRank', 'TopCoder', 'LeetCode'];\r\n  var contest = '';\r\n  var rank = '';\r\n  var username = '';\r\n\r\n  const formatPortal = portal => {\r\n    return portal.split(' ').join('').toLowerCase();\r\n  }\r\n\r\n  const createWidget = async () => {\r\n    if(portal && username && rank && contest){\r\n      const contestWidgetData = {\r\n        'rank' : getItem('Contestrank'),\r\n        'website_id' : getItem('website_id'),\r\n        'username' : getItem('Contestusername'),\r\n        'contest_name': getItem('Contestname')\r\n      }\r\n      AdminService.createContestWidget(contestWidgetData)\r\n        .then(response => {\r\n          toast.success('Details Entered!', {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n          AdminService.getUserData()\r\n            .then(resp => {\r\n              setUser(prevUser => ({...prevUser,\r\n                contest_widgets: resp.data.contest_widgets,\r\n              }));\r\n              close();\r\n              setModalShow(false);\r\n            })\r\n            .catch(err => toast.error(\"Some Error Occured.\", {\r\n              position: \"top-center\",\r\n              autoClose: 2000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            }));\r\n            close();\r\n        })\r\n        .catch(error => {\r\n          toast.error('Error, Enter correct details!', {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n          close();\r\n        });\r\n    } else {\r\n      toast.error('Error, Fields cannot be empty!', {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      close();\r\n    }\r\n  }\r\n\r\n  const getPortalDetails = (portal) => {\r\n    if(portal !== ''){\r\n      setItem('url', PortalMap.get(portal).url);\r\n      setItem('website_id', PortalMap.get(portal).id);\r\n      setItem('logo', PortalMap.get(portal).logo);\r\n    }\r\n  }\r\n\r\n  const UpdateCard = () => {\r\n    setModalShow(false);\r\n    open();\r\n    setItem('Contestportal', portal);\r\n    getPortalDetails(formatPortal(getItem('Contestportal')));\r\n    setItem('Contestusername', username);\r\n    setItem('Contestrank', rank);\r\n    setItem('Contestname', contest);\r\n    createWidget();\r\n  }\r\n\r\n  function MyVerticallyCenteredModal(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <div className=\"flexColumn\">\r\n          <div className=\"flexRow flexBetween flexAlignCenter mb-40\">\r\n            <div style={{width: 20}}></div>\r\n            <h2 className=\"modal-head\">Add Contests won</h2>\r\n            <button onClick={props.onHide}>\r\n              <AiOutlineCloseCircle style={{fontSize: 40, color: 'black'}} />\r\n            </button>\r\n          </div>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\" className=\" flexColumn mb-20\">\r\n              <Form.Label>Website Name</Form.Label>\r\n              <select defaultValue={portal} onChange={(e) => portal = (e.target.value)}>\r\n                <option value=\"Eg. GeeksforGeeks, CodeChef\" disabled>Eg. GeeksforGeeks, CodeChef</option>\r\n                {data.map(platform => (\r\n                  <option value={platform}>{platform}</option>\r\n                ))}\r\n              </select>\r\n            </Form.Group>\r\n  \r\n            <Form.Group controlId=\"formBasicPassword1\" className=\"mb-20\">\r\n              <Form.Label>Your Profile Username </Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Eg. abc_234\" defaultValue={username} onChange={(e) => username = (e.target.value)} />\r\n            </Form.Group>\r\n  \r\n            <Form.Group controlId=\"formBasicPassword2\" className=\"mb-20\">\r\n              <Form.Label>Contest Name</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Eg. 2020 Hackathon\" defaultValue={contest} onChange={(e) => contest = (e.target.value)} />\r\n            </Form.Group>\r\n  \r\n            <Form.Group controlId=\"formBasicPassword3\">\r\n              <Form.Label>Your Rank</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Eg. 2514\" defaultValue={rank} onChange={(e) => rank = (e.target.value)} />\r\n            </Form.Group>\r\n  \r\n          </Form>\r\n  \r\n          <div className=\"share\" style={{justifyContent: 'center'}}>\r\n            <a onClick={() => UpdateCard()} className=\"flexAlignCenter modal-button\">Add to Profile</a>\r\n          </div>\r\n  \r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grow1 flexColumn flexCenter flexAlignCenter add-card1\" style={{height: 250}}>\r\n        <button onClick={() => setModalShow(true)}>\r\n          <AiOutlinePlusCircle style={{fontSize: 80, color: '#C0C0C0'}} />\r\n        </button>\r\n      </div>\r\n\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","F:\\Github\\zippy1\\src\\utility\\userContext.js",[],"F:\\Github\\zippy1\\src\\screens\\HomeScreen\\Hello.js",[],"F:\\Github\\zippy1\\src\\components\\Loader\\Loader.js",[],"F:\\Github\\zippy1\\src\\screens\\Error404.js",[],{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":16,"column":10,"nodeType":"237","messageId":"238","endLine":16,"endColumn":17},{"ruleId":"235","severity":1,"message":"236","line":7,"column":10,"nodeType":"237","messageId":"238","endLine":7,"endColumn":17},{"ruleId":"235","severity":1,"message":"239","line":1,"column":16,"nodeType":"237","messageId":"238","endLine":1,"endColumn":24},{"ruleId":"235","severity":1,"message":"236","line":6,"column":10,"nodeType":"237","messageId":"238","endLine":6,"endColumn":17},{"ruleId":"235","severity":1,"message":"240","line":6,"column":19,"nodeType":"237","messageId":"238","endLine":6,"endColumn":26},{"ruleId":"235","severity":1,"message":"239","line":2,"column":16,"nodeType":"237","messageId":"238","endLine":2,"endColumn":24},{"ruleId":"235","severity":1,"message":"241","line":8,"column":8,"nodeType":"237","messageId":"238","endLine":8,"endColumn":20},{"ruleId":"235","severity":1,"message":"242","line":12,"column":16,"nodeType":"237","messageId":"238","endLine":12,"endColumn":23},{"ruleId":"235","severity":1,"message":"243","line":12,"column":10,"nodeType":"237","messageId":"238","endLine":12,"endColumn":14},{"ruleId":"235","severity":1,"message":"243","line":21,"column":12,"nodeType":"237","messageId":"238","endLine":21,"endColumn":16},{"ruleId":"235","severity":1,"message":"244","line":2,"column":27,"nodeType":"237","messageId":"238","endLine":2,"endColumn":36},{"ruleId":"235","severity":1,"message":"240","line":7,"column":9,"nodeType":"237","messageId":"238","endLine":7,"endColumn":16},{"ruleId":"235","severity":1,"message":"245","line":8,"column":10,"nodeType":"237","messageId":"238","endLine":8,"endColumn":24},{"ruleId":"235","severity":1,"message":"243","line":20,"column":12,"nodeType":"237","messageId":"238","endLine":20,"endColumn":16},{"ruleId":"235","severity":1,"message":"244","line":1,"column":27,"nodeType":"237","messageId":"238","endLine":1,"endColumn":36},{"ruleId":"235","severity":1,"message":"240","line":10,"column":9,"nodeType":"237","messageId":"238","endLine":10,"endColumn":16},{"ruleId":"235","severity":1,"message":"236","line":10,"column":18,"nodeType":"237","messageId":"238","endLine":10,"endColumn":25},{"ruleId":"235","severity":1,"message":"245","line":11,"column":10,"nodeType":"237","messageId":"238","endLine":11,"endColumn":24},{"ruleId":"235","severity":1,"message":"243","line":22,"column":10,"nodeType":"237","messageId":"238","endLine":22,"endColumn":14},{"ruleId":"235","severity":1,"message":"244","line":2,"column":38,"nodeType":"237","messageId":"238","endLine":2,"endColumn":47},{"ruleId":"235","severity":1,"message":"236","line":4,"column":10,"nodeType":"237","messageId":"238","endLine":4,"endColumn":17},{"ruleId":"235","severity":1,"message":"245","line":6,"column":10,"nodeType":"237","messageId":"238","endLine":6,"endColumn":24},{"ruleId":"235","severity":1,"message":"246","line":17,"column":10,"nodeType":"237","messageId":"238","endLine":17,"endColumn":17},{"ruleId":"235","severity":1,"message":"245","line":7,"column":10,"nodeType":"237","messageId":"238","endLine":7,"endColumn":24},{"ruleId":"235","severity":1,"message":"243","line":14,"column":12,"nodeType":"237","messageId":"238","endLine":14,"endColumn":16},{"ruleId":"235","severity":1,"message":"243","line":14,"column":10,"nodeType":"237","messageId":"238","endLine":14,"endColumn":14},{"ruleId":"235","severity":1,"message":"243","line":13,"column":10,"nodeType":"237","messageId":"238","endLine":13,"endColumn":14},{"ruleId":"235","severity":1,"message":"239","line":2,"column":28,"nodeType":"237","messageId":"238","endLine":2,"endColumn":36},{"ruleId":"235","severity":1,"message":"236","line":8,"column":10,"nodeType":"237","messageId":"238","endLine":8,"endColumn":17},{"ruleId":"235","severity":1,"message":"240","line":8,"column":19,"nodeType":"237","messageId":"238","endLine":8,"endColumn":26},{"ruleId":"235","severity":1,"message":"245","line":9,"column":10,"nodeType":"237","messageId":"238","endLine":9,"endColumn":24},{"ruleId":"235","severity":1,"message":"243","line":14,"column":10,"nodeType":"237","messageId":"238","endLine":14,"endColumn":14},{"ruleId":"235","severity":1,"message":"242","line":14,"column":16,"nodeType":"237","messageId":"238","endLine":14,"endColumn":23},{"ruleId":"235","severity":1,"message":"239","line":2,"column":28,"nodeType":"237","messageId":"238","endLine":2,"endColumn":36},{"ruleId":"235","severity":1,"message":"241","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":20},{"ruleId":"235","severity":1,"message":"240","line":5,"column":9,"nodeType":"237","messageId":"238","endLine":5,"endColumn":16},{"ruleId":"235","severity":1,"message":"236","line":5,"column":18,"nodeType":"237","messageId":"238","endLine":5,"endColumn":25},{"ruleId":"235","severity":1,"message":"242","line":11,"column":18,"nodeType":"237","messageId":"238","endLine":11,"endColumn":25},{"ruleId":"235","severity":1,"message":"247","line":4,"column":17,"nodeType":"237","messageId":"238","endLine":4,"endColumn":21},{"ruleId":"235","severity":1,"message":"240","line":8,"column":10,"nodeType":"237","messageId":"238","endLine":8,"endColumn":17},{"ruleId":"235","severity":1,"message":"236","line":8,"column":19,"nodeType":"237","messageId":"238","endLine":8,"endColumn":26},{"ruleId":"235","severity":1,"message":"245","line":9,"column":10,"nodeType":"237","messageId":"238","endLine":9,"endColumn":24},{"ruleId":"235","severity":1,"message":"239","line":2,"column":28,"nodeType":"237","messageId":"238","endLine":2,"endColumn":36},{"ruleId":"235","severity":1,"message":"243","line":13,"column":10,"nodeType":"237","messageId":"238","endLine":13,"endColumn":14},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],"no-unused-vars","'getItem' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'setItem' is defined but never used.","'AdminService' is defined but never used.","'setUser' is assigned a value but never used.","'user' is assigned a value but never used.","'useEffect' is defined but never used.","'ToastContainer' is defined but never used.","'isLogin' is assigned a value but never used.","'Form' is defined but never used.","no-global-assign","no-unsafe-negation"]