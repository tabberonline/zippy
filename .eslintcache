[{"F:\\Github\\zippy1\\src\\index.js":"1","F:\\Github\\zippy1\\src\\reportWebVitals.js":"2","F:\\Github\\zippy1\\src\\App.js":"3","F:\\Github\\zippy1\\src\\screens\\ContactScreen\\ContactScreen.js":"4","F:\\Github\\zippy1\\src\\screens\\HomeScreen\\HomeScreen.js":"5","F:\\Github\\zippy1\\src\\screens\\AboutScreen\\AboutScreen.js":"6","F:\\Github\\zippy1\\src\\screens\\DisplayScreen\\DisplayScreen.js":"7","F:\\Github\\zippy1\\src\\screens\\PortfolioScreen\\PortfolioScreen.js":"8","F:\\Github\\zippy1\\src\\utility\\localStorageControl.js":"9","F:\\Github\\zippy1\\src\\components\\FAQCard\\FAQCard.js":"10","F:\\Github\\zippy1\\src\\components\\AchievementCard\\AchievementCard.js":"11","F:\\Github\\zippy1\\src\\components\\Header\\Header1.js":"12","F:\\Github\\zippy1\\src\\assets\\Datafiles\\AchievementsList.js":"13","F:\\Github\\zippy1\\src\\assets\\Datafiles\\QnA.js":"14","F:\\Github\\zippy1\\src\\components\\FeatureCard\\FeatureCard.js":"15","F:\\Github\\zippy1\\src\\assets\\Datafiles\\FeaturesList.js":"16","F:\\Github\\zippy1\\src\\components\\Footer\\Footer.js":"17","F:\\Github\\zippy1\\src\\assets\\Datafiles\\StudentA.js":"18","F:\\Github\\zippy1\\src\\components\\Header\\Header.js":"19","F:\\Github\\zippy1\\src\\components\\modals\\PortfolioModal.js":"20","F:\\Github\\zippy1\\src\\components\\modals\\ShareModal.js":"21","F:\\Github\\zippy1\\src\\components\\modals\\ContestProfileModal.js":"22","F:\\Github\\zippy1\\src\\components\\modals\\ProjectModal.js":"23","F:\\Github\\zippy1\\src\\components\\ContestCard\\ContestCard.js":"24","F:\\Github\\zippy1\\src\\components\\ProjectCard\\ProjectCard.js":"25","F:\\Github\\zippy1\\src\\components\\ProjectCard\\ProjectCardDisplay.js":"26","F:\\Github\\zippy1\\src\\components\\ContestCard\\ContestCardDisplay.js":"27","F:\\Github\\zippy1\\src\\components\\modals\\CodingProfileModal.js":"28","F:\\Github\\zippy1\\src\\components\\CodingCard\\CodingCardDisplay.js":"29","F:\\Github\\zippy1\\src\\components\\CodingCard\\CodingCard.js":"30","F:\\Github\\zippy1\\src\\AdminServices\\AdminService.js":"31","F:\\Github\\zippy1\\src\\components\\GoogleBtn.js":"32","F:\\Github\\zippy1\\src\\AdminServices\\dataService.js":"33","F:\\Github\\zippy1\\src\\components\\UpdateModals\\UpdateCodingProfile.js":"34","F:\\Github\\zippy1\\src\\components\\UpdateModals\\UpdateContestProfile.js":"35","F:\\Github\\zippy1\\src\\components\\UpdateModals\\UpdateProject.js":"36"},{"size":1425,"mtime":1609758914184,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1606770145559,"results":"39","hashOfConfig":"38"},{"size":571,"mtime":1610024052980,"results":"40","hashOfConfig":"38"},{"size":2357,"mtime":1609938060094,"results":"41","hashOfConfig":"38"},{"size":4731,"mtime":1610025293527,"results":"42","hashOfConfig":"38"},{"size":2186,"mtime":1609937956339,"results":"43","hashOfConfig":"38"},{"size":3014,"mtime":1609936788754,"results":"44","hashOfConfig":"38"},{"size":8269,"mtime":1610313216504,"results":"45","hashOfConfig":"38"},{"size":3078,"mtime":1610150327565,"results":"46","hashOfConfig":"38"},{"size":1177,"mtime":1607418136337,"results":"47","hashOfConfig":"38"},{"size":618,"mtime":1607242003310,"results":"48","hashOfConfig":"38"},{"size":1586,"mtime":1609937972892,"results":"49","hashOfConfig":"38"},{"size":386,"mtime":1607240277473,"results":"50","hashOfConfig":"38"},{"size":1157,"mtime":1607417994674,"results":"51","hashOfConfig":"38"},{"size":562,"mtime":1609134268531,"results":"52","hashOfConfig":"38"},{"size":1271,"mtime":1609080237567,"results":"53","hashOfConfig":"38"},{"size":671,"mtime":1608734478585,"results":"54","hashOfConfig":"38"},{"size":2757,"mtime":1607847671560,"results":"55","hashOfConfig":"38"},{"size":1060,"mtime":1610150327491,"results":"56","hashOfConfig":"38"},{"size":6765,"mtime":1610229838172,"results":"57","hashOfConfig":"38"},{"size":1765,"mtime":1609326913725,"results":"58","hashOfConfig":"38"},{"size":5713,"mtime":1610229800369,"results":"59","hashOfConfig":"38"},{"size":4944,"mtime":1610277168373,"results":"60","hashOfConfig":"38"},{"size":9547,"mtime":1610313753934,"results":"61","hashOfConfig":"38"},{"size":3924,"mtime":1610230095470,"results":"62","hashOfConfig":"38"},{"size":906,"mtime":1609937491406,"results":"63","hashOfConfig":"38"},{"size":1355,"mtime":1609937480207,"results":"64","hashOfConfig":"38"},{"size":5492,"mtime":1610229795539,"results":"65","hashOfConfig":"38"},{"size":1163,"mtime":1610150327381,"results":"66","hashOfConfig":"38"},{"size":9695,"mtime":1610313088204,"results":"67","hashOfConfig":"38"},{"size":7491,"mtime":1610226452435,"results":"68","hashOfConfig":"38"},{"size":3713,"mtime":1610313646076,"results":"69","hashOfConfig":"38"},{"size":2332,"mtime":1609895825640,"results":"70","hashOfConfig":"38"},{"size":5474,"mtime":1610279462194,"results":"71","hashOfConfig":"38"},{"size":5540,"mtime":1610230511400,"results":"72","hashOfConfig":"38"},{"size":4743,"mtime":1610230482502,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"17xg5nk",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"F:\\Github\\zippy1\\src\\index.js",[],["156","157"],"F:\\Github\\zippy1\\src\\reportWebVitals.js",[],"F:\\Github\\zippy1\\src\\App.js",[],"F:\\Github\\zippy1\\src\\screens\\ContactScreen\\ContactScreen.js",["158"],"import React from 'react';\r\nimport '../../styles/HelperStyles.css';\r\nimport './ContactScreen.css';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport contactimg from '../../assets/images/Contactimg.png';\r\nimport {Form} from 'react-bootstrap';\r\nimport Header1 from '../../components/Header/Header1';\r\n\r\nfunction ContactScreen() {\r\n  return (\r\n    <div className=\"contact-screen\">\r\n        <Header1 />\r\n        <div id=\"intro-section\">\r\n          <div className=\"mw1100 flexColumn\">\r\n            <div className=\"flexColumn flexAlignCenter flexCenter mh-20\" style={{height: 300, borderRadius: 8}}>\r\n                <img src={contactimg} alt=\"\" style={{width: '90%'}} />\r\n            </div>\r\n            <div className=\"flexColumn contact-section\">\r\n                <h1 className=\"contact-heading\">Have anything to ask?</h1>\r\n                <div className=\"flexColumn flexAround flexAlignCenter mv-40\">\r\n                    <Form style={{width: '60%'}}>\r\n                        <Form.Group controlId=\"formBasicEmail\" className=\"mb-20\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"name\"/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\" className=\"mb-20\">\r\n                            <Form.Label>Email </Form.Label>\r\n                            <Form.Control type=\"text\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\" className=\"mb-20\">\r\n                            <Form.Label>Subject</Form.Label>\r\n                            <Form.Control type=\"text\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Message</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={5} />\r\n                        </Form.Group>\r\n\r\n                        <div className=\"share\" style={{justifyContent: 'flex-start', paddingLeft: 0, paddingTop: 30}}>\r\n                            <a href=\"\" className=\"flexAlignCenter modal-button\">Send</a>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n        <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactScreen;\r\n","F:\\Github\\zippy1\\src\\screens\\HomeScreen\\HomeScreen.js",["159","160","161","162"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useEffect} from 'react';\r\nimport '../../styles/HelperStyles.css';\r\nimport './HomeScreen.css';\r\nimport Header from '../../components/Header/Header';\r\nimport introimg from '../../assets/images/handshake-colour.png';\r\nimport whytabber from '../../assets/images/drawkit-content-man-colour.png'\r\nimport {BiCheckCircle} from 'react-icons/bi';\r\nimport FeaturesList from '../../assets/Datafiles/FeaturesList';\r\nimport FeatureCard from '../../components/FeatureCard/FeatureCard';\r\nimport AchievementsList from '../../assets/Datafiles/AchievementsList';\r\nimport AchievementCard from '../../components/AchievementCard/AchievementCard';\r\nimport QnA from '../../assets/Datafiles/QnA';\r\nimport FAQCard from '../../components/FAQCard/FAQCard';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport { setItem, getItem } from '../../utility/localStorageControl';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PortfolioModal from '../../components/modals/PortfolioModal';\r\n\r\nfunction HomeScreen() {\r\n  return (\r\n    <div className=\"#home-screen\">\r\n      <Header />\r\n      <div id=\"intro-section\">\r\n          <div className=\"mw1100 flexRow flexAround flexAlignCenter\">\r\n            <img className=\"intro-img\" src={introimg} alt=\"intro\" />\r\n            <div className=\"mw600 flexColumn\">\r\n                <h1 className=\"intro-text\">\r\n                    Improve your chances of getting hired, just Tab it for \r\n                    <span style={{color: 'rgba(0,229,216,1)'}}> FREE</span>\r\n                </h1>\r\n                <ToastContainer\r\n                  position=\"top-center\"\r\n                  autoClose={3000}\r\n                  hideProgressBar={true}\r\n                  newestOnTop={false}\r\n                  closeOnClick\r\n                  rtl={false}\r\n                  pauseOnFocusLoss\r\n                  draggable\r\n                  pauseOnHover\r\n                />\r\n                <PortfolioModal home={true} />\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div id=\"why-tabber\">\r\n          <div className=\"mw1100 flexRow flexAround flexAlignCenter\">\r\n            <div className=\"mw600 flexColumn mv-40\">\r\n                <h1 className=\"whytabber-heading\">Why <span style={{color: '#077A73'}}>tabber?</span></h1>\r\n                <p className=\"whytabber-text\">Are you tired of sending <strong>each and every link</strong> to recruiters taking the hassle of mentioning each and every <strong>rank</strong>? Say no more! because Tabber is here to make this a possibility.</p>\r\n                <p className=\"whytabber-features mt-50 mb-20\">The features which are covered in this</p>\r\n                <p className=\"ml-20 whytabber-point flexAlignCenter\"><BiCheckCircle style={{color: '#077A73', marginRight: 10}} />Add all your portfolio profiles.</p>\r\n                <p className=\"ml-20 whytabber-point flexAlignCenter\"><BiCheckCircle style={{color: '#077A73', marginRight: 10}} />Edit your resume live on the go.</p>\r\n                <p className=\"ml-20 pb-100 whytabber-point flexAlignCenter\"><BiCheckCircle style={{color: '#077A73', marginRight: 10}} />Get a single shareable link.</p>\r\n            </div>\r\n            <img className=\"intro-img\" src={whytabber} alt=\"why-tabber\" />\r\n          </div>\r\n      </div>\r\n      <div id=\"tabberfeatures\">\r\n          <div className=\"mw1100 pl-40 flexColumn\">\r\n            <h1 className=\"tabberfeatures-heading\">What we got you</h1>\r\n            <div className=\"flexRow flexBetween\" style={{flexWrap: 'wrap'}}>\r\n                {FeaturesList.map(feature => (\r\n                    <FeatureCard key={feature.sr} name={feature.name} desc={feature.desc} img={feature.img} />\r\n                ))}\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div id=\"achievements\">\r\n        <div className=\"mw1100 pl-40 flexColumn\">\r\n            <h1 className=\"achievements-heading\">Achievements we have made, so far</h1>\r\n            <div className=\"flexRow flexCenter\" style={{flexWrap: 'wrap'}}>\r\n                {AchievementsList.map(achievement => (\r\n                    <AchievementCard key={achievement.sr} name={achievement.name} desc={achievement.desc} image={achievement.image} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"faq\">\r\n          <div className=\"mw1100 ph-40 flexColumn\">\r\n            <h1 className=\"tabberfeatures-heading\">Frequently Asked Questions</h1>\r\n            {QnA.map(ques => (\r\n                <FAQCard key={ques.sr} ques={ques.ques} ans={ques.ans} />\r\n            ))}\r\n          </div>\r\n       </div>\r\n       <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","F:\\Github\\zippy1\\src\\screens\\AboutScreen\\AboutScreen.js",[],"F:\\Github\\zippy1\\src\\screens\\DisplayScreen\\DisplayScreen.js",[],"F:\\Github\\zippy1\\src\\screens\\PortfolioScreen\\PortfolioScreen.js",["163","164","165","166"],"import React, { useState } from 'react';\r\nimport '../../styles/HelperStyles.css';\r\nimport './PortfolioScreen.css';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport StudentA from '../../assets/Datafiles/StudentA';\r\nimport CodingCard from '../../components/CodingCard/CodingCard';\r\nimport ContestCard from '../../components/ContestCard/ContestCard';\r\nimport ProjectCard from '../../components/ProjectCard/ProjectCard';\r\nimport CodingProfileModal from '../../components/modals/CodingProfileModal';\r\nimport ContestProfileModal from '../../components/modals/ContestProfileModal';\r\nimport ProjectModal from '../../components/modals/ProjectModal';\r\nimport ShareModal from '../../components/modals/ShareModal';\r\nimport {AiOutlineEdit} from 'react-icons/ai';\r\nimport $ from 'jquery';\r\nimport Header1 from '../../components/Header/Header1';\r\nimport { getItem, setItem, ReversePortalMap } from '../../utility/localStorageControl';\r\nimport AdminService from '../../AdminServices/AdminService';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction PortfolioScreen() {\r\n  const [name, setname] = useState(getItem('name'));\r\n  const [title, settitle] = useState(getItem('titlePortfolio'));\r\n  const [desc, setdesc] = useState(getItem('descPortfolio'));\r\n  const [rankWidgets, setrankwidgets] = useState(getItem('rankWidgets'));\r\n  const [contestWidgets, setcontestwidgets] = useState(getItem('contestWidgets'));\r\n  const [projectWidgets, setprojectwidgets] = useState(getItem('projectWidgets'));\r\n  const Edit1 = () => {\r\n    console.log('edittable1')\r\n    $(\".title\").prop(\"readonly\", false);\r\n  } \r\n  const Edit2 = () => {\r\n    console.log('edittable2')\r\n    $(\".desc\").prop(\"readonly\", false);\r\n  } \r\n  const updateTitle = (event) => {\r\n    settitle(event.target.value);\r\n    setItem('titlePortfolio', title);\r\n    UpdatePortfolio();\r\n  }\r\n  const updateDesc = (event) => {\r\n    setdesc(event.target.value);\r\n    setItem('descPortfolio', desc);\r\n    UpdatePortfolio();\r\n  }\r\n  const UpdatePortfolio = async () =>{\r\n    if(desc.length > 0 && title.length > 0){\r\n      const UpdatePortfolioData = {\r\n        'title': getItem('titlePortfolio'),\r\n        'description': getItem('descPortfolio'),\r\n      }\r\n      console.log(UpdatePortfolioData);\r\n      AdminService.updatePortfolio(UpdatePortfolioData)\r\n        .then(resp => {\r\n          console.log('Response', resp);\r\n          toast.success('Details Updated!', {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n        })\r\n        .catch(err => {\r\n          console.log('Error', err);\r\n          toast.error('Error, Please retry!', {\r\n            position: \"top-center\",\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n        });\r\n    } else {\r\n      toast.error('Error, Fields cannot be empty!', {\r\n        position: \"top-center\",\r\n        autoClose: 2000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"#portfolio-screen\">      \r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={3000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Header1 />\r\n      <ShareModal />\r\n      <div className=\"mw1100\">\r\n        <div className=\"p-40 flexColumn portfolio-section\">\r\n          {StudentA.map(student => (\r\n            <div className=\"flexColumn\">\r\n              <div className=\"flexRow flexCenter flexAlignCenter\">\r\n                <input type=\"text\" autoComplete=\"off\" autoCorrect=\"off\" autoCapitalize=\"off\" spellCheck=\"false\" className=\"title\" defaultValue={title} onBlur={(event) => updateTitle(event)} placeholder=\"Portfolio Title\" readOnly />\r\n                <div className=\"flexRow flexCenter flexAlignCenter iconcontainer1\">\r\n                  <AiOutlineEdit className=\"portfolio-icon\" size=\"20\" onClick={()=>Edit1()} />\r\n                </div>\r\n              </div>\r\n              <hr style={{color : '#717070', width: '80%', margin: 'auto', marginTop: 10}} />\r\n              <div className=\"flexColumn\" style={{margin: 40, marginLeft: 0, marginBottom: 0}}>\r\n                <p className=\"name mb-20 pl-20\">Hello! I am <strong>{name}</strong></p>\r\n                <div className=\"flexRow\">\r\n                  <textarea autocomplete=\"off\" autoCorrect=\"off\" autoCapitalize=\"off\" spellCheck=\"false\" rows=\"5\" className=\"desc\" defaultValue={desc} onBlur={(event) => updateDesc(event)} readOnly placeholder=\"Enter your College and profile description here\" />\r\n                  <div className=\"flexRow flexCenter flexAlignCenter iconcontainer1\" style={{left: -15, top: -15}}>\r\n                    <AiOutlineEdit className=\"portfolio-icon\" size=\"20\" onClick={()=>Edit2()} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"coding-profile mv-20\">\r\n                <p className=\"card-heading mb-20\">Coding Profile</p>\r\n                <div className=\"flexRow flexWrap\">\r\n                  { rankWidgets !== [''] ?\r\n                      (\r\n                        rankWidgets.map(profile => (\r\n                          <CodingCard name={ReversePortalMap.get(profile.website_id.toString()).name} id={profile.website_username} rank={profile.rank} logo={ReversePortalMap.get(profile.website_id.toString()).logo} hide={profile.invisible} />\r\n                        ))\r\n                      ) : null\r\n                  }\r\n                  {\r\n                    rankWidgets.length <= 5 ? (\r\n                      <CodingProfileModal />\r\n                    ) : null\r\n                  }\r\n                </div>\r\n              </div>\r\n              <div className=\"coding-profile mv-20\">\r\n                <p className=\"card-heading mb-20\">Contests Won</p>\r\n                <div className=\"flexRow flexWrap\">\r\n                  { contestWidgets !== [''] ?\r\n                      (\r\n                        contestWidgets.map(profile => (\r\n                          <ContestCard card_id={profile.id} name={ReversePortalMap.get(profile.website_id.toString()).name} id={profile.website_username} rank={profile.rank} logo={ReversePortalMap.get(profile.website_id.toString()).logo} contest={profile.contest_name} hide={profile.invisible} />\r\n                        ))\r\n                      ) : null\r\n                  }\r\n                  {\r\n                    contestWidgets.length <= 5 ? (\r\n                      <ContestProfileModal />\r\n                    ) : null\r\n                  }\r\n                </div>\r\n              </div>\r\n              <div className=\"coding-profile mv-20\">\r\n                <p className=\"card-heading mb-20\">Personal Projects</p>\r\n                <div className=\"flexRow flexWrap\">\r\n                  { projectWidgets !== [''] ?\r\n                      (\r\n                        projectWidgets.map(project => (\r\n                          <ProjectCard name={project.title} img=\"\" url={project.link} id={project.id} hide={project.invisible} />\r\n                        ))\r\n                      ) : null\r\n                  }   \r\n                  {\r\n                    projectWidgets.length <= 5 ? ( \r\n                      <ProjectModal />\r\n                    ) : null\r\n                  }             \r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div className=\"flexRow flexCenter ph-20 flexAlignCenter mv-40\">\r\n            <hr style={{width: '35%', color: 'rgba(154,154,154,1)'}} />\r\n            <p className=\"end-text\">Thats all folks</p>\r\n            <hr style={{width: '35%', color: 'rgba(154,154,154,1)'}} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PortfolioScreen;\r\n","F:\\Github\\zippy1\\src\\utility\\localStorageControl.js",[],"F:\\Github\\zippy1\\src\\components\\FAQCard\\FAQCard.js",[],"F:\\Github\\zippy1\\src\\components\\AchievementCard\\AchievementCard.js",[],"F:\\Github\\zippy1\\src\\components\\Header\\Header1.js",["167","168"],"import {React, useState} from 'react';\r\nimport './Header.css';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport splashlogo from '../../assets/images/logo.png';\r\nimport GoogleBtn from '../GoogleBtn';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { getItem, setItem } from '../../utility/localStorageControl';\r\n\r\nfunction Header1(){\r\n    return (\r\n        <header className=\"header\">\r\n            <Navbar sticky=\"top\" expand=\"lg\" className=\"flexRow flexAlignCenter navbar\">\r\n                <Navbar.Brand href=\"/home\">\r\n                    <img src={splashlogo} width=\"150\" height=\"30\" className=\"d-inline-block mr-80\" alt=\"logo\" />\r\n                </Navbar.Brand>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\" className=\"w100 flexRow flexAlignCenter flexBetween\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"/about\">About</Nav.Link>\r\n                        <Nav.Link href=\"/home#faq\">FAQ</Nav.Link>\r\n                        <Nav.Link href=\"/contact\">Contact</Nav.Link>\r\n                    </Nav>\r\n                    {getItem('login') ? (\r\n                        <div className=\"avatar\">\r\n                            <Avatar alt=\"img\" src={getItem('image')} />\r\n                            <p className=\"avatar-name\">Welcome<br/><p className=\"name\">{getItem('name')}</p></p>\r\n                        </div>\r\n                    ) : (\r\n                        <GoogleBtn />\r\n                    )}\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header1;","F:\\Github\\zippy1\\src\\assets\\Datafiles\\AchievementsList.js",[],"F:\\Github\\zippy1\\src\\assets\\Datafiles\\QnA.js",[],"F:\\Github\\zippy1\\src\\components\\FeatureCard\\FeatureCard.js",[],"F:\\Github\\zippy1\\src\\assets\\Datafiles\\FeaturesList.js",[],"F:\\Github\\zippy1\\src\\components\\Footer\\Footer.js",[],"F:\\Github\\zippy1\\src\\assets\\Datafiles\\StudentA.js",[],"F:\\Github\\zippy1\\src\\components\\Header\\Header.js",["169"],"import {React, useState} from 'react';\r\nimport './Header.css';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport splashlogo from '../../assets/images/logo.png';\r\nimport GoogleBtn from '../GoogleBtn';\r\n\r\nfunction Header(){\r\n    return (\r\n        <header className=\"header\">\r\n            <Navbar sticky=\"top\" expand=\"lg\" className=\"flexRow flexAlignCenter navbar\">\r\n                <Navbar.Brand href=\"/home\">\r\n                    <img src={splashlogo} width=\"150\" height=\"30\" className=\"d-inline-block mr-80\" alt=\"logo\" />\r\n                </Navbar.Brand>\r\n                <div className=\"w100 flexRow flexAlignCenter flexBetween\">\r\n                    <Nav className=\"mr-auto flexRow\">\r\n                        <Nav.Link href=\"/about\">About</Nav.Link>\r\n                        <Nav.Link href=\"/home#faq\">FAQ</Nav.Link>\r\n                        <Nav.Link href=\"/contact\">Contact</Nav.Link>\r\n                    </Nav>\r\n                    <GoogleBtn />\r\n                </div>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","F:\\Github\\zippy1\\src\\components\\modals\\PortfolioModal.js",[],"F:\\Github\\zippy1\\src\\components\\modals\\ShareModal.js",[],"F:\\Github\\zippy1\\src\\components\\modals\\ContestProfileModal.js",[],"F:\\Github\\zippy1\\src\\components\\modals\\ProjectModal.js",[],"F:\\Github\\zippy1\\src\\components\\ContestCard\\ContestCard.js",[],"F:\\Github\\zippy1\\src\\components\\ProjectCard\\ProjectCard.js",[],"F:\\Github\\zippy1\\src\\components\\ProjectCard\\ProjectCardDisplay.js",["170"],"import React, { useState } from 'react';\r\nimport '../../styles/HelperStyles.css';\r\nimport './ProjectCard.css';\r\n\r\nexport default function ProjectCardDisplay({name, img, techstack}){\r\n    const [namecard, setcard] = useState(true);\r\n    return(\r\n        <div className=\"flexColumn project-card flexEnd\" \r\n            style={{  \r\n                backgroundImage: img === \"\" ? null : `url(\"${img}\")`,\r\n                backgroundColor: 'rgba(219,219,219,1)',\r\n                backgroundSize: 'cover',\r\n                backgroundRepeat: 'no-repeat'\r\n            }}\r\n        >\r\n            {\r\n                namecard ? (\r\n                    <div className=\"flexColumn flexCenter flexAlignCenter project-textbox\">\r\n                        <p className=\"project-name\">{ name.length > 0 ? name : \"Sample Webpage\"}</p>\r\n                    </div>\r\n                ) : null\r\n            }\r\n        </div>\r\n    );\r\n}","F:\\Github\\zippy1\\src\\components\\ContestCard\\ContestCardDisplay.js",["171"],"import React, { useState } from 'react';\r\nimport '../../styles/HelperStyles.css';\r\nimport './ContestCard.css';\r\n\r\nexport default function ContestCardDisplay({name, rank, id, logo, contest}){\r\n    return(\r\n        <div className=\"card11 flexColumn achievement-card\">\r\n            <div className=\"flexRow flexCenter\" style={{position: 'relative'}}>\r\n                {logo === \"\" ? (\r\n                    <div className=\"flexRow flexCenter flexAlignCenter empty-logo\">\r\n                        <p className=\"profile-name\" style={{fontWeight: 700, color: 'white'}}>LOGO</p>\r\n                    </div>\r\n                ) : (\r\n                    <img className=\"logo\" src={logo} alt=\"logo\" />\r\n                )}\r\n            </div>\r\n            <p className=\"profile-name pl-20 mb-10\"> {name === \"\" ? \"Company Name\" : name}</p>\r\n            <div className=\"flexRow flexBetween\"> \r\n                <p className=\"profile-name ph-20 mb-10\"><span className=\"profile-heading\">ID:</span> {id === \"\" ?  \"Id here\" : id }</p>\r\n                <p className=\"profile-name ph-20 mb-10\"><span className=\"profile-heading\">Rank:</span> {rank === \"\" ?  \"?\" : rank  }</p>\r\n            </div>\r\n            <p className=\"profile-name ph-20 mb-10\"><span className=\"profile-heading\">Contest Name: </span>{contest === \"\" ? \"Contest Name\" : contest }</p>\r\n        </div>\r\n    );\r\n}","F:\\Github\\zippy1\\src\\components\\modals\\CodingProfileModal.js",[],"F:\\Github\\zippy1\\src\\components\\CodingCard\\CodingCardDisplay.js",[],"F:\\Github\\zippy1\\src\\components\\CodingCard\\CodingCard.js",["172"],"import React, { useState } from 'react';\r\nimport '../../styles/HelperStyles.css';\r\nimport './CodingCard.css';\r\nimport {BsThreeDotsVertical} from 'react-icons/bs';\r\nimport deleted from '../../assets/images/Bin-Icon.png';\r\nimport edited from '../../assets/images/Edit-Icon.png';\r\nimport hidden from '../../assets/images/Hide-Icon.png';\r\nimport hidecards from '../../assets/images/hiddeeen.png';\r\nimport {setItem, getItem, PortalMap} from '../../utility/localStorageControl';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport AdminService from '../../AdminServices/AdminService';\r\nimport UpdateCodingProfile from '../UpdateModals/UpdateCodingProfile';\r\n\r\nexport default function CodingCard({name, rank, id, logo, hide}){        \r\n    var invisible = hide;\r\n    const [ bullets, setbullets ] = useState(true);\r\n    const [ drawer, setdrawer ] = useState(false);\r\n    const [option1, setoption1] = useState(false);\r\n    const [option2, setoption2] = useState(false);\r\n    const [option3, setoption3] = useState(false);\r\n    const [icon1, seticon1] = useState(true);\r\n    const [icon2, seticon2] = useState(true);\r\n    const [icon3, seticon3] = useState(true);\r\n\r\n    const OptionDrawer = () => {\r\n        setdrawer(true);\r\n        setbullets(false);\r\n    }\r\n    const CloseOptionDrawer = () => {\r\n        setdrawer(false);\r\n        setbullets(true);\r\n    }\r\n\r\n    const formatPortal = portal => {\r\n        return portal.split(' ').join('').toLowerCase();\r\n    }\r\n\r\n    const updateRankWidget = async (name) => {        \r\n          var website_name = formatPortal(name);\r\n          var website_id = PortalMap.get(website_name).id;\r\n          const rankWidgetData = {\r\n            'website_id' : website_id,\r\n            'rank' : rank,\r\n            'username': id,\r\n            'invisible' : invisible,\r\n          }\r\n          console.log(rankWidgetData);\r\n          AdminService.updateRankWidget(rankWidgetData)\r\n            .then(response => {\r\n              toast.success('Card Hidden!', {\r\n                position: \"top-center\",\r\n                autoClose: 2000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n              });\r\n              AdminService.getUserData()\r\n                .then(resp => {\r\n                  setItem('rankWidgets', resp.data.rank_widgets);\r\n                  window.open('/portfolio', '_self')\r\n                })\r\n                .catch(err => console.log(err));\r\n            })\r\n            .catch(error => {\r\n              toast.error('Error hiding!', {\r\n                position: \"top-center\",\r\n                autoClose: 2000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n              });\r\n            });\r\n        }\r\n\r\n      const unHideCard = (name) => {\r\n        invisible = false;\r\n        updateRankWidget(name);\r\n      }\r\n  \r\n      const HideCard = (name) => {\r\n        invisible = true;\r\n        updateRankWidget(name)\r\n      }\r\n\r\n    const DeleteCard = async (name) => {\r\n        var website_name = formatPortal(name);\r\n        var website_id = PortalMap.get(website_name).id;\r\n\r\n        AdminService.deleteRankWidget(website_id)\r\n            .then(response => {\r\n                toast.success('Card deleted successfully!', {\r\n                    position: \"top-center\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                AdminService.getUserData()\r\n                    .then(resp => {\r\n                      setItem('rankWidgets', resp.data.rank_widgets);\r\n                      window.open('/portfolio', '_self')\r\n                    })\r\n                    .catch(err => console.log(err));\r\n                })\r\n            .catch(error => {\r\n                toast.error('Error, Cannot delete this card!', {\r\n                    position: \"top-center\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                })\r\n            });\r\n    }\r\n\r\n    return(\r\n            <div className=\"card11 flexColumn profile-card\" onMouseLeave={() => CloseOptionDrawer()}>\r\n                {\r\n                    invisible ? (\r\n                        <div id=\"overlay\" onClick={() => unHideCard(name)} className=\"flexColumn flexCenter flexAlignCenter\">\r\n                            <img src={hidecards} alt=\"hidden\" className=\"hide-card-icon\" style={{height:30, width: 30, marginBottom: 10}} />\r\n                            <p className=\"options-text\" style={{color: 'white'}}>Hidden</p>\r\n                        </div>\r\n                    ) : null\r\n                }\r\n                <div className=\"flexRow flexCenter\" style={{position: 'relative'}}>\r\n                    {logo === \"\" ? (\r\n                        <div className=\"flexRow flexCenter flexAlignCenter empty-logo\">\r\n                            <p className=\"profile-name\" style={{fontWeight: 700, color: 'white'}}>LOGO</p>\r\n                        </div>\r\n                    ) : (\r\n                        <img className=\"logo\" src={logo} alt=\"logo\" />\r\n                    )}\r\n                    { bullets ? (\r\n                        <div onClick={() => OptionDrawer()} className=\"flexRow option-drawer flexCenter flexAlignCenter iconcontainer\">\r\n                            <BsThreeDotsVertical className=\"portfolio-icon\" size=\"20\" />                    \r\n                        </div>\r\n                        ) : null \r\n                    }\r\n                    { drawer ? (\r\n                        <div className=\"flexColumn flexStart options\" style={{position: 'absolute', top: '-15%', right:'-2%'}}>\r\n                            {icon1 ? (<img src={deleted} alt=\"delete\" onMouseEnter={() => {setoption1(true); seticon1(false);}} onClick={() => DeleteCard(name)} className=\"delete-icon\" style={{height:30, width: 30, marginBottom: 10, marginLeft: option2 ? 50 : null || option3 ? 50 : null}} />) : null }\r\n                            { option1 ? (\r\n                                <div className=\"flexRow flexAlignCenter option delete-option\" onClick={() => DeleteCard(name)} onMouseLeave={() => {setoption1(false); seticon1(true);}} style={{ marginBottom: 10, position: 'relative', left: 40 }}>\r\n                                    <img src={deleted} alt=\"delete\" style={{height:30, width: 30, marginRight: 10}} />\r\n                                    <p className=\"options-text\">Delete</p>\r\n                                </div>                            \r\n                                ) : null\r\n                            }\r\n                            {icon2 ? (<img src={edited} alt=\"edit\" onMouseEnter={() => {setoption2(true); seticon2(false);}} className=\"edit-icon\" style={{height:30, width: 30, marginBottom: 10, marginLeft: option1 ? 50 : null || option3 ? 50 : null}} />) : null}\r\n                            { option2 ? (\r\n                                <div className=\"flexRow flexAlignCenter option edit-option\" onMouseLeave={() => {setoption2(false); seticon2(true);}} style={{ marginBottom: 10, position: 'relative', left: 40 }}>\r\n                                    <UpdateCodingProfile portalName={name} Rank={rank} userName={id} />\r\n                                    <p className=\"options-text\">Edit</p>\r\n                                </div>\r\n                                ) : null\r\n                            }\r\n                            {icon3 ? (<img src={hidden} alt=\"hide\" onMouseEnter={() => {setoption3(true); seticon3(false);}} className=\"hide-icon\" style={{height:30, width: 30, marginBottom: 10, marginLeft: option2 ? 50 : null || option1 ? 50 : null}} />) : null}\r\n                            { option3 ? (\r\n                                <div className=\"flexRow flexAlignCenter option hide-option\" onClick={() => HideCard(name)} onMouseLeave={() => {setoption3(false); seticon3(true);}} style={{ marginBottom: 10, position: 'relative', left: 40 }}>\r\n                                    <img src={hidden} alt=\"hide\" style={{height:30, width: 30, marginRight: 10}} />\r\n                                    <p className=\"options-text\">Hide</p>\r\n                                </div>\r\n                                ) : null\r\n                            }\r\n                        </div>\r\n                        ) : null\r\n                    }\r\n                </div>\r\n                <ToastContainer\r\n                    position=\"top-center\"\r\n                    autoClose={3000}\r\n                    hideProgressBar={true}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                />\r\n                <p className=\"profile-name pl-20 mb-10\"> {name === \"\" ? \"Company Name\" : name}</p>\r\n                <p className=\"profile-name ph-20 mb-10\"><span className=\"profile-heading\">ID:</span> {id === \"\" ?  \"Id here\" : id }</p>\r\n                <p className=\"profile-name ph-20 mb-10\"><span className=\"profile-heading\">Rank:</span> {rank === \"\" ?  \"?\" : rank  }</p>\r\n            </div>\r\n    );\r\n}","F:\\Github\\zippy1\\src\\AdminServices\\AdminService.js",[],"F:\\Github\\zippy1\\src\\components\\GoogleBtn.js",[],"F:\\Github\\zippy1\\src\\AdminServices\\dataService.js",[],"F:\\Github\\zippy1\\src\\components\\UpdateModals\\UpdateCodingProfile.js",[],"F:\\Github\\zippy1\\src\\components\\UpdateModals\\UpdateContestProfile.js",[],["173","174"],"F:\\Github\\zippy1\\src\\components\\UpdateModals\\UpdateProject.js",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":43,"column":29,"nodeType":"181","endLine":43,"endColumn":81},{"ruleId":"182","severity":1,"message":"183","line":2,"column":16,"nodeType":"184","messageId":"185","endLine":2,"endColumn":25},{"ruleId":"182","severity":1,"message":"186","line":16,"column":10,"nodeType":"184","messageId":"185","endLine":16,"endColumn":17},{"ruleId":"182","severity":1,"message":"187","line":16,"column":19,"nodeType":"184","messageId":"185","endLine":16,"endColumn":26},{"ruleId":"182","severity":1,"message":"188","line":17,"column":26,"nodeType":"184","messageId":"185","endLine":17,"endColumn":31},{"ruleId":"182","severity":1,"message":"189","line":22,"column":16,"nodeType":"184","messageId":"185","endLine":22,"endColumn":23},{"ruleId":"182","severity":1,"message":"190","line":25,"column":23,"nodeType":"184","messageId":"185","endLine":25,"endColumn":37},{"ruleId":"182","severity":1,"message":"191","line":26,"column":26,"nodeType":"184","messageId":"185","endLine":26,"endColumn":43},{"ruleId":"182","severity":1,"message":"192","line":27,"column":26,"nodeType":"184","messageId":"185","endLine":27,"endColumn":43},{"ruleId":"182","severity":1,"message":"193","line":1,"column":16,"nodeType":"184","messageId":"185","endLine":1,"endColumn":24},{"ruleId":"182","severity":1,"message":"186","line":7,"column":19,"nodeType":"184","messageId":"185","endLine":7,"endColumn":26},{"ruleId":"182","severity":1,"message":"193","line":1,"column":16,"nodeType":"184","messageId":"185","endLine":1,"endColumn":24},{"ruleId":"182","severity":1,"message":"194","line":6,"column":22,"nodeType":"184","messageId":"185","endLine":6,"endColumn":29},{"ruleId":"182","severity":1,"message":"193","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"187","line":9,"column":18,"nodeType":"184","messageId":"185","endLine":9,"endColumn":25},{"ruleId":"175","replacedBy":"195"},{"ruleId":"177","replacedBy":"196"},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setItem' is defined but never used.","'getItem' is defined but never used.","'toast' is defined but never used.","'setname' is assigned a value but never used.","'setrankwidgets' is assigned a value but never used.","'setcontestwidgets' is assigned a value but never used.","'setprojectwidgets' is assigned a value but never used.","'useState' is defined but never used.","'setcard' is assigned a value but never used.",["197"],["198"],"no-global-assign","no-unsafe-negation"]